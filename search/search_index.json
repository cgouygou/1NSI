{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cours de Premi\u00e8re NSI - Groupe 1 - M. Gouygou","text":"<p>\u00c0 propos de NSI...</p> <p>Vous trouverez sur ce site tous les cours, TP, exercices, \u00e9valuations de l'ann\u00e9e en sp\u00e9cialit\u00e9 NSI. Mais aussi:</p> ProgrammeProgression (approximative)L\u00e9gende du siteLiens utilesSources <p>Le programme de NSI est articul\u00e9 autour de sept th\u00e8mes.</p> <p>Nous traiterons les diff\u00e9rentes entr\u00e9es du programme dans les chapitres suivants:</p> Th\u00e8me 1Th\u00e8me 2Th\u00e8me 3Th\u00e8me 4Th\u00e8me 5Th\u00e8me 6Th\u00e8me 7 <p>Th\u00e8me 1: Repr\u00e9sentation des donn\u00e9es, types et valeurs de base</p> <p>1.1 \u00c9criture d'un entier positif dans une base \\(b \\geqslant 2\\) (2, 10 ou 16).</p> <p>1.2 Valeurs et expressions bool\u00e9ennes</p> <p>1.3 Repr\u00e9sentation binaire d'un entier relatif</p> <p>1.4 Codage des caract\u00e8res</p> <p>1.5 Repr\u00e9sentation des r\u00e9els: nombres flottants</p> <p>Th\u00e8me 2:  Repr\u00e9sentation des donn\u00e9es, types construits</p> <p>2.1 Tableaux et listes</p> <p>2.2 Dictionnaires</p> <p>Th\u00e8me 3: Traitement de donn\u00e9es en tables</p> <p>3.1 Manipulation, recherche et tri de tables</p> <p>3.2 Fusion et jointure de tables</p> <p>Th\u00e8me 4: Interaction entre l'homme et la machine (IHM) sur le Web</p> <p>4.1 Pages Web et interactions</p> <p>4.2 Protocole HTTP</p> <p>4.3 Requ\u00eates GET/POST et formulaires d'une page Web</p> <p>Th\u00e8me 5: Architectures mat\u00e9rielles et syst\u00e8mes d'exploitation</p> <p>5.1 Mod\u00e8le de Von Neumann</p> <p>5.2 Syst\u00e8mes d'exploitation</p> <p>5.3 Architecture d'un r\u00e9seau</p> <p>5.4 IHM, capteurs (Microbit)</p> <p>Th\u00e8me 6: Langages et programmation</p> <p>6.1 Prise en main de Python</p> <p>6.2 Utilisation de biblioth\u00e8ques</p> <p>6.3 Sp\u00e9cification</p> <p>6.4 Jeux de tests</p> <p>Th\u00e8me 7: Algorithmique</p> <p>7.1 Parcours s\u00e9quentiel d'un tableau</p> <p>7.2 Algorithmes de tri</p> <p>7.3 Recherche dichotomique dans un tableau tri\u00e9</p> <p>7.4 Algorithmes gloutons</p> <p>7.5 Algorithme des \\(k\\) plus proches voisins</p> <p>Cette progression est d\u00e9coup\u00e9e selon les 5 p\u00e9riodes entre les vacances.</p> P\u00e9riode 1P\u00e9riode 2P\u00e9riode 3P\u00e9riode 4P\u00e9riode 5 <p>6.1 Prise en main de Python</p> <p>1.1 \u00c9criture d'un entier positif dans une base \\(b \\geqslant 2\\) (2, 10 ou 16).</p> <p>6.2 Utilisation de biblioth\u00e8ques</p> <p>1.2 Valeurs et expressions bool\u00e9ennes</p> <p>1.3 Repr\u00e9sentation binaire d'un entier relatif</p> <p>6.3 Jeux de tests</p> <p>6.4 Sp\u00e9cification</p> <p>2.1 Tableaux et listes</p> <p>7.1 Parcours s\u00e9quentiel d'un tableau</p> <p>1.4 Codage des caract\u00e8res</p> <p>4.1 Pages Web et interactions</p> <p>5.1 Mod\u00e8le de Von Neumann</p> <p>2.2 Dictionnaires</p> <p>3.1 Manipulation, recherche et tri de tables</p> <p>3.2 Fusion et jointure de tables</p> <p>5.2 Syst\u00e8mes d'exploitation</p> <p>7.2 Algorithmes de tri</p> <p>4.2 Protocole HTTP</p> <p>4.3 Requ\u00eates GET/POST et formulaires d'une page Web</p> <p>7.3 Recherche dichotomique dans un tableau tri\u00e9</p> <p>5.3 Architecture d'un r\u00e9seau</p> <p>1.5 Repr\u00e9sentation des r\u00e9els: nombres flottants</p> <p>7.4 Algorithmes gloutons</p> <p>5.4 IHM, capteurs (Microbit)</p> <p>7.5 Algorithme des \\(k\\) plus proches voisins</p> <p>Cours/\u00c0 savoir</p> <p>Remarque</p> <p>Exemple</p> <p>M\u00e9thode/algorithme</p> <p>Code/Programme</p> <p>Exercice/TP</p> <p>Astuce/conseil</p> <p>Solution/Correction</p> <p>Attention/Remarque importante</p> <p>Citation</p> <p>Histoire de l'informatique</p> <p>Video</p> <p>Lien externe</p> <p>Lien vers activit\u00e9 Capytale</p> <p>Pyd\u00e9fi - c0d1ng UP</p> <p>\u00c0 propos de la sp\u00e9cialit\u00e9 NSI</p> <ul> <li>Le site Eduscol </li> <li>Les troph\u00e9es NSI </li> </ul> <p>\u00c0 propos de la culture des sciences de l'informatique</p> <ul> <li> <p>Interstices </p> </li> <li> <p>Inria </p> </li> </ul> <p>\u00c0 propos de Python</p> <ul> <li>Une interview de Guido van Rossum , le cr\u00e9ateur de Python</li> </ul> <p>\u00c0 propos de l'orientation</p> <ul> <li>BD \u00e0 t\u00e9l\u00e9charger en PDF : Les d\u00e9codeuses du num\u00e9rique </li> <li>Talents du num\u00e9rique </li> <li>Une brochure int\u00e9ressante sur les m\u00e9tiers du num\u00e9rique.</li> <li>Un podcast sur les poursuites d'\u00e9tudes (CPGE MP2I, IUT, Universit\u00e9) apr\u00e8s avoir choisi NSI comme sp\u00e9cialit\u00e9 au lyc\u00e9e.</li> <li>Zoom sur les m\u00e9tiers des math\u00e9matiques et de l'informatique </li> <li>Onisep </li> <li>Les m\u00e9tiers de la cybers\u00e9curit\u00e9 </li> </ul> <p>Pour se creuser la t\u00eate</p> <p>Quelques sites de challenges/\u00e9nigmes/d\u00e9fis de programmation ou OSINT:</p> <ul> <li>PyD\u00e9fis </li> <li>Cod\u00e9moi </li> <li>Advent of Code </li> <li>Hackinscience </li> <li>The OSINT Project </li> <li>Root me </li> <li>Try hack me </li> </ul> <p>Pour se former en autonomie</p> <p>Au cas o\u00f9 vous vous ennuieriez...</p> <ul> <li>France-IOI </li> <li>CheckIO </li> <li>CodinGame </li> </ul> <p>L'essentiel des sources des contenus de ce site:</p> <ul> <li>L'excellentissime site de Gilles Lassus : https://glassus.github.io/premiere_nsi/ </li> <li>Le site de David Roche, https://pixees.fr/informatiquelycee </li> <li>Pr\u00e9pabac NSI, 1re g\u00e9n\u00e9rale, C. Adobet, G. Connan, G. Rozsavolgyi, L. Signac, Hatier</li> <li>NSI 1re, 30 le\u00e7ons avec exercices corrig\u00e9s, T. Balabonski, S. Conchon, J-C. Fili\u00e2tre, K. Nguyen, Ellipses</li> <li>Informatique et Sciences du Num\u00e9rique, G. Dowek, Eyrolles</li> <li>Les ressources disponibles sur https://gitlab.com/eskool/profs-info et sur le forum NSI - INRIA</li> </ul>"},{"location":"T01_TypesBase/accueil/","title":"Types de base","text":"<p>Les machines ne manipulent pas les objets (textes, images, etc.) directement mais une repr\u00e9sentation de ces donn\u00e9es dont l'unit\u00e9 minimale est le bit (0/1).</p> <p> </p>"},{"location":"T01_TypesBase/T1.1_Bases/T1.1_Bases/","title":"T1.1 \u00c9criture d'un entier dans une base","text":"<p>Le monde se divise en 10 cat\u00e9gories : ceux qui comprennent le binaire et ceux qui ne le comprennent pas.</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1.1_Bases/#111-le-systeme-decimal","title":"1.1.1 Le syst\u00e8me d\u00e9cimal","text":"<p>Depuis la pr\u00e9histoire, l'Homme a besoin de compter. Sa premi\u00e8re id\u00e9e:</p> <p> </p> <p>Pas tr\u00e8s pratique... Heureusement, il en eut rapidemennt une autre, beaucoup plus efficace: regrouper les b\u00e2tons en paquets.</p> <p> </p> <p> </p> <p>Des paquets de 5 et surtout de 10. Pourquoi 10? </p> <p>Pour \u00e9crire les nombres, regroup\u00e9s en paquets de 10, il a donc fallu inventer 10 chiffres pour compter les unit\u00e9s (en-dessous du paquet): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.</p> <p>Et le nombre 10 ne signifie ni plus ni moins que 1 paquet et 0 unit\u00e9.</p> <p>Ensuite, on fait un paquet de paquets, la centaine (100, c'est \u00e0 dire \\(10 \\times 10 = 10^2\\)), puis un paquet de centaines, le millier (1000, c'est-\u00e0-dire \\(10\\times 10\\times10=10^3\\)), et ainsi de suite.</p> <p>Au final, si on \u00e9crit le nombre 2023, on sait que c'est:</p> <ul> <li>2 mille, c'est-\u00e0-dire \\(2\\times 10^3\\) ;</li> <li>0 centaine, c'est-\u00e0-dire \\(0\\times 10^2\\) ;</li> <li>2 dizaines, c'est-\u00e0-dire \\(2\\times 10^1\\);</li> <li>3 unit\u00e9s, c'est-\u00e0-dire \\(3\\times 10^0\\).</li> </ul> <p>Et bien entendu, \\(2021 = 2\\times 10^3 + 0\\times 10^2+ 2\\times 10^1 +3\\times 10^0\\)</p> <p>La position de chaque chiffre dans l'\u00e9criture du nombre correspond \u00e0 la puissance de 10 par laquelle on le multiplie.</p> <p>Homer compte</p> Octal D\u00e9cimal 0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 10 8 11 9 12 10 13 11 14 12 15 13 16 14 17 15 20 16 21 17 ... ... <p>Un autre exemple, la base octale</p> <p>Pour Homer Simpson, qui n'a que 8 doigts, il aurait \u00e9t\u00e9 certainement plus naturel de faire des paquets de 8... et donc de manipuler seulement 8 chiffres : 0, 1, 2, 3, 4, 5, 6 et 7.</p> <p>C'est le syst\u00e8me octal.</p> <p>Ainsi, \u00abson\u00bb 10 signifierait 1 paquet de 8 et 0 unit\u00e9, soit \u00abnotre\u00bb 8... Et donc notre 10 (en d\u00e9cimal) s'\u00e9crirait 12 (en octal).</p> <p>Enfin, 2023 (en d\u00e9cimal) s'\u00e9crit 3747 en octal puisque : </p> \\[\\begin{array}{rl}     3747_8 &amp;= 3\\times 8^3+7\\times 8^2+4\\times 8^1+7\\times 8^0 \\\\     &amp;= 3\\times 512+7\\times 64+4\\times 8+7\\times 1  \\\\     &amp;= 1536+448+32+7\\\\     &amp;= 2023     \\end{array}     \\]"},{"location":"T01_TypesBase/T1.1_Bases/T1.1_Bases/#112-notion-de-base","title":"1.1.2 Notion de base","text":"<p>\u00c9criture d'un entier en base \\(b\\)</p> <ul> <li> <p>Choisir une base, c'est choisir la \u00abtaille\u00bb du paquet, et donc le nombre de chiffres dont on aura besoin: en base \\(b\\), il y a \\(b\\) chiffres.</p> </li> <li> <p>Dans notre syst\u00e8me d\u00e9cimal, la base est \\(b=10\\).</p> </li> <li> <p>La position de chaque chiffre correspond \u00e0 la puissance de \\(b\\) par laquelle on le multiplie.</p> </li> <li> <p>On pr\u00e9cisera la base (si diff\u00e9rente de 10) en indice en fin du nombre. Par exemple, le nombre \\(312_5\\) est \u00e9crit en base 5.</p> </li> </ul> <p>Exemples</p> \\[\\begin{array}{rl} 312_5 &amp;= 3\\times 5^2 + 1\\times 5^1 + 2\\times 5^0 \\\\ &amp;= 3\\times 25+1\\times 5+2\\times 1  \\\\ &amp;= 82 \\end{array} \\] \\[\\begin{array}{rl} 25072_8 &amp;= 2\\times 8^4 + 5\\times 8^3+0\\times 8^2+7\\times 8^1+2\\times 8^0 \\\\ &amp;= 2\\times 4096 + 5\\times 512 + 7\\times 8 + 2\\times 1  \\\\ &amp;= 10810 \\end{array} \\]"},{"location":"T01_TypesBase/T1.1_Bases/T1.1_Bases/#113-le-systeme-binaire-base-2","title":"1.1.3 Le syst\u00e8me binaire (base 2)","text":"<p>Le binaire</p> <ul> <li>Le syst\u00e8me binaire est le syst\u00e8me de num\u00e9ration de base \\(b=2\\).</li> <li> <p>Il utilise donc seulement deux chiffres, 0 et 1, appel\u00e9s bits (contraction de l'anglais binary digit).</p> </li> <li> <p>Il est particuli\u00e8rement adapt\u00e9 \u00e0 l'informatique car il permet d'unifier la logique (Vrai/Faux), le calcul et l'\u00e9lectronique (voir vid\u00e9o suivante).</p> </li> <li> <p>Un regroupement de 8 bits est appel\u00e9 un octet.</p> </li> <li> <p>Avec \\(n\\) bits, on \u00e9crit \\(2^n\\) nombres entiers, de \\(0\\) jusqu'\u00e0 \\(2^n-1\\).</p> </li> </ul> Vid\u00e9o <p><p> </p></p> <p>Conversions</p> Binaire \u2192 D\u00e9cimalD\u00e9cimal \u2192 BinaireD\u00e9cimal \u2192  Base quelconque <p>Il est utile de conna\u00eetre alors les puissances de 2 pour convertir rapidement de l'\u00e9criture binaire vers l'\u00e9criture d\u00e9cimale.</p> <p> </p> <p>Par exemple \\(10110101_2=128+32+16+4+1=181\\).</p> <ul> <li> <p>On peut utiliser l'algorithme de soustraction: on soustrait du nombre la plus grande puissance de 2 possible, et on recommence...</p> </li> <li> <p>On utilise l'algorithme de divisions: on effectue les divisions successives du nombre par 2. L'\u00e9criture en binaire est donn\u00e9e par les restes lus de bas en haut.</p> </li> </ul> <p> </p> <p>Les deux algorithmes de soustraction et de divisions fonctionnent \u00e9galement pour la conversion du d\u00e9cimal vers n'importe quelle autre base.</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1.1_Bases/#114-le-systeme-hexadecimal-base-16","title":"1.1.4 Le syst\u00e8me hexad\u00e9cimal (base 16)","text":"<p>L'hexad\u00e9cimal</p> <ul> <li> <p>Le syst\u00e8me hexad\u00e9cimal est le syst\u00e8me de num\u00e9ration de base \\(b=16\\).</p> </li> <li> <p>Il utilise donc 16 chiffres : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.</p> </li> <li> <p>Bien qu'il n\u00e9cessite plus de chiffres, ce syst\u00e8me donne des \u00e9critures plus courtes et particuli\u00e8rement pratique du fait que 16 est une puissance de 2 : la conversion entre les syst\u00e8mes binaire et hexad\u00e9cimal se fait sans calcul, uniquement par regroupement de 4 bits.</p> </li> </ul> <p>Couleurs</p> <p>Le syst\u00e8me hexad\u00e9cimal est en particulier un mode de code informatique des couleurs.</p> <p>En effet une couleur (codage RGB) est compos\u00e9e de 3 valeurs correspondant aux composantes rouge, verte et bleue, et chacune de ces valeurs est un entier compris entre 0 et 255, c'est-\u00e0-dire entre 0 et FF en hexad\u00e9cimal: on peut les \u00e9crire avec seulement deux chiffres.</p> <p> </p> <p>Par exemple, la couleur rouge ci-contre a pour composantes (178, 26, 15), ce qui donne en hexad\u00e9cimal : (B2, 1A, 0F), qu'on \u00e9crit en g\u00e9n\u00e9ral de fa\u00e7on concat\u00e9n\u00e9e B21A0F et souvent pr\u00e9c\u00e9d\u00e9e d'un #.</p> <p>Convertisseur</p> <p>Un convertisseur  bien utile.</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1.1_Bases/#115-exercices","title":"1.1.5 Exercices","text":""},{"location":"T01_TypesBase/T1.1_Bases/T1.1_Bases/#1151-a-la-main","title":"1.1.5.1 \u00c0 la main","text":"<p>Exercices</p> Exercice  1Exercice  2Exercice  3Exercice  4Exercice  5Exercice  6Correction <p>Convertir de la base mentionn\u00e9e vers la base 10 (syst\u00e8me d\u00e9cimal).</p> <p>Attention, il y a un pi\u00e8ge...</p> <ol> <li>\\(131_6\\)</li> <li>\\(420_5\\)</li> <li>\\(1515_8\\)</li> <li>\\(716_4\\)</li> <li>\\(321_4\\)</li> </ol> <p>Convertir les \u00e9critures d\u00e9cimales vers la base mentionn\u00e9e.</p> <ol> <li>47 en base 5</li> <li>92 en base 4</li> </ol> <p>Convertir du binaire vers le d\u00e9cimal.</p> <ol> <li>1010</li> <li>101110</li> <li>10001101</li> <li>11111111</li> </ol> <p>Convertir du d\u00e9cimal vers le binaire.</p> <ol> <li>17</li> <li>34</li> <li>68</li> <li>100</li> <li>200</li> </ol> <p>Que remarquez-vous quand on passe de l'\u00e9criture binaire d'un nombre \u00e0 celle de son double?</p> <ol> <li> <p>V\u00e9rifier la conversion de la couleur rouge donn\u00e9e en exemple \u00e0 la section pr\u00e9c\u00e9dente.</p> </li> <li> <p>Convertir les \u00e9critures hexad\u00e9cimales en d\u00e9cimal: 99, D7, 1B8, ABC.</p> </li> <li> <p>Comment s'\u00e9crit la couleur blanche en code hexad\u00e9cimal?</p> </li> </ol> <p>Convertir les \u00e9critures d\u00e9cimales en binaire, puis en hexad\u00e9cimal.</p> <ol> <li>45</li> <li>72</li> <li>421</li> </ol> <p>Exercice  7</p> Conversion Binaire \u2192 Hexad\u00e9cimalConversion Hexad\u00e9cimal  \u2192 BinaireApplicationCorrection <ul> <li>On regroupe les bits par paquets de 4 (quitte \u00e0 ajouter des 0 pour compl\u00e9ter).</li> <li>On convertit chaque paquet en chiffre hexad\u00e9cimal.</li> <li>On concat\u00e8ne les chiffres</li> </ul> <p>Par exemple, \\(11111100101_2 = \\underbrace{0111}_{7} \\underbrace{1110}_{14=\\text{E}_{16}} \\underbrace{0101}_{5} = 7\\text{E}5_{16}\\) </p> <p>On fait la m\u00eame chose dans l'autre sens.</p> <ol> <li>Convertir \\(1101110_2\\) puis \\(10011011111_2\\) en base 16.</li> <li>Convertir \\(8\\text{D}_{16}\\) puis \\(1\\text{CA}7_{16}\\) en binaire.</li> </ol> <ol> <li>\\(1101110_2 = 0110\\, 1110_2\\). \\(0110_2=6_{16}\\)  et \\(1110_2=E_{16}\\) donc \\(1101110_2=6E_{16}\\)</li> </ol> <p>\\(10011011111_2 = 0100\\, 1101\\, 1111_2\\). \\(0100_2=4_{16}\\), \\(0100_2=4_{16}\\)  et \\(1110_2=E_{16}\\) donc \\(1101110_2=6E_{16}\\)</p>"},{"location":"T01_TypesBase/T1.1_Bases/T1.1_Bases/#1152-avec-python","title":"1.1.5.2 Avec Python","text":"<p>Fonctions de conversion</p> <p>Pour convertir un entier \u00e9crit en d\u00e9cimal vers le binaire ou l'hexad\u00e9cimal, on peut utiliser les fonctions <code>bin</code> et <code>hex</code>, qui renvoient des cha\u00eenes de caract\u00e8res.</p> <pre><code>&gt;&gt;&gt; bin(2021)\n'0b11111100101'\n&gt;&gt;&gt; hex(2021)\n'0x7e5'\n&gt;&gt;&gt;\n</code></pre> <p>Les pr\u00e9fixes <code>0b</code> et <code>0x</code> indiquent que les \u00e9critures sont respectivement en base 2  et en base 16.</p> <p>R\u00e9ciproquement, pour convertir l'\u00e9criture d'un nombre \u00e9crit en base \\(b\\) vers le d\u00e9cimal, on utilise la fonction <code>int</code> en passant en arguments l'\u00e9criture en cha\u00eene de caract\u00e8res et la base.</p> <pre><code>&gt;&gt;&gt; int('11111100101', 2) # pour convertir 11111100101 \u00e9crit en binaire vers le d\u00e9cimal\n2021\n&gt;&gt;&gt; int('7e5', 16)        # convertir 7E5 \u00e9crit en hexad\u00e9cimal vers le d\u00e9cimal\n2021\n&gt;&gt;&gt; int('131', 6)         # pour convertir 131 \u00e9crit en base 6 vers le d\u00e9cimal\n55\n</code></pre> <p>Exercice  8</p> <p>Utilisez ces fonctions pour v\u00e9rifier vos r\u00e9sultats des exercices pr\u00e9c\u00e9dents.</p> <p>&gt;&gt;&gt; </p>"},{"location":"T01_TypesBase/T1.2_Booleens/T1.2_Booleens/","title":"T1.2 Valeurs bool\u00e9ennes","text":"<p>Histoire de l'informatique</p> <p> </p> <p>George Boole (1815-1864) est un math\u00e9maticien et logicien britannique connu pour avoir cr\u00e9\u00e9 la logique moderne, appel\u00e9e alg\u00e8bre de Boole.</p> <p>Cette alg\u00e8bre binaire n'accepte que deux valeurs, 0 et 1, et a donc d'importantes et nombreuses applications en informatique...</p>"},{"location":"T01_TypesBase/T1.2_Booleens/T1.2_Booleens/#121-un-peu-de-logique","title":"1.2.1 Un peu de logique","text":"<p>En informatique, comme en math\u00e9matiques, on s'int\u00e9resse \u00e0 la valeur de v\u00e9rit\u00e9 de phrases ou d'expressions qui peuvent \u00eatre soit vraies, soit fausses. Mais rien d'autre, c'est le principe du tiers-exclu.</p> <p>Par exemple, que diriez-vous de ces phrases?</p> <ul> <li>A: Vous \u00eates en classe de premi\u00e8re.</li> <li>B: Baudelaire a \u00e9crit \u00abLes fleurs du mal\u00bb.</li> <li>C: La Terre est plate.</li> <li>D: \\(3 \\times 4 =12\\).</li> <li>E: La lettre <code>e</code> est dans le mot <code>abracadabra</code>.</li> <li>F: Georges Perec a \u00e9crit un roman de pr\u00e8s de 300 pages sans aucune lettre <code>e</code>.</li> <li>G: \\(2^{10} &lt; 10^3\\)</li> <li>H: La couleur orange est la plus belle des couleurs.</li> </ul>"},{"location":"T01_TypesBase/T1.2_Booleens/T1.2_Booleens/#122-algebre-de-boole","title":"1.2.2 Alg\u00e8bre de Boole","text":"<p>Valeurs et op\u00e9rations fondamentales</p> <p>L'alg\u00e8bre de Boole consiste \u00e0 \u00e9tudier des op\u00e9rations sur un ensemble uniquement constitu\u00e9 de deux \u00e9l\u00e9ments qu'on appelle bool\u00e9ens.</p> <p>Selon le contexte (logique, calcul, \u00e9lectronique), ces deux \u00e9l\u00e9ments sont not\u00e9s:</p> <ul> <li>Faux (F) / Vrai (V)</li> <li>0 / 1</li> <li><code>False</code>/<code>True</code> (en Python, comme dans de nombreux langages)</li> </ul> <p>Les op\u00e9rations fondamentales ne sont plus l'addition et la multiplication mais:</p> <ul> <li>la n\u00e9gation, not\u00e9e \u00ac, ou plus simplement \u00abNON\u00bb (<code>not</code> en Python);</li> <li>la conjonction, not\u00e9e &amp;, ou plus simplement \u00abET\u00bb (<code>and</code> en Python);</li> <li>la disjonction, not\u00e9e |, ou plus simplement \u00abOU\u00bb (<code>or</code> en Python).</li> </ul> Tables de v\u00e9rit\u00e9 N\u00e9gation, \u00ac, \u00abNON\u00bb, <code>not</code>Conjonction, &amp;, \u00abET\u00bb, <code>and</code>Disjonction, |, \u00abOU\u00bb, <code>or</code> x \u00acx F V V F x y x &amp; y F F F F V F V F F V V V x y x | y F F F F V V V F V V V V"},{"location":"T01_TypesBase/T1.2_Booleens/T1.2_Booleens/#123-avec-python","title":"1.2.3 Avec Python","text":"<p><code>True</code> &amp; <code>False</code></p> <ul> <li>Il existe deux valeurs bool\u00e9ennes en Python : <code>True</code> et <code>False</code>.</li> <li>Une variable prenant l'une de ces deux valeurs est de type <code>bool</code>.</li> </ul> <pre><code>&gt;&gt;&gt; type(True)\n&lt;class 'bool'&gt;\n&gt;&gt;&gt; x = False\n&gt;&gt;&gt; x\nFalse\n&gt;&gt;&gt; type(x)\n&lt;class 'bool'&gt;\n</code></pre> <p>Op\u00e9rateurs de comparaison</p> Op\u00e9rateur Signification <code>==</code> est \u00e9gal \u00e0 <code>!=</code> est diff\u00e9rent de <code>&lt;</code> inf\u00e9rieur \u00e0 <code>&gt;</code> sup\u00e9rieur \u00e0 <code>&lt;=</code> inf\u00e9rieur ou \u00e9gal \u00e0 <code>&gt;=</code> sup\u00e9rieur ou \u00e9gal \u00e0 <code>in</code> appartient \u00e0 <code>not in</code> n'appartient pas \u00e0 <p>Exemples</p> <pre><code>&gt;&gt;&gt; a = 2\n&gt;&gt;&gt; a == 3\nFalse\n&gt;&gt;&gt; a == 2\nTrue\n&gt;&gt;&gt; a != 1\nTrue\n&gt;&gt;&gt; a &gt; 2\nFalse\n&gt;&gt;&gt; a &lt;= 5\nTrue\n&gt;&gt;&gt; a % 2 == 0\nTrue\n&gt;&gt;&gt; x = (0 == 1)\n&gt;&gt;&gt; x\nFalse\n&gt;&gt;&gt; y = (3 + 2 == 5)\n&gt;&gt;&gt; y\nTrue\n&gt;&gt;&gt; 'e' in 'abracadabra'\nFalse\n&gt;&gt;&gt; 'b' in 'abracadabra'\nTrue\n&gt;&gt;&gt; 'A' not in 'abracadabra'\nTrue\n&gt;&gt;&gt; not True\nFalse\n&gt;&gt;&gt; True and False\nFalse\n&gt;&gt;&gt; True and True\nTrue\n&gt;&gt;&gt; False or True\nTrue\n&gt;&gt;&gt;\n</code></pre>"},{"location":"T01_TypesBase/T1.2_Booleens/T1.2_Booleens/#124-exercices","title":"1.2.4 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9 <p>Pr\u00e9dire si les variables suivantes contiennent le bool\u00e9en <code>True</code> ou le bool\u00e9en <code>False</code>. Contr\u00f4lez ensuite en ex\u00e9cutant le code et en inspectant le contenu des variables.</p> <pre><code>a = (2 &gt; 1)\nb = (3 == 1+2)\nc = (1 &lt; 0)\nd = (2 != 5/2)\ne = (2 != 5//2)\nf = ('a' == 'A')\ng = not a\nh = b and c\ni = b or c\nj = not c and (d or e)\n</code></pre> <p>Exercice  2 : le \u00abou exclusif\u00bb</p> \u00c9nonc\u00e9Correction <p>Une autre fonction logique importante est le ou exclusif, ou \u00abdisjonction exclusive\u00bb.</p> <p>C'est le \u00abou\u00bb dans le sens de \u00abFromage ou dessert\u00bb dans un menu au restaurant. Soit l'un, soit l'autre, mais pas les deux.</p> <p>Il se note en g\u00e9n\u00e9ral <code>xor</code> ou <code>^</code> en logique (<code>^</code> en Python).</p> <p>Si x et y sont deux bool\u00e9ens, alors x ^ y = (x &amp; \u00acy) | (\u00acx &amp; y).</p> <p>Construire la table de v\u00e9rit\u00e9 du <code>xor</code>.</p> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>Construire la table de v\u00e9rit\u00e9 de l'expression (x | y) &amp; z o\u00f9 x, y et z sont trois bool\u00e9ens.</p> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>\u00c0 l'aide de tables de v\u00e9rit\u00e9, d\u00e9montrer les lois de Morgan:</p> <ul> <li>\u00ac(x | y) = \u00acx &amp; \u00acy</li> <li>\u00ac(x &amp; y) = \u00acx | \u00acy</li> </ul> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>Dans chaque cas, <code>x</code> et <code>y</code> sont des variables contenant des entiers et <code>tab</code> est une variable contenant une liste d'entiers.</p> <p>\u00c9crire en langage Python une expression bool\u00e9enne donnant la valeur (vrai ou fausse) de chacune des phrases suivantes:</p> <ol> <li><code>x</code> et <code>y</code> sont non nuls.</li> <li><code>x</code> est compris entre 0 (exclus) et 10 (inclus).</li> <li><code>x</code> est \u00e9gal \u00e0 0 ou \u00e0 1.</li> <li>les deux valeurs <code>x</code> et <code>y</code> appartiennent \u00e0 la liste <code>tab</code>.</li> <li><code>x</code> appartient \u00e0 <code>tab</code> mais pas <code>y</code>.</li> </ol>"},{"location":"T01_TypesBase/T1.3_Relatifs/T1.3_Relatifs/","title":"T1.3 Repr\u00e9sentation des entiers relatifs","text":""},{"location":"T01_TypesBase/T1.3_Relatifs/T1.3_Relatifs/#131-signe-dun-entier-et-taille-en-bits","title":"1.3.1 Signe d'un entier et taille en bits","text":"<p>Au chapitre T1.1, nous avons vu comment repr\u00e9senter un nombre entier positif en notation binaire.</p> <p>Par exemple, l'entier 6 (en base 10) s'\u00e9crit <code>110</code> en binaire.</p> <p>Pour repr\u00e9senter tous les entiers relatifs, il faut \u00e9tendre cette repr\u00e9sentation aux entiers n\u00e9gatifs. Une premi\u00e8re n\u00e9cessit\u00e9 est de r\u00e9server un bit pour le signe de l'entier (+ ou -).</p> <p>Signe d'un entier relatif</p> <p>On choisit de repr\u00e9senter le signe d'un nombre entier relatif:</p> <ul> <li>sur le bit de poids fort (le plus \u00e0 gauche), pour reprendre la notation classique;</li> <li>par un <code>0</code> pour le + : ainsi la repr\u00e9sentation des entiers positifs est inchang\u00e9e;</li> <li>par un <code>1</code> pour le -.</li> </ul> <p>Mais o\u00f9 placer ce bit de signe?</p> <p>En effet, 6 se coderait alors en <code>0110</code> et -6 en <code>1110</code>? Mais <code>1110</code> repr\u00e9sente l'entier 14 !</p> <p>Pour lever cette ambiguit\u00e9, il faut d\u00e9cider :</p> <ul> <li>de la taille du mot binaire qui va repr\u00e9senter l'entier, c'est-\u00e0-dire le nombre de bits;</li> <li>d'une fa\u00e7on efficace de repr\u00e9senter les nombres n\u00e9gatifs.</li> </ul> <p>Taille en bits d'un entier</p> <p>Pour repr\u00e9senter un nombre entier relatif, on a donc besoin de fixer un nombre <code>n</code>  de bits sur lequel le coder.</p> <p>En g\u00e9n\u00e9ral, <code>n</code> est une des valeurs suivantes : 8, 16, 32 ou 64 (1, 2, 4 ou 8 octets). Cela d\u00e9pend du langage de programmation utilis\u00e9 et de l'architecture mat\u00e9rielle de l'ordinateur.</p> <p>Le bit de poids fort repr\u00e9sente donc le signe et les <code>n-1</code> bits suivants la valeur absolue du nombre.</p> <p>Sur 8 bits par exemple, l'entier 6 est cod\u00e9 par <code>0|000 0110</code>. Et on serait tent\u00e9 de coder son oppos\u00e9 -6 par <code>1|000 0110</code>, n'est-ce pas?</p> <p>Faux.</p> <p>Au moins deux (gros) inconv\u00e9nients \u00e0 cette m\u00e9thode:</p> <ul> <li>Le nombre 0 serait cod\u00e9 par <code>0|000 0000</code> et par <code>1|000 0000</code>. Deux repr\u00e9sentations pour un m\u00eame nombre, \u00e7a ne sent pas bon.</li> <li>L'addition telle qu'on la conna\u00eet ne fonctionnerait plus. Posez par exemple 6 + (-6) ...</li> </ul>"},{"location":"T01_TypesBase/T1.3_Relatifs/T1.3_Relatifs/#132-complement-a-2","title":"1.3.2 Compl\u00e9ment \u00e0 2","text":"<p>On adopte donc une autre m\u00e9thode, qui consiste \u00e0 repr\u00e9senter un entier relatif par un entier naturel.</p> <ul> <li> <p>En binaire non sign\u00e9: sur 8 bits, on peut repr\u00e9senter tous les entiers positifs de 0 \u00e0 255. Ceux qui ont un bit de poids fort \u00e9gal \u00e0 <code>0</code> correspondent aux entiers de 0 \u00e0 127 et ceux qui ont un bit de poids fort \u00e9gal \u00e0 <code>1</code> correspondent aux nombres de 128 \u00e0 255.</p> </li> <li> <p>En binaire sign\u00e9: toujours sur 8 bits, les nombres de 0 \u00e0 127 conservent la m\u00eame repr\u00e9sentation (positifs, car avec <code>0</code> en bit de poids fort). En revanche, les \u00e9critures binaires avec un <code>1</code> en bit de poids fort repr\u00e9sentent les entiers n\u00e9gatifs de -128 \u00e0 -1.</p> </li> </ul> <p>Ainsi sur 8 bits, on repr\u00e9sente \u00e0 nouveau 255 valeurs : de -128 \u00e0 +127, c'est-\u00e0-dire de \\(-2^7\\) \u00e0 \\(2^7 -1\\). Et puisque le bit de poids fort est r\u00e9serv\u00e9 au signe, il est logique que la valeur absolue soit inf\u00e9rieure \u00e0 128 puisqu'on ne dispose plus que de 7 bits...</p> <p> </p> <p>On repr\u00e9sente donc l'entier \\(-1\\) par <code>11111111</code> en binaire sur 8 bits. C'est sa notation en compl\u00e9ment \u00e0 2 (ou plut\u00f4t \\(2^n\\)).</p> <p>\u00c9crire la repr\u00e9sentation binaire d'un entier n\u00e9gatif</p> Compl\u00e9ment \u00e0 2Par d\u00e9calage <p>Pour obtenir le compl\u00e9ment \u00e0 2 d'un entier n\u00e9gatif:</p> <ul> <li>on code sa valeur absolue en binaire;</li> <li>on inverse tous les bits (on remplace les <code>0</code> par des <code>1</code> et les <code>1</code> par des <code>0</code>);</li> <li>on ajoute 1.</li> </ul> <p>Par exemple:</p> <ul> <li>\\(-6\\) s'\u00e9crit <code>11111010</code> sur 8 bits:    \\(6_{10} = 0000 0110_2  \\rightarrow 1111 1001_2 \\rightarrow 1111 1010_2\\).</li> <li>\\(-42\\) s'\u00e9crit <code>11010110</code> sur 8 bits:    \\(42_{10} = 0010 1010_2  \\rightarrow 1101 0101_2 \\rightarrow 1101 0110_2\\).</li> </ul> <p>La repr\u00e9sentation binaire d'un entier \\(x\\)  n\u00e9gatif sur \\(n\\) bits est celle de l'entier naturel (non sign\u00e9) \\(x + 2^n\\). </p> <p>Par exemple pour \\(x=-42\\), on repr\u00e9sente \\(-42+256=214\\) en binaire non sign\u00e9, c'est-\u00e0-dire <code>11010110</code>.</p>"},{"location":"T01_TypesBase/T1.3_Relatifs/T1.3_Relatifs/#133-integer-overflow","title":"1.3.3 Integer Overflow","text":"<p>D\u00e9passement de capacit\u00e9</p> <p>On ne peut coder qu'un nombre fini d'entiers selon la valeur de \\(n\\):  entre \\(-2^{n-1}\\) et \\(2^{n-1}-1\\).</p> <p>Tout calcul sur des entiers dont le r\u00e9sultat ne fait pas partie de cet intervalle donnera un r\u00e9sultat faux: il sera tronqu\u00e9 sur \\(n\\) bits! On parle de d\u00e9passement de capacit\u00e9    , overflow en anglais.</p> <p>En Python, tous les entiers sont sign\u00e9s. Contrairement \u00e0 certains langages de programmation, le type entier non sign\u00e9 n'existe pas nativement. Par d\u00e9faut les entiers sont cod\u00e9s sur 64 bits (ou 32 bits sur les machines 32 bits), ce qui laisse un peu de marge.</p> <p>Pour sp\u00e9cifier qu'on travaille sur 8 bits, on utilisera le module <code>numpy</code>:</p> <pre><code>import numpy\nun = numpy.int8(1)\nvie = numpy.int8(42)\n</code></pre>"},{"location":"T01_TypesBase/T1.3_Relatifs/T1.3_Relatifs/#134-exercices","title":"1.3.4 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Solution <p>Quel est l'intervalle de nombres entiers relatifs qu'on peut repr\u00e9senter:</p> <ol> <li>Sur 4 bits?</li> <li>Sur 16 bits?</li> <li>Sur 64 bits?</li> </ol> <p>Exercice  2</p> \u00c9nonc\u00e9Solution <ol> <li>Convertir en compl\u00e9ment \u00e0 2 les nombres 12 et -53.</li> <li>Effectuer l'addition en binaire de ces deux nombres, et v\u00e9rifier que le r\u00e9sultat est correct.</li> </ol> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <ol> <li>\u00c9crire en binaire sign\u00e9 sur 8 bits les nombres -7 et -81 (m\u00e9thode par d\u00e9calage, par compl\u00e9ment \u00e0 2 ou les deux).</li> <li>Effectuer l'addition en binaire et convertir le r\u00e9sultat en d\u00e9cimal.</li> </ol> <p>Exercice  4</p> \u00c9nonc\u00e9Solution <p>Quels sont les entiers relatifs qui s'\u00e9crivent en binaire sign\u00e9 sur 8 bits:</p> <ol> <li><code>01100111</code></li> <li><code>10011001</code></li> </ol> <p>Exercice  5</p> \u00c9nonc\u00e9Solution <ol> <li>V\u00e9rifier que sur 8 bits, <code>10000000</code> repr\u00e9sente -128 et <code>11111111</code> repr\u00e9sente -1.</li> <li>V\u00e9rifier en effectuant l'addition en binaire, que 42 + (-42) = 0</li> </ol> <p>Exercice  6 : Integer Overflow</p> \u00c9nonc\u00e9Solution <p>\u00c0 l'aide du module <code>numpy</code>, effectuer en console les calculs suivants:</p> <ol> <li>127 + 1</li> <li>127 + 2</li> <li>127 + 127 </li> </ol> <p>Par exemple pour le premier calcul: <pre><code>&gt;&gt;&gt; import numpy\n&gt;&gt;&gt; numpy.int8(127) + numpy.int8(1)\n</code></pre></p>"},{"location":"T01_TypesBase/T1.4_Flottants/T1.4_Flottants/","title":"T1.4 Flottants","text":"<p>Avant de commencer, demandez \u00e0 Python d'effectuer les calculs suivants (que vous aurez bien entendu faits de t\u00eate auparavant) dans un terminal: <pre><code>&gt;&gt;&gt; 0.1 + 0.2\n\n&gt;&gt;&gt; 0.5 - 0.2 - 0.2 - 0.1\n</code></pre></p> <p> </p> <p>Un nombre flottant permet de repr\u00e9senter les nombres \u00e0 virgule... Mais pas tous...</p> <p>En Python, un nombre flottant est du type <code>float</code>.</p> <pre><code>&gt;&gt;&gt; type(0.5)\n&lt;class 'float'&gt;\n</code></pre>"},{"location":"T01_TypesBase/T1.4_Flottants/T1.4_Flottants/#141-ecriture-binaire","title":"1.4.1 \u00c9criture binaire","text":"<p>Comme pour les entiers, on utilise le syst\u00e8me binaire, qu'on prolonge \u00e0 la partie \u00e0 droite de la virgule par les puissances n\u00e9gatives de 2.</p> <p>Base 2 \u2192 Base 10</p> <p>On utilise un tableau de conversion avec les puissances de 2:</p> <p> </p> <p>Exemple: Que vaut \\(101,011_2\\) en d\u00e9cimal?</p> Correction <p>\\(101,011_2 = 1 \\times 2^2 + 0 \\times 2^1 + 1 \\times 2^0 + 0\\times 2^{-1} + 1 \\times 2^{-2} +1 \\times 2^{-2} = 4 + 1 + 0,25 + 0, 125 = 5,375\\)</p> <p>Remarque: si l'\u00e9criture en base 2 est finie, alors l'\u00e9criture en base 10 est \u00e9galement finie.</p> <p>Base 10 \u2192 Base 2</p> <p>Prenons par exemple le nombre \\(3,6875\\). Il comporte une partie enti\u00e8re (3)  et une partie d\u00e9cimale (0,6875)</p> <ul> <li>On \u00e9crit la partie enti\u00e8re \u00abcomme d'habitude\u00bb : \\(3 = 11_2\\).</li> <li> <p>On convertit la partie d\u00e9cimale par des multiplications successives par 2:      </p> <p>Et on prend les parties enti\u00e8res des r\u00e9sultats dans l'ordre: \\(0,6875=0,1011_2\\)</p> </li> <li> <p>Donc \\(3,6875=11,1011_2\\).</p> </li> </ul> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <ol> <li>Donner l'\u00e9criture binaire de \\(20,875\\).</li> <li>Donner l'\u00e9criture binaire de \\(0,1\\).</li> <li>En d\u00e9duire celle de \\(0,2\\).</li> </ol> <p>\u00c9critures binaires infinies</p> <p>Un nombre ayant une \u00e9criture d\u00e9cimale finie peut ne pas admettre une \u00e9criture binaire finie: par exemple, seul \\(0,5\\) admet une \u00e9criture binaire finie parmi les nombres d\u00e9cimaux \u00e0 un chiffre apr\u00e8s la vrigule !</p> <p>Or la m\u00e9moire d'un ordinateur, quelqu'il soit, est toujours finie. Certains nombres ne peuvent donc pas \u00eatre repr\u00e9sent\u00e9s correctement en machine : c'est une impossibilit\u00e9 th\u00e9orique. Cela am\u00e8ne aux comportements \u00e9tranges vus en introduction...</p>"},{"location":"T01_TypesBase/T1.4_Flottants/T1.4_Flottants/#142-precautions-dusage","title":"1.4.2 Pr\u00e9cautions d'usage","text":"<p>Un nombre admettant une \u00e9criture binaire infinie ne peut pas \u00eatre correctement repr\u00e9sent\u00e9: le nombre manipul\u00e9 sur la machine est donc une valeur approch\u00e9e.  Il faut garder en t\u00eate que les calculs sont potentiellement faux, du moins impr\u00e9cis, lorsque des flottants interviennent.</p> <p> </p> <p>Comparaison de flottants</p> <ul> <li>On ne teste JAMAIS l'\u00e9galit\u00e9 de flottants:     Pas bien<pre><code>&gt;&gt;&gt; a = 0.1\n&gt;&gt;&gt; b = 0.3 - 0.2\n&gt;&gt;&gt; if a == b:\n        print(\"a et b sont \u00e9gaux\")\n    else:\n        print(\"a et b sont diff\u00e9rents\")\n\na et b sont diff\u00e9rents\n&gt;&gt;&gt; \n</code></pre></li> <li>On teste plut\u00f4t s'ils sont suffisamment proches, c'est-\u00e0-dire que leur diff\u00e9rence (en valeur absolue) est inf\u00e9rieure \u00e0 une pr\u00e9cision donn\u00e9e, suffisament petite:     Bien<pre><code>&gt;&gt;&gt; a = 0.1\n&gt;&gt;&gt; b = 0.3 - 0.2\n&gt;&gt;&gt; epsilon = 10 ** (-12)\n&gt;&gt;&gt; if abs(a-b) &lt; epsilon:\n        print(\"a et b sont \u00e9gaux\")\n    else:\n        print(\"a et b sont diff\u00e9rents\")\n\na et b sont \u00e9gaux\n&gt;&gt;&gt;\n</code></pre></li> </ul> <p>Histoire de l'informatique: Antimissile Patriot</p> <p>Lors de la guerre du Golfe, en 1991, les am\u00e9ricains disposaient de syst\u00e8mes d'antimissiles Patriot pour intercepter les missiles Scud irakiens. Les Patriot disposaient d'une horloge interne \u00e9mettant un signal tous les 0.1 secondes, d\u00e8s leur mise sous tension. Une dur\u00e9e \u00e9coul\u00e9e est donc : 0.1 \u00d7 le nombre de \u00abtics\u00bb.</p> <p>Sur ces syst\u00e8mes, les nombres sont cod\u00e9s en virgule fixe sur 24 bits: c'est tout simplement une troncature de l'\u00e9criture binaire.</p> <p>Or \\(0,1 = 0,00011001100110011001100|\\overline{1100}\\) </p> <p>L'erreur commise est donc d'environ \\(0,000000000000000000000001100 \\simeq 9,54 \\times 10^{-8}\\).</p> <p>Sur 100 heures de surveillance cela entra\u00eene donc un d\u00e9calage d'horloge interne de \\(0,34\\) seconde... ce qui correspond \u00e0 une distance de plus de 500 m\u00e8tres \u00e0 la vitesse d'un missile Scud ( 1676 m/s ).</p> <p>Ainsi un Patriot est pass\u00e9 \u00e0 plus de 500 m\u00e8tres d'un Scud le 25 f\u00e9vrier 1991 qui s'est abattu sur la caserne de Dahran et a caus\u00e9 ainsi la mort de 28 personnes.</p>"},{"location":"T01_TypesBase/T1.4_Flottants/T1.4_Flottants/#143-norme-ieee-754-hors-programme","title":"1.4.3 Norme IEEE-754 (Hors programme)","text":"<p>Virgule fixe</p> <p>Sur certains microcontr\u00f4leurs, on utilise un codage en virgule fixe: on retient un nombre fixe de chiffre apr\u00e8s la virgule (voir pr\u00e9c\u00e9demment).</p> <p>La distance entre deux nombres successifs est donc toujours la m\u00eame, \u00e9gale \u00e0 \\(2^{-n}\\) o\u00f9 \\(n\\) est le nombre de chiffres conserv\u00e9s apr\u00e8s la virgule.</p> <p>Probl\u00e8me: l\u2019erreur relative commise sur le codage des nombres peut devenir tr\u00e8s grande lorsque les nombres sont petits...</p> <p>Virgule flottante</p> <p>L'id\u00e9e est de retenir un nombre fixe de chiffres significatifs. Ainsi, les petits nombres seront plus serr\u00e9s que les grands (pour avoir une erreur relative tol\u00e9rable).</p> <p>On se rapproche donc de l'\u00e9criture scientifique des nombres r\u00e9els, en binaire:</p> <p> </p> <ul> <li>\\((-1)^s\\) d\u00e9signe le signe: \\(s=0\\) pour un nombre positif, \\(s=1\\) pour un n\u00e9gatif;</li> <li>\\(m\\) est la mantisse ;</li> <li>\\(e\\) est l'exposant. On note \\(E = e +127\\) l'exposant d\u00e9cal\u00e9 (pour \u00eatre positif).</li> </ul> <p>Exemple: \\(25,90625\\) (base 10) \\(\\Rightarrow 11001,111101\\) (base 2) \\(\\Rightarrow (-1)^0 \\times 1,1001111101 \\times 2^4\\) (notation scientifique en base 2)</p> <p>On choisit ensuite une variante (simple pr\u00e9cision, double pr\u00e9cision, ou plus) qui d\u00e9termine le nombre de bits pour coder la mantisse et l'exposant (un seul suffit toujours pour le signe).</p> signe exposant \\(E\\) mantisse taille totale simple pr\u00e9cision 1 8 23 32 double pr\u00e9cision 1 11 52 64 <p>On code ainsi un nombre dans l'ordre : \\(s\\) puis \\(E\\) (exposant d\u00e9cal\u00e9) puis \\(m\\).</p> <p>Ainsi  \\(20,90625\\) se code en simple pr\u00e9cision <code>0 10000011 10011110100000000000000</code> .</p> <p>Selon les valeurs de l\u2019exposant d\u00e9cal\u00e9 (notez que le d\u00e9calage vaut \\(2^b-1\\) o\u00f9 \\(b\\) est le nombre de bits utilis\u00e9s pour coder l\u2019exposant), le nombre final peut appartenir \u00e0 l'une ou l'autre des cat\u00e9gories suivantes.</p> <p>En simple pr\u00e9cision :</p> <ul> <li>Normalis\u00e9s : \\(0 &lt; E &lt; 255\\)</li> <li>D\u00e9normalis\u00e9s : \\(E = 0\\) et \\(m \\neq 0\\) de la forme \\((-1)^s \\times 0, m \\times 2^{-126}\\)</li> <li>Infinis : \\(E = 255\\) et \\(m = 0\\) </li> <li>Ind\u00e9finis (Not a Number, <code>NaN</code>) : \\(E=255\\) et \\(m \\neq0\\)</li> </ul> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On imagine un codage en virgule flottante sur simplement 6 bits, avec 1 bit pour le signe, 3 bits pour l'exposant et 2 pour la mantisse.</p> <p>On a ainsi \\(E = e + 3\\).</p> <ol> <li>D\u00e9terminer les nombres ind\u00e9finis.</li> <li>D\u00e9terminer l'\u00e9criture de \\(-\\infty\\) et \\(+\\infty\\).</li> <li>Placer sur une droite gradu\u00e9e les nombres normalis\u00e9s positifs.</li> <li>Placer sur une autre droite gradu\u00e9e les nombres d\u00e9normalis\u00e9s positifs.</li> </ol> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>Quel nombre s'\u00e9crit en virgule flottante simple pr\u00e9cision : <code>11000101000000101100001101000000</code> ?</p> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>Dans cet exercice, on consid\u00e8re le codage en virgule flottante \u00e0 simple pr\u00e9cision.</p> <ol> <li> <p>\u00c9crire le nombre \\(49,78125\\) en binaire, puis en notation scientifique binaire. En d\u00e9duire son codage en virgule flottante simple pr\u00e9cision (\\(s\\), \\(E\\), \\(m\\)).</p> </li> <li> <p>Parmi les nombres normalis\u00e9s positifs, quels sont le plus petit nombre et le plus grand nombre?</p> </li> <li> <p>Quelle est la diff\u00e9rence entre le plus grand nombre normalis\u00e9 et celui qui lui est imm\u00e9diatement inf\u00e9rieur?</p> </li> <li> <p>Parmi les nombres d\u00e9normalis\u00e9s positifs, quels sont le plus petit nombre et le plus grand nombre?</p> </li> </ol> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>Python utilise le codage en virgule flottante double pr\u00e9cision.</p> <p>Reprendre l'exercice pr\u00e9c\u00e9dent en double pr\u00e9cision.</p>"},{"location":"T02_TypesConstruits/accueil/","title":"Types construits","text":"<p>\u00c0 partir des types de bases, on construit des types conteneurs qui permettent de stocker diff\u00e9rents objets et d'y acc\u00e9der.</p> <p> </p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/","title":"T2.1 Tableaux et listes","text":""},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/#211-notion-de-tableau-indices","title":"2.1.1 Notion de tableau, indices","text":"<p>En informatique (comme ailleurs...), un tableau permet de stocker de fa\u00e7on structur\u00e9e plusieurs valeurs, en g\u00e9n\u00e9ral de m\u00eame type<sup>1</sup>.</p> <p>Voici comment on se repr\u00e9sente traditionnellement un tableau de 6 entiers, avec des cases (ou cellules):</p> <p> </p> <p>Bien entendu, il faut stocker ce tableau dans un variable et lui donner un nom. Appelons-le <code>tab</code>. Ce tableau est ordonn\u00e9, le premier \u00e9l\u00e9ment est 4, le deuxi\u00e8me est 2, et le dernier est 12.</p> <p>Notion d'indice (importantissime)</p> <ul> <li>On rep\u00e8re chaque \u00e9l\u00e9ment du tableau par sa position, le num\u00e9ro de la case, qu'on appelle indice.</li> </ul> <p> </p> <ul> <li> <p>On utilise la notation <code>tab[i]</code> pour d\u00e9signer l'\u00e9lement d'indice <code>i</code> du tableau <code>tab</code>. Dans l'exemple ci-dessus, <code>tab[3]</code> d\u00e9signe la valeur 42.</p> </li> <li> <p>Les indices commencent toujours \u00e0 <code>0</code>. Le premier \u00e9l\u00e9ment d'une liste <code>tab</code> (non vide) est donc toujours <code>tab[0]</code>.</p> </li> </ul> <p>indice vs. \u00e9l\u00e9ment</p> <p>Il ne faut surtout pas confondre <code>i</code> (l'indice d'un \u00e9l\u00e9ment) et <code>tab[i]</code> (l'\u00e9l\u00e9ment de la liste <code>tab</code> d'indice <code>i</code>).</p> <p>Enfin la taille ou longueur d'un tableau est le nombre d'\u00e9l\u00e9ments qu'il contient. Ici le tableau <code>tab</code> a une taille \u00e9gale \u00e0 6.</p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/#212-tableau-et-liste-de-python","title":"2.1.2 Tableau et liste de Python","text":"<p>Le type <code>list</code></p> <p>En Python, on impl\u00e9mente le type abstrait de tableau par le type <code>list</code>. On d\u00e9finit un tableau avec des crochets et on s\u00e9pare ses \u00e9l\u00e9ments par des virgules. Par abus de langage on parle de liste plut\u00f4t que de tableau<sup>2</sup>.</p> <p>Une liste vide se d\u00e9clarera par <code>[]</code>.</p> <pre><code>&gt;&gt;&gt; tab = [4, 2, 1, 42, 78, 12]\n&gt;&gt;&gt; type(tab)\n&lt;class 'list'&gt;\n&gt;&gt;&gt; tab[3]\n42\n&gt;&gt;&gt; len(tab)\n6\n&gt;&gt;&gt; tab[6]\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nIndexError: list index out of range\n&gt;&gt;&gt; tab[-1]\n12\n&gt;&gt;&gt; liste_vide = []\n&gt;&gt;&gt; len(liste_vide)\n0\n</code></pre> <p>Remarques:</p> <ul> <li>on obtient la taille d'une liste avec la fonction <code>len</code>;</li> <li>un indice sup\u00e9rieur \u00e0 <code>len(tab) - 1</code> provoque une erreur <code>IndexError: list index out of range</code> (en dehors de la liste);</li> <li>on peut utiliser les indices n\u00e9gatifs: en particulier l'indice -1 permet d'acc\u00e8der facilement au dernier \u00e9lement.</li> </ul>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/#213-modification-de-liste","title":"2.1.3 Modification de liste","text":"<p>En Python, les objets de type <code>list</code> sont modifiables (on emploie le mot mutable). Et c'est souvent une bonne chose, car des listes peuvent \u00e9voluer apr\u00e8s leur cr\u00e9ation. </p> <p>Modification d'un \u00e9l\u00e9ment existant</p> <p>On modifie un \u00e9l\u00e9ment du tableau par simple affectation, en \u00e9crasant sa valeur avec la nouvelle.</p> <pre><code>&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n&gt;&gt;&gt; famille[0] = \"Bartholomew\" # oui, c'est son vrai nom\n&gt;&gt;&gt; famille\n['Bartholomew', 'Lisa', 'Maggie']   \n</code></pre> <p>Ajout d'un \u00e9l\u00e9ment en fin de liste</p> <p>La m\u00e9thode <code>append</code> permet d'ajouter un \u00e9l\u00e9ment en fin de liste (et donc d'augmenter la taille de la liste).</p> <pre><code>&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n&gt;&gt;&gt; famille.append(\"Homer\")\n&gt;&gt;&gt; famille\n['Bart', 'Lisa', 'Maggie', 'Homer']\n&gt;&gt;&gt; famille.append(\"Marge\")\n&gt;&gt;&gt; famille\n['Bart', 'Lisa', 'Maggie', 'Homer', 'Marge']  \n</code></pre> <p>Un par un </p> <p>La m\u00e9thode <code>append</code> ne prend qu'un seul param\u00e8tre: on ne peut donc ajouter qu'un \u00e9l\u00e9ment \u00e0 la fois. Si on a plusieurs \u00e9l\u00e9ments \u00e0 ajouter \u00e0 une liste, il faudra donc autant d'instruction <code>append</code> que d'\u00e9l\u00e9ments \u00e0 ajouter.</p> <p>Concat\u00e9nation</p> <p>Comme avec les cha\u00eenes de caract\u00e8res, on peut concat\u00e9ner deux listes avec l'op\u00e9rateur <code>+</code> : <pre><code>&gt;&gt;&gt; ['truc', 'bidule'] + ['chose', 'machin']\n['truc', 'bidule', 'chose', 'machin']\n</code></pre></p> <p>On pourrait donc se dire qu'on peut ajouter un \u00e9l\u00e9ment en se passant de la m\u00e9thode <code>append</code>, comme dans l'exemple suivant, \u00e0 la diff\u00e9rence majeure qu'en concat\u00e9nant, une nouvelle liste est cr\u00e9\u00e9e et les listes initiales sont inchang\u00e9es. <pre><code>&gt;&gt;&gt; liste = [1, 1, 2, 3, 5]\n&gt;&gt;&gt; liste + [8]\n[1, 1, 2, 3, 5, 8]\n&gt;&gt;&gt; liste\n[1, 1, 2, 3, 5]\n&gt;&gt;&gt; liste.append(8)\n&gt;&gt;&gt; liste\n[1, 1, 2, 3, 5, 8]\n&gt;&gt;&gt; liste += [13, 21, 34, 55]\n</code></pre></p> <p>En pratique, on ne conna\u00eet souvent que le prochain \u00e9l\u00e9ment \u00e0 ajouter \u00e0 une liste et on utilisera donc majoritairement la m\u00e9thode <code>append</code>.</p> <p>Suppression d'un \u00e9l\u00e9ment</p> <p>La m\u00e9tode <code>remove</code> permet de supprimer la premi\u00e8re occurrence de l'\u00e9l\u00e9ment (et seulement la premi\u00e8re). \u00c0 condition bien entendu que l'\u00e9l\u00e9ment soit dans la liste...</p> <pre><code>&gt;&gt;&gt; matieres = [\"nsi\", \"maths\", \"anglais\", \"fran\u00e7ais\", \"maths\"]\n&gt;&gt;&gt; matieres.remove(\"maths\")\n&gt;&gt;&gt; matieres\n[\"nsi\", \"anglais\", \"fran\u00e7ais\", \"maths\"]\n&gt;&gt;&gt; matieres.remove(\"espagnol\")\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nValueError: list.remove(x): x not in list\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/#214-creation-de-listes","title":"2.1.4 Cr\u00e9ation de listes","text":"<p>Jusqu'\u00e0 pr\u00e9sent on a cr\u00e9\u00e9 des listes en extension, c'est-\u00e0-dire qu'on a \u00e9crit tous les \u00e9l\u00e9ments un par un entre crochets. Voici deux autres fa\u00e7ons de faire, souvent pratiques et parfois plus rapides lorsque la taille de la liste est grande.</p> <p>Avec une boucle <code>for</code></p> <p>On cr\u00e9e une liste vide, puis on lui ajoute \u00e9l\u00e9ment par \u00e9l\u00e9ment.</p> <p>Cr\u00e9ation d'une liste contenant les entiers multiples de 3 ou de 5 inf\u00e9rieurs \u00e0 100:</p> <pre><code>multiples = []\nfor k in range(101):\n    if k%3 == 0 or k%5 == 0:\n        multiples.append(k)\n</code></pre> <p>\u00c9lements identiques</p> <p>Il est souvent pratique d'initialiser une liste de taille donn\u00e9e, souvent en la remplissant de la m\u00eame valeur, souvent 0. Par exemple, pour produire une liste contenant 26 z\u00e9ros:</p> <pre><code>&gt;&gt;&gt; lst = 26 * [0]\n&gt;&gt;&gt; lst\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/#215-parcours-de-listes-a-connaitre-par","title":"2.1.5 Parcours de listes (\u00e0 conna\u00eetre par )","text":"<p>Il existe principalement deux m\u00e9thodes pour parcourir une liste: par ses \u00e9l\u00e9ments ou par les indices. Mais dans les deux cas on utilise une boucle <code>for</code>.</p> <p>Parcours par \u00e9l\u00e9ment</p> <p>On l'a d\u00e9j\u00e0 rencontr\u00e9 sur la boucle <code>for</code>:</p> <p><pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\", \"Homer\", \"Marge\"]\nfor membre in famille:\n    print(membre)\n</code></pre> affichera: <pre><code>Bart\nLisa\nMaggie\nHomer\nMarge\n</code></pre></p> <p>Parcours par indice</p> <p>Chaque \u00e9l\u00e9ment \u00e9tant accessible par son indice (de <code>0</code> \u00e0 <code>len(liste) - 1</code> ), il suffit de faire parcourir \u00e0 une variable <code>i</code> l'ensemble des entiers de <code>0</code> \u00e0 <code>len(liste) - 1</code>, par l'instruction <code>range(len(liste))</code> :</p> <p>Le code suivant affichera donc la m\u00eame chose que le pr\u00e9c\u00e9dent: <pre><code>famille = [\"Bart\", \"Lisa\", \"Maggie\",  \"Homer\", \"Marge\"]\nfor i in range(len(famille)):\n    print(famille[i])\n</code></pre></p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes1/#216-exercices","title":"2.1.6 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Solution <p>Construire une liste de 100 \u00e9l\u00e9ments tous \u00e9gaux \u00e0 0. Puis remplacer tous les \u00e9l\u00e9ments d'indice impair par des 1.</p> <pre><code>lst = 100 * [0]\nfor k in range(100):\n    if k%2 != 0:\n        lst[k] = 1\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Solution <p>Trouvez le nombre qui est exactement \u00e0 la m\u00eame place dans la liste <code>list1</code> et dans la liste <code>list2</code>, sachant que :</p> <ul> <li>les deux listes ont la m\u00eame taille</li> <li>vous n'avez droit qu'\u00e0 une seule boucle <code>for</code>. </li> </ul> <pre><code>list1 = [8468, 4560, 3941, 3328, 7, 9910, 9208, 8400, 6502, 1076, 5921, 6720, 948, 9561, 7391, 7745, 9007, 9707, 4370, 9636, 5265, 2638, 8919, 7814, 5142, 1060, 6971, 4065, 4629, 4490, 2480, 9180, 5623, 6600, 1764, 9846, 7605, 8271, 4681, 2818, 832, 5280, 3170, 8965, 4332, 3198, 9454, 2025, 2373, 4067]\nlist2 = [9093, 2559, 9664, 8075, 4525, 5847, 67, 8932, 5049, 5241, 5886, 1393, 9413, 8872, 2560, 4636, 9004, 7586, 1461, 350, 2627, 2187, 7778, 8933, 351, 7097, 356, 4110, 1393, 4864, 1088, 3904, 5623, 8040, 7273, 1114, 4394, 4108, 7123, 8001, 5715, 7215, 7460, 5829, 9513, 1256, 4052, 1585, 1608, 3941]\n</code></pre> <pre><code>list1 = [8468, 4560, 3941, 3328, 7, 9910, 9208, 8400, 6502, 1076, 5921, 6720, 948, 9561, 7391, 7745, 9007, 9707, 4370, 9636, 5265, 2638, 8919, 7814, 5142, 1060, 6971, 4065, 4629, 4490, 2480, 9180, 5623, 6600, 1764, 9846, 7605, 8271, 4681, 2818, 832, 5280, 3170, 8965, 4332, 3198, 9454, 2025, 2373, 4067]\nlist2 = [9093, 2559, 9664, 8075, 4525, 5847, 67, 8932, 5049, 5241, 5886, 1393, 9413, 8872, 2560, 4636, 9004, 7586, 1461, 350, 2627, 2187, 7778, 8933, 351, 7097, 356, 4110, 1393, 4864, 1088, 3904, 5623, 8040, 7273, 1114, 4394, 4108, 7123, 8001, 5715, 7215, 7460, 5829, 9513, 1256, 4052, 1585, 1608, 3941]\n\nfor i in range(len(list1)):\n    if list1[i] == list2[i]:\n        print(list1[i])\n</code></pre> <p>Exercice  3</p> \u00c9nonc\u00e9Solution <p>On consid\u00e8re la liste </p> <pre><code>temp = [11, 28, -16, -18, -10, 16, 10, 16, 2, 7, 23, 22, -4, -2, 19, 16, 22, -8, 18, -14, 29, -1, 16, 22, -5, 6, 2, -4, 9, -17, -13, 22, 14, 24, 22, -9, -18, -9, 25, -11, 17, 17, 25, -10, 2, -18, 29, 14, -16, 7]\n</code></pre> <p>Construire la liste <code>temp_pos</code> qui ne contient que les \u00e9l\u00e9ments positifs de <code>temp</code>. </p> <pre><code>temp_pos = []\nfor t in temp:\n    if t &gt;= 0:\n        temp_pos.append(t)\n</code></pre> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>Reprendre la fonction <code>diviseurs</code> de l'exercice 4 de la section 6.1.5 pour qu'elle renvoie la liste des diviseurs.</p> <pre><code>def diviseurs(n):\n    lst_div = []\n    for k in range(1, n+1):\n        if n%k == 0:\n            lst_div.append(k)\n    return lst_div\n</code></pre> <p>Exercice  5 (BNS)</p> \u00c9nonc\u00e9Solution <p>Programmer la fonction <code>recherche</code>, prenant en param\u00e8tre un tableau non vide <code>tab</code> (type <code>list</code>) d'entiers et un entier <code>n</code>, et qui renvoie l'indice de la derni\u00e8re occurrence de l'\u00e9l\u00e9ment cherch\u00e9. Si l'\u00e9l\u00e9ment n'est pas pr\u00e9sent, la fonction renvoie la longueur du tableau.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; recherche([5, 1, 3],3)\n2\n&gt;&gt;&gt; recherche([2, 4], 2)\n0\n&gt;&gt;&gt; recherche([2, 3, 5, 2, 4], 2)\n3\n&gt;&gt;&gt; recherche([2, 3, 5, 2, 4], 1)\n5\n</code></pre> <pre><code>def recherche(tab: list, n: int) -&gt; int:\n    '''\n    Renvoie l'indice de la derni\u00e8re occurence de l'entier n dans la liste tab.\n    Si tab est vide, renvoie la longueur de la liste tab.\n    '''\n    indice_max = len(tab) # valeur par d\u00e9faut si tab est vide\n    for i in range(len(tab)):\n        if tab[i] == n:\n            indice_max = i\n    return i\n</code></pre> <p>Exercice  6 : maximum d'un tableau (\u00e0 conna\u00eetre par )</p> \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>max_tableau</code> qui prend un tableau <code>tab</code> (de type <code>list</code>) d'entiers strictement positifs et qui renvoie le plus grand de ces entiers.</p> <p>Si le tableau est vide, la fonction renvoie <code>0</code>.</p> <p>Une fonction de tests est fournie.</p> <pre><code>assert max_tableau([4, 1, 5, 12, 8]) == 12\nassert max_tableau([1]) == 1\nassert max_tableau([]) == 0\n</code></pre> <p>Id\u00e9e de l'algorithme:</p> <ul> <li>d\u00e9finir une variable donnant le maximum, initialis\u00e9e \u00e0 0 (si le tableau est vide);</li> <li>parcourir le tableau (si vide, rien \u00e0 faire);</li> <li>pour chaque valeur, la comparer au maximum. Si elle est sup\u00e9rieure au maximum, remplacer ce maximum par la valeur;</li> <li>renvoyer le maximum</li> </ul> <pre><code>def max_tableau(tab: list) -&gt; int:\n    '''\n    Renvoie la valeur maximale du tableau d'entiers strictement positifs tab.\n    Si tab est vide, la fonction renvoie 0.\n    '''\n\n    maxi = 0\n    for valeur in tab:\n        if valeur &gt; maxi:\n            maxi = valeur\n    return maxi\n</code></pre> <p>Avec un parcours par indices plut\u00f4t que par \u00e9l\u00e9ments:</p> <pre><code>def max_tableau(tab: list) -&gt; int:\n    '''\n    Renvoie la valeur maximale du tableau d'entiers strictement positifs tab.\n    Si tab est vide, la fonction renvoie 0.\n    '''\n\n    maxi = 0\n    for i in range(len(tab)):\n        if tab[i] &gt; maxi:\n            maxi = tab[i]\n    return maxi\n</code></pre> <p>Exercice  7</p> \u00c9nonc\u00e9Solution <p>Construire une liste de taille 26 contenant le nombre d'occurences de chaque lettre de l'alphabet dans le texte suivant:</p> <pre><code>texte_long = '''\nmpaowhuqhvyywtvypjkfrrasexnwzrgpargvpjlfbjsxxjipjgkyscgdiqswpvpbzigfkljhicuftshk\nqekwqojwchsgyuvakynjpxlacrnbojawdisjzbcqjflhgqofhccdxnqpbnxcxcypawaqgzbikretwlkf\nqodnoseirzvssdczsyczqjbugcgjuorxciblnojkvygxqirysffsmjyokjdsxlymjokgodupumjoxcmi\nteeenikwlkzidirjnmexsmqjefsgpbpoynusfpudmxwcwrzzqzuobjtlyshbvvgjkhoujsdlnsyfshuu\nmfmqmssbyrzybswyswbdmqmcwsdudrfdnmlmnchossxcwarfmpkrcqcyvyjkplzexrnebukxhqbnzkgh\nnalfpkxghypaimemqzmcreozagufiljxdmgrwftyajtonfisefxujtdmpgxttugxhvpgdqhvgzohovbe\nqaafwqfiokzhtbxgoxpzzvbswlxdtykgufqevlmjjrddufrogzsfzzuaqpqfzinvmfpcylgftkkhqylp\nrgzywwefwghhrivsjtvbbcixhztwujdqqesdertmtwdricrzmwsibhstsgnnxbvqnyklcbrcxtycvcww\nojphbqyrjffndkgwqfqvarfupklwwixekudmbspqtydkegltqvwjzfooscehpnfwvvnkrxsfakwezvol\nmpvnprcrwomddjneyrhpxmnrveibxqxcjluezypvsbfudilpjdqflsdhwucjgtusxjjcnewamoewwjhu\n'''\n</code></pre> <pre><code>occurences = 26 * [0]\nfor lettre in texte_long:\n    indice = ord(lettre) - ord('a')\n    occurences[indice] += 1\n</code></pre> <p> </p> <ol> <li> <p>m\u00eame si Python l'autorise, il n'y a pas beaucoup de situations o\u00f9 on va cr\u00e9er un tableau avec des valeurs de types diff\u00e9rents.\u00a0\u21a9</p> </li> <li> <p>en fait la liste est un autre type abstrait de donn\u00e9es en informatique. Python identifie un peu les deux. C'est un peu plus compliqu\u00e9 en r\u00e9alit\u00e9, mais c'est une autre histoire...\u00a0\u21a9</p> </li> </ol>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes2/","title":"T2.1 Tableaux \u00e0 plusieurs dimensions","text":""},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes2/#217-listes-de-listes","title":"2.1.7 Listes de listes","text":"<p>Nous avons vu qu'une liste pouvait contenir des \u00e9l\u00e9ments de tous types : des entiers, des chaines des caract\u00e8res... et pourquoi pas une liste qui contient des listes ?</p> <p>On obtient alors un tableau \u00e0 deux dimensions... qu'on appelle \u00e9galement matrice.</p> <p>Exemple</p> <p>La liste <code>tab</code> ci-dessous est compos\u00e9e de 3 listes qui elles-m\u00eames contiennent trois nombres : <pre><code>tab =  [[3, 5, 2],\n        [7, 1, 4], \n        [8, 6, 9]]\n</code></pre></p> <p>On acc\u00e8de aux lignes du tableau avec un simple crochet:</p> <pre><code>&gt;&gt;&gt; tab[1]\n[7, 1, 4]\n</code></pre> <p>Et aux \u00e9l\u00e9ments par un double crochet:</p> <pre><code>&gt;&gt;&gt; tab[2][1]\n6\n</code></pre> <p></p> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re le jeu du Morpion (ou Tic-Tac-Toe) dont la surface de jeu vierge est represent\u00e9e par le tableau : <pre><code> tab = [[' ', ' ', ' '], [' ', ' ', ' '], [' ', ' ', ' ']]\n</code></pre></p> <p>Les premiers coups jou\u00e9s sont ceux-ci :</p> <ul> <li><code>tab[1][1] = 'X'</code> </li> <li><code>tab[2][1] = 'O'</code> </li> <li><code>tab[2][2] = 'X'</code> </li> <li><code>tab[0][0] = 'O'</code> </li> </ul> <p>Quel coup doit maintenant jouer le joueur  <code>'X'</code> pour s'assurer la victoire ?</p> <pre><code>tab[0][2] = 'X'\n# ou\ntab[1][2] = 'X'\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes2/#218-parcours-dune-liste-de-listes","title":"2.1.8 Parcours d'une liste de listes","text":"<p>Exemple</p> <ul> <li> <p>Parcours par \u00e9l\u00e9ments : <pre><code>for ligne in tab:\n    for elt in ligne:\n        print(elt)\n</code></pre></p> </li> <li> <p>Parcours par indice : <pre><code>for i in range(len(tab)):\n    for j in range(len(tab[i])):\n        print(tab[i][j])\n</code></pre></p> </li> </ul> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re la liste <code>m</code> ('m' comme matrice) suivante :  </p> <pre><code>m = [[1, 9, 4], [4, 1, 8], [7, 10, 1]]\n</code></pre> <p>Quelle est la somme de tous les nombres de la matrice <code>m</code> ?</p> <pre><code>m = [[1, 9, 4], [4, 1, 8], [7, 10, 1]]\n\nsomme = 0\nfor ligne in m:\n    for elt in ligne:\n        somme += elt\n\nprint(somme)\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes2/#219-exercices","title":"2.1.9 Exercices","text":"<p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>On mod\u00e9lise un labyrinthe rectangulaire par un tableau \u00e0 deux dimensions d'entiers dans lequel:</p> <ul> <li>0 repr\u00e9sente une case vide, hors case de d\u00e9part et arriv\u00e9e;</li> <li>1 repr\u00e9sente un mur;</li> <li>2 repr\u00e9sente le d\u00e9part du labyrinthe;</li> <li>3 repr\u00e9sente l'arriv\u00e9e du labyrinthe.</li> </ul> <p>Ce labyrinthe est donn\u00e9 par :</p> <pre><code>laby = [[2, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 1, 3, 1, 0]]\n</code></pre> <ol> <li>Quelle instruction permet de r\u00e9cup\u00e9rer la hauteur du labyrinthe (c'est-\u00e0-dire le nombre de lignes du tableau)?</li> <li>Quelle instruction permet de r\u00e9cup\u00e9rer la largeur du labyrinthe (c'est-\u00e0-dire le nombre de colonnes du tableau)?</li> <li>\u00c9crire un programme qui affiche successivement les lignes de ce tableau (pour visualiser plus facilement le labyrinthe).</li> <li>Proposer un chemin - c'est-\u00e0-dire les \u00e9l\u00e9ments <code>laby[i][j]</code> - du d\u00e9part vers l'arriv\u00e9e du labyrinthe.</li> </ol> <ol> <li>Le nombre de lignes correspond au nombre d'\u00e9l\u00e9ment de la liste <code>laby</code>, c'est-\u00e0-dire <code>len(laby)</code>.</li> <li>Le nombre de colonnes correspond au nombre d'\u00e9l\u00e9ments de chaque ligne, c'est-\u00e0-dire de chaque \u00e9l\u00e9ment de la liste <code>laby</code>. En g\u00e9n\u00e9ral on choisit la premi\u00e8re, donc l'instruction est <code>len(laby[0])</code>.</li> <li> <p>Par exemple:</p> <pre><code>for ligne in laby:\n    print(ligne)    \n</code></pre> </li> <li> <p><code>chemin = [laby[0][0], laby[1][0], laby[2][0], laby[3][0], laby[3][1], laby[4][1], laby[4][2], laby[4][3], laby[3][3], laby[2][3], laby[1][3], laby[1][4], laby[0][4], laby[0][5], laby[0][6], laby[1][6], laby[1][7], laby[2][7], laby[3][7], laby[3][6], laby[3][5], laby[4][5]]</code></p> </li> </ol> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>Dans le fichier <code>input.txt</code> (\u00e0 t\u00e9l\u00e9charger) est contenu un tableau de ch\u00e2ines de caract\u00e8res.</p> <p>Le code suivant permet de lire ce fichier et de convertir ces cha\u00eenes de caract\u00e8res en une liste de listes (un tableau \u00e0 2 dimensions).</p> <pre><code>tab = [list(row) for row in open('input.txt').read().splitlines()]\n</code></pre> <ol> <li>Quelles sont les dimensions de ce tableau?        </li> <li>Dans ce tableau, seules deux lettres sont en majuscules. R\u00e9cup\u00e9rer leurs indices...</li> </ol> <pre><code>tab = [list(row) for row in open('input.txt').read().splitlines()]\nfor i in range(len(tab)):\n    for j in range(len(tab[i]): # ou len(tab[0]) puisque le tableau est \u00abrectangulaire\u00bb\n        if ord(tab[i][j]) &lt; 97:\n            print(f\"Majuscule {tab[i][j]} trouv\u00e9e en ligne {i} et colonne {j}\")\n</code></pre> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>Dans le th\u00e8me T6.1.2, \u00e0 l'exercice 6 de la s\u00e9rie 4 avec Pygame, le code suivant permettait de tracer un \u00abcarr\u00e9 de carr\u00e9s\u00bb dont la couleur \u00e9tait choisie al\u00e9atoirement.</p> <pre><code>from random import randint\nimport pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((500, 500))\npygame.display.set_caption(\"Carr\u00e9 de carr\u00e9s\")\n\nfor i in range(20):\n    for j in range(20):\n        couleur = (randint(0, 255), randint(0, 255), randint(0, 255))\n        pygame.draw.rect(fenetre, couleur, (25*i, 25*j, 50, 50))\n\npygame.display.flip()\n\n# Boucle des \u00e9v\u00e9nements\ncontinuer = True\nwhile continuer:\n    for evenement in pygame.event.get():    #Attente des \u00e9v\u00e9nements\n        if evenement.type == QUIT:\n            continuer = False\n\n# Sortie\npygame.quit()\n</code></pre> <p>Adapter ce code pour repr\u00e9senter un tableau donn\u00e9 dont les \u00e9l\u00e9ments sont des \u00abcodes\u00bb couleur. </p> <p>Par exemple, le tableau:</p> <pre><code>exemple = [[0, 2, 1, 0, 1],\n           [1, 2, 0, 0, 2],\n           [2, 0, 0, 1, 1]]\n</code></pre> <p>o\u00f9 le 0 repr\u00e9sente le noir, le 1 le rouge et le 2 le bleu sera affich\u00e9 ainsi:</p> <p> </p> <p>On modifie uniquement les lignes 10 \u00e0 13 en d\u00e9finissant la couleur en fonction de la valeur correspondante dans le tableau <code>exemple</code>.</p> <pre><code>exemple = [[0, 2, 1, 0, 1],\n           [1, 2, 0, 0, 2],\n           [2, 0, 0, 1, 1]]\n\nfor i in range(len(exemple)):\n    for j in range(len(exemple[i]):\n        if exemple[i] == 0:\n            couleur = (0, 0, 0)\n        elif exemple[i][j] == 1:\n            couleur = (255, 0, 0)\n        else:\n            couleur = (0, 0, 255)\n        pygame.draw.rect(fenetre, couleur, (25*i, 25*j, 50, 50))\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/","title":"T2.1 Compl\u00e9ments sur les listes","text":""},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#219-copie-de-listes","title":"2.1.9 Copie de listes","text":"<p>Vu en classe : une copie un peu trop parfaite</p> <p>Observez le code ci-dessous, r\u00e9alis\u00e9 sans trucage. <pre><code>&gt;&gt;&gt; listA = [1, 2, 3]\n&gt;&gt;&gt; listB = listA\n&gt;&gt;&gt; listA.append(7)\n&gt;&gt;&gt; listB\n[1, 2, 3, 7]\n&gt;&gt;&gt; listB.append(8)\n&gt;&gt;&gt; listA\n[1, 2, 3, 7, 8]\n</code></pre></p> <p>Tout se passe comme si les listes  <code>listA</code> et<code>listB</code> \u00e9taient devenus des clones \u00absynchronis\u00e9s\u00bb depuis l'affectation <code>listB = listA</code>.</p> <p>Analyse gr\u00e2ce \u00e0 PythonTutor</p> <p> </p> <p>L'illustration de PythonTutor nous donne la cl\u00e9 de l'\u00e9nigme : </p> <p><code>listA</code> et<code>listB</code> sont en fait un seul et m\u00eame objet.</p> <p>Comment en avoir le c\u0153ur net ? En observant leur adresse-m\u00e9moire, disponible gr\u00e2ce \u00e0 la fonction <code>id</code> :</p> <pre><code>&gt;&gt;&gt; id(listA)\n140485841327616\n&gt;&gt;&gt; id(listB)\n140485841327616\n</code></pre> <p>Ceci met en \u00e9vidence que la m\u00e9taphore du tiroir dont on se sert pour expliquer ce qu'est une variable est malheureusement inexacte. Une variable est une r\u00e9f\u00e9rence vers une adresse-m\u00e9moire. Si deux variables font r\u00e9f\u00e9rence \u00e0 la m\u00eame adresse-m\u00e9moire, alors elles sont totalement identiques:  toute modification de l'une entra\u00eene une modification de l'autre.  </p>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#mais-alors-comment-copier-le-contenu-dune-liste-vers-une-autre-sans-creer-un-clone","title":"Mais alors, comment copier le contenu d'une liste vers une autre sans cr\u00e9er un clone ?","text":"<p>Deux fa\u00e7ons (entre autres) de cr\u00e9er une vraie copie d'une liste</p> <pre><code>&gt;&gt;&gt; listA = [3, 4, 5]\n&gt;&gt;&gt; listB = listA.copy()\n&gt;&gt;&gt; listC = list(listA)\n</code></pre> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Contr\u00f4ler les adresses m\u00e9moires avec la fonction <code>id</code> pour prouver que les exemples pr\u00e9c\u00e9dents produisent bien des objets diff\u00e9rents.</p> <pre><code>&gt;&gt;&gt; listA = [3, 4, 5]\n&gt;&gt;&gt; listB = list(listA)\n&gt;&gt;&gt; listA.append(9)\n&gt;&gt;&gt; listB\n[3, 4, 5]\n&gt;&gt;&gt; id(listA)\n140157471522368\n&gt;&gt;&gt; id(listB)\n140157465797184\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#2110-listes-en-comprehension","title":"2.1.10 Listes en compr\u00e9hension","text":""},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#des-exemples-simples","title":"Des exemples simples","text":"<p>On a d\u00e9j\u00e0 vu comment cr\u00e9er une liste par extension, c'est-\u00e0-dire en explicitant tous ses \u00e9l\u00e9ments:</p> <pre><code>tab = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n</code></pre> <p>Ou bien par ajouts successifs \u00e0 l'aide d'une boucle <code>for</code>, ce qui est est bien plus efficace, surtout lorsque la taille du tableau est grande:</p> <pre><code>tab = []\nfor k in range(10):\n    tab.append(k**2)\n</code></pre> <p>Python permet \u00e9galement de combiner ces deux \u00e9critures, en \u00abrentrant\u00bb la boucle <code>for</code> dans les crochets de d\u00e9finition de la liste:</p> <pre><code>tab = [k**2 for k in range(10)]\n</code></pre> <p>On dit qu'on a cr\u00e9\u00e9 la liste en compr\u00e9hension: </p> <ul> <li><code>tab</code> est constitu\u00e9e des carr\u00e9s de <code>k</code> pour <code>k</code> allant de 0 \u00e0 9;</li> <li>ou bien encore <code>tab</code> est la liste des carr\u00e9s des entiers allant de 0 \u00e0 9.</li> </ul> <p> </p> <p>On peut \u00e9galement cr\u00e9er une liste en compr\u00e9hension en parcourant les \u00e9l\u00e9ments d'un iterable d\u00e9j\u00e0 existant, au lieu d'un <code>range</code>. Cr\u00e9ons par exemple la liste des images par une fonction <code>f</code> calcul\u00e9es sur une liste d'ant\u00e9c\u00e9dents:</p> <pre><code>antecedents = [-1, 0, 5, 10, 100]\n\ndef f(x):\n    return 2*x + 3\n\nimages = [f(x) for x in antecedents]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#avec-un-filtre","title":"Avec un filtre","text":"<p>Reprenons par exemple l'exercice 4 du cours sur les listes. On souhaitait garder les valeurs positives de la liste <code>temp</code>:</p> <p><pre><code>temp = [11, 28, -16, -18, -10, 16, 10, 16, 2, 7, 23, 22, -4, -2, 19, 16, 22, -8, 18, -14, 29, -1, 16, 22, -5, 6, 2, -4, 9, -17, -13, 22, 14, 24, 22, -9, -18, -9, 25, -11, 17, 17, 25, -10, 2, -18, 29, 14, -16, 7]\n</code></pre> La solution retenue: <pre><code>temp_pos = []\nfor t in temp:\n    if t &gt;= 0:\n        temp_pos.append(t)\n</code></pre></p> <p>On peut cr\u00e9er la m\u00eame chose en compr\u00e9hension, en incluant l'instruction conditionnelle <code>if</code> dans la d\u00e9finition de la liste:</p> <pre><code>temp_pos = [t for t in temp if t &gt;= 0]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#avec-deux-boucles-imbriquees","title":"Avec deux boucles imbriqu\u00e9es","text":"<p>\u00c9x\u00e9cuter et m\u00e9diter l'exemple suivant (notamment l'ordre des boucles):</p> <pre><code>couleurs = ['Pique', 'Coeur', 'Carreau', 'Tr\u00e8fle']\nvaleurs = ['As', 'Deux', 'Trois', 'Quatre', 'Cinq', 'Six', 'Sept', 'Huit', 'Neuf', 'Dix', 'Valet', 'Dame', 'Roi']\n\ncartes = [f\"{v} de {c}\" for c in couleurs for v in valeurs]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#en-deux-dimensions","title":"En deux dimensions","text":"<p>On peut se servir de cette m\u00e9thode pour construire rapidement des tableaux \u00e0 deux dimensions. Par exemple, voici comment on peut cr\u00e9er un tableau de z\u00e9ros de 3 lignes et 5 colonnes:</p> <pre><code>tab = [5 * [0] for i in range(3)]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/T2.1_Listes3/#2111-exercices","title":"2.1.11 Exercices","text":"<p>Dans chaque exercice, la liste doit \u00eatre cr\u00e9e en compr\u00e9hension.</p> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Dans chaque cas, \u00e9crire la liste produite par l'instruction donn\u00e9e:</p> <ol> <li><code>[3*i for i in range(1, 6)]</code> </li> <li><code>[k**2 + 1 for k in range(5)]</code> </li> <li><code>[k**3 for k in range(20) if k%5 == 0]</code></li> <li><code>[2*m for m in ['bla', 'to', 'pa', 'tut']</code> </li> <li><code>[n+5 for n in [7, 17, 9, 5, 8, 18, 15]]</code> </li> <li><code>[k for k in [3, -1, 7, 0, 8, -5, 23, 12, -42, 1001, 78, -98, 72, 50] if k%7 == 0]</code> </li> </ol> <p>Il suffit d'ex\u00e9cuter dans une console python...</p> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>Construire chacune des listes suivantes en compr\u00e9hension:</p> <ol> <li>la liste des doubles des \u00e9l\u00e9ments de <code>[-4, 0, 7, -12, 42, 78]</code></li> <li>la liste des  doubles des \u00e9l\u00e9ments de <code>[-4, 0, 7, -12, 42, 78]</code> qui sont strictement positifs.</li> <li>les \u00e9l\u00e9ments de la premi\u00e8re \u00abcolonne\u00bb d'un tableau <code>tab</code> \u00e0 deux dimensions.</li> </ol> <ol> <li>On \u00e9crit <code>[2*n for n in [-4, 0, 7, -12, 42, 78]]</code> .</li> <li>On ajoute un filtre \u00e0 la liste pr\u00e9c\u00e9dente: <code>[2*n for n in [-4, 0, 7, -12, 42, 78] if n &gt; 0]</code> .</li> <li> <p>On s\u00e9lectionne uniquement les \u00e9l\u00e9ments d'indice 0 dans chaque \u00e9l\u00e9ment (de type <code>list</code>) de <code>tab</code>:</p> <p><pre><code>[ligne[0] for ligne in tab]\n</code></pre> ou</p> <pre><code>[tab[i][0] for i in range(len(tab))]\n</code></pre> </li> </ol> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>Cr\u00e9er la liste constitu\u00e9e des valeurs absolues des entiers contenus dans la liste <code>valeurs</code>.</p> <pre><code>valeurs = [-2, 5, 1, -9, 2, 12, -8, -15, 7, 14, -27, 0, -2, 4, -5]\n</code></pre> <pre><code>valeurs = [-2, 5, 1, -9, 2, 12, -8, -15, 7, 14, -27, 0, -2, 4, -5]\nabsolues = [abs(v) for v in valeurs]\n</code></pre> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>Cr\u00e9er la liste contenant tous les entiers inf\u00e9rieurs ou \u00e9gaux \u00e0 100 multiples de 7.</p> <pre><code>lst = [k for k in range(101) if k%7 == 0]\n</code></pre> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>Cr\u00e9er une liste constitu\u00e9e de 50 nombres entiers al\u00e9atoires compris entre 0 et 100.</p> <pre><code>import random\nlst = [random.randint(0, 100) for _ in range(50)]\n</code></pre> <p>Exercice  6</p> \u00c9nonc\u00e9Correction <p>Reprende le pyd\u00e9fi Le jardin des Hesp\u00e9rides en \u00e9crivant en compr\u00e9hension la liste des nombres \u00e0 sommer.</p> <pre><code>pommes = [etage ** 2 for etage in range(51) if etage%3 == 0]\n</code></pre> <p>Exercice  7</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re la liste suivante: <pre><code>lst = [51, 52, 66, 91, 92, 82, 65, 53, 86, 42, 79, 95]\n</code></pre> Seuls les nombres entre 65 et 90 ont une signification : ce sont des codes Unicode de lettres (r\u00e9cup\u00e9rables par la fonction <code>chr</code>).</p> <p>Cr\u00e9er une liste <code>sol</code> qui contient les lettres correspondants aux nombres ayant une signification.</p> <pre><code>sol = [chr(code) for code in lst if code &gt;= 65 and code &lt;= 90]\n</code></pre> <p>Exercice  8</p> \u00c9nonc\u00e9Correction <p>Consulter l'\u00e9nonc\u00e9 du pyd\u00e9fi Le lion de N\u00e9m\u00e9e .</p> <ol> <li> <p>\u00c9crire une fonction prenant en param\u00e8tre une lettre et qui renvoie sa \u00abvaleur\u00bb. Pour rappel: <pre><code>&gt;&gt;&gt; ord('A')\n65\n</code></pre></p> </li> <li> <p>\u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res et qui renvoie sa \u00abvaleur\u00bb. Vous devez cr\u00e9er une liste en compr\u00e9hension utilisant la fonction de la question 1, et l'utilisation de la fonction <code>sum</code> est autoris\u00e9e.</p> </li> <li>Cr\u00e9er en compr\u00e9hension la liste des valeurs des divinit\u00e9s.</li> </ol> <p>Pour la fonction <code>split</code> utilis\u00e9e ci-dessous, voir sur cette page .</p> <pre><code>divinites = 'ARTEMIS ASCLEPIOS ATHENA ATLAS CHARON CHIRON CRONOS DEMETER EOS ERIS EROS GAIA HADES HECATE HEPHAISTOS HERA HERMES HESTIA HYGIE LETO MAIA METIS MNEMOSYNE NYX OCEANOS OURANOS PAN PERSEPHONE POSEIDON RHADAMANTHE SELENE THEMIS THETIS TRITON ZEUS'.split()\n</code></pre> <pre><code>divinites = 'ARTEMIS ASCLEPIOS ATHENA ATLAS CHARON CHIRON CRONOS DEMETER EOS ERIS EROS GAIA HADES HECATE HEPHAISTOS HERA HERMES HESTIA HYGIE LETO MAIA METIS MNEMOSYNE NYX OCEANOS OURANOS PAN PERSEPHONE POSEIDON RHADAMANTHE SELENE THEMIS THETIS TRITON ZEUS'.split()\n\ndef valeur(lettre: str) -&gt; int:\n    '''\n    Renvoie la valeur d'une lettre capitale de l'alphabet.\n    Par ex: A -&gt; 1, B -&gt; 2, ... Z -&gt; 26\n    '''\n    return ord(lettre) - 64\n\ndef valeur_mot(mot: str) -&gt; int:\n    '''\n    Renvoie la valeur d'un mot \u00e9tant la somme des valeurs des lettres le \n    constituant.\n    '''\n    valeurs_lettres = [valeur(l) for l in mot]\n    return sum(valeurs_lettres)\n\nvaleurs_divinites = [valeur_mot(d) for d in divinites]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/TP_image/","title":"TP Image num\u00e9rique","text":""},{"location":"T02_TypesConstruits/T2.1_Listes/TP_image/#1-tableau-de-pixels","title":"1. Tableau de pixels","text":"<p>Les caract\u00e9ristiques d'une image</p> QuadrillageD\u00e9finitionR\u00e9solution <p>Une image num\u00e9rique se pr\u00e9sente sous la forme d\u2019un quadrillage - ou d'un tableau - dont chaque case est un pixel d\u2019une couleur donn\u00e9e. On peut donc rep\u00e9rer chaque pixel par sa ligne et sa colonne dans ce tableau (ou \u00e0 l'aide de coordonn\u00e9es en partant du coin en haut \u00e0 gauche<sup>1</sup>).</p> <p> </p> <p>La d\u00e9finition de l\u2019image est le nombre total de pixels qui la composent. Celle-ci n\u2019est pas forc\u00e9ment \u00e9gale \u00e0 la d\u00e9finition du capteur.</p> <p>On l'obtient donc en multipliant sa largeur par sa hauteur. Par exemple, une image de 1920 pixels de largeur sur 1080 pixels de hauteur a une d\u00e9finition de 1920 x 1080 = 2073600 pixels soit \u00e0 peu pr\u00e8s 2 millions de pixels.</p> <p>La  r\u00e9solution  de  l\u2019image, c\u2019est-\u00e0-dire le  nombre  de  pixels  par  unit\u00e9 de  longueur,  d\u00e9termine  sa  qualit\u00e9  \u00e0 l\u2019impression ou sur un \u00e9cran.</p> <p>Par exemple, la r\u00e9solution standard pour affichage sur le web est de 72 ppp (pixels par pouce) alors qu'une r\u00e9solution de 300 ppp est recommand\u00e9e pour l'impression.</p> <p>Le codage des pixels (couleurs)</p> <p>Chaque pixel correspond \u00e0 un triplet de trois nombres entiers, soit les valeurs de rouge (Red), de vert (Green) et de bleu (Blue) afin de reconstituer la couleur. Chaque valeur est cod\u00e9e sur un octet, soit entre 0 et 255 (ou en pourcentages, ou en hexad\u00e9cimal, voir ici). On parle de code RGB (RVB in french).</p> <p> </p> <p>\u00c0 noter:</p> <ul> <li>une couleur dont les 3 composantes sont identiques correspond \u00e0 un niveau de gris;</li> <li>selon les formats, une quatri\u00e8me composante peut s'ajouter: le canal alpha. Cette valeur (sur un octet \u00e9galement) indique le niveau de transparence du pixel.</li> </ul> <p>Sites incontournables</p> <p>Pour visualiser les couleurs au format RGB, et convertir en hexad\u00e9cimal : </p> <ul> <li>http://www.proftnj.com/RGB3.htm </li> <li>https://www.w3schools.com/colors/colors_rgb.asp </li> </ul>"},{"location":"T02_TypesConstruits/T2.1_Listes/TP_image/#2-les-modules","title":"2. Les modules","text":"<p>Pour manipuler les images, nous allons avoir besoin du module <code>imageio</code>. Ce module n\u00e9cessite d'utiliser \u00e9galement le module <code>numpy</code> pour cr\u00e9er des tableaux d'entiers non sign\u00e9s sur 8 bits (un octet).</p> <p> </p> <p><code>imageio</code></p> <ul> <li>Ouvrir et charger une image existante (<code>ada.png</code> par exemple)  dans une variable (<code>img</code> par exemple):</li> </ul> <pre><code>img = imageio.imread(\"ada.png\")\n</code></pre> <p>Acc\u00e8s \u00e0 l'image</p> <p>L'image doit \u00eatre dans le dossier courant de travail, a fortiori le m\u00eame que le fichier <code>.py</code>. Si ce n'est pas le cas, il faudra le modifier.</p> <ul> <li>La taille de l'image est accessible dans le triplet (hauteur, largeur, nombre de composantes) donn\u00e9 par:</li> </ul> <pre><code>img.shape\n</code></pre> <ul> <li>Lire/modifier un pixel: il s'agit tout simplement de travailler sur le tableau, par indices et par r\u00e9affectation.</li> </ul> <pre><code>print(img[2][10])       # pour afficher le pixel ligne 2, colonne 10\nimg[2][10] = [0, 0, 0]  # pour le mettre en noir\n</code></pre> <ul> <li>Sauvegarder une image contenue dans une variable <code>img</code>:</li> </ul> <pre><code>imageio.imsave(\"monimage.png\", img)\n</code></pre> <p><code>numpy</code></p> <p>Le module <code>numpy</code> est un module de calcul scientifique orient\u00e9 vers les matrices, qui sont des objets math\u00e9matiques bien pratiques... En gros ce sont des tableaux. On se servira uniquement de ce module pour cr\u00e9er des tableaux vides, au format que le module <code>imageio</code> exige pour pouvoir ensuite sauvegarder l'image (et donc la visualiser).</p> <p>On utilise la fonction <code>zeros</code> du module <code>numpy</code> qui prend en param\u00e8tres un triplet (hauteur, largeur, nombre de composantes) et le type des valeurs, ici donc des entiers non sign\u00e9s sur 8 bits.</p> <p>Par exemple pour une image de 100 pixels (de haut) sur 256 pixels (de large), avec 3 composantes (pas de canal alpha):</p> <pre><code>img_vide = numpy.zeros([100,256,3], dtype=np.uint8)\n</code></pre>"},{"location":"T02_TypesConstruits/T2.1_Listes/TP_image/#3-exercices","title":"3. Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Solution <ol> <li>T\u00e9l\u00e9charger l'image <code>ada.png</code> ci-dessus (simple clic-gauche), puis la charger dans un programme avec le module <code>imageio</code>.</li> <li>Trouver ses dimensions et son nombre de composantes.</li> <li>Faire un crime de l\u00e8se-majest\u00e9 et tracer une ligne horizontale rouge au niveau du front.</li> </ol> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>De combien de pixels (non verts) ce dessin de Pikachu est-il compos\u00e9?</p> <p> </p> <p>Exercice  3</p> \u00c9nonc\u00e9Solution <p>Cette image est-elle vraiment compos\u00e9e de pixels tous noirs?</p> <p></p> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>Incruster Vincent Vega (John Travolta) devant le lyc\u00e9e.</p> <p> </p> <p> </p> <p>Si vous avez le temps, essayez d'incruster Pikachu... Ou Vincent Vega sur une image de votre choix, de plus grande d\u00e9finition que celle-ci.</p> <ol> <li> <p>en fait cela d\u00e9pend de l'outil (module) utilis\u00e9 pour lire et \u00e9crire des images.\u00a0\u21a9</p> </li> </ol>"},{"location":"T02_TypesConstruits/T2.2_Tuples/T2.2_Tuples/","title":"T2.2 Tuples","text":"<p>Comme les listes, en Python les tuples sont des s\u00e9quences ordonn\u00e9es d'\u00e9l\u00e9ments (de n'importe quel type).</p> <p>\u25b6 On les d\u00e9clare avec des parenth\u00e8ses:</p> <pre><code>&gt;&gt;&gt; t1 = (1, 2, 4, 8, 16, 32, 64, 128)\n&gt;&gt;&gt; t2 = (\"Gon\", \"Kirua\", \"Leolio\")\n&gt;&gt;&gt; type(t1)\n&lt;class 'tuple'&gt;\n</code></pre> <p>\u25b6 Comme ils sont ordonn\u00e9s, on peut d\u00e9signer les \u00e9l\u00e9ments du tuple par leur indice, comme une liste. La fonction <code>len</code> est \u00e9galement valable.</p> <pre><code>&gt;&gt;&gt; t1[2]\n4\n&gt;&gt;&gt; t2[0]\n'Gon'\n&gt;&gt;&gt; t1[-1]\n128\n&gt;&gt;&gt; len(t2)\n3\n</code></pre> <p>\u25b6 Un tuple est un objet iterable, on peut donc le parcourir: <pre><code>&gt;&gt;&gt; for nom in t2:\n...     print(nom, \"est un hunter\")\n...     \n... \nGon est un hunter\nKirua est un hunter\nLeolio est un hunter\n</code></pre></p> <p>Diff\u00e9rence entre tuple et liste</p> <p>Un tuple est un objet non mutable, c'est-\u00e0-dire qu'on ne peut pas le modifier : ni r\u00e9affecter ses \u00e9l\u00e9ments, ni ajouter ou supprimer d'\u00e9l\u00e9ment.</p> <pre><code>&gt;&gt;&gt; t = (1, 2, 3)\n&gt;&gt;&gt; t[0] = 0\nTraceback (most recent call last):\nFile \"&lt;console&gt;\", line 1, in &lt;module&gt;\nTypeError: 'tuple' object does not support item assignment\n&gt;&gt;&gt; t.append(4)\nTraceback (most recent call last):\nFile \"&lt;console&gt;\", line 1, in &lt;module&gt;\nAttributeError: 'tuple' object has no attribute 'append'\n&gt;&gt;&gt; t.remove(1)\nTraceback (most recent call last):\nFile \"&lt;console&gt;\", line 1, in &lt;module&gt;\nAttributeError: 'tuple' object has no attribute 'remove'    \n</code></pre> <p> </p> <p>Utilisation d'un tuple</p> <p>On se sert d'un tuple pour repr\u00e9senter une s\u00e9quence de donn\u00e9es qui n'a pas vocation \u00e0 \u00eatre modifi\u00e9e au cours du programme, comme par exemple des constantes.</p> <p>On verra plus tard dans l'ann\u00e9e une vertu du caract\u00e8re non mutable de ce type d'objet.</p> <p>Fonction renvoyant plusieurs valeurs</p> <p>Une fonction peut renvoyer plusieurs valeurs, s\u00e9par\u00e9es par des virgules.</p> <p>Le type de la valeur renvoy\u00e9e sera alors un tuple.</p> Exemple de fonction renvoyant le maximum d'une liste et son indice<pre><code>def maximum(tab:list) -&gt; tuple:\n    maxi = 0\n    for i in range(len(tab)): #parcours par indice obligatoire puisqu'on veut r\u00e9cup\u00e9rer l'indice du maximum\n        if tab[i] &gt; maxi:\n            maxi = tab[i]\n            indice_maxi = i\n    return maxi, indice_maxi  #renvoi de plusieurs valeurs, sans forc\u00e9ment de parenth\u00e8ses\n</code></pre> Utilisation dans le shell<pre><code>&gt;&gt;&gt; liste_exemple = [15, 8, 12, 18, 25, 0, 10]\n&gt;&gt;&gt; resultat = maximum(liste_exemple)\n&gt;&gt;&gt; resultat\n(25, 4)\n&gt;&gt;&gt; type(resultat)\n&lt;class 'tuple'&gt;\n</code></pre>"},{"location":"T02_TypesConstruits/T2.3_Dictionnaires/T2.3_Dictionnaires/","title":"T2.3 Dictionnaires","text":"<p>Jusqu'\u00e0 pr\u00e9sent, nous avons rencontr\u00e9 deux types de conteneurs (ou ensemble d'\u00e9l\u00e9ments) : les listes et les tuples. Ces deux types ont en commun le rep\u00e9rage de leurs \u00e9l\u00e9ments par un indice, qui est un nombre entier. Ces deux types sont ordonn\u00e9s, on les appelle des s\u00e9quences. L'indice est la cl\u00e9 qui permet d'acc\u00e9der \u00e0 un \u00e9l\u00e9ment de l'ensemble.</p> <p>Prenons comme exemple un autre ensemble d'\u00e9l\u00e9ments: les num\u00e9ros de t\u00e9l\u00e9phone sauvegard\u00e9s dans l'application \u00ab Contacts \u00bb de votre smartphone. Ces num\u00e9ros ne sont pas ordonn\u00e9s, et ne sont pas rep\u00e9rables par un indice, mais (en g\u00e9n\u00e9ral) par un nom.</p> <p>Grosso modo, le contenu de votre application \u00ab Contacts \u00bb est un ensemble d'associations <code>nom: num\u00e9ro</code>. En Informatique, on parle de tableau associatif ou de p-uplet nomm\u00e9: un ensemble de (p) valeurs appel\u00e9es par un descripteur autre qu'un indice.</p> <p>En Python, on repr\u00e9sentera ces p-uplets nomm\u00e9s par des dictionnaires.</p>"},{"location":"T02_TypesConstruits/T2.3_Dictionnaires/T2.3_Dictionnaires/#231-definition-dun-dictionnaire-cles-et-valeurs","title":"2.3.1 D\u00e9finition d'un dictionnaire, cl\u00e9s et valeurs","text":"<p>Le type <code>dict</code></p> <pre><code>&gt;&gt;&gt; contacts = {\"pap\": '0155551010', \"b\u00e9n\u00e9dicte\": '0516526600', \"christophe\": '0545974500'}\n</code></pre> <ul> <li> <p>Un dictionnaire (type <code>dict</code>) est une donn\u00e9e composite qui n'est pas ordonn\u00e9e (\u00e0 la diff\u00e9rence des listes !). Il fonctionne par un syst\u00e8me de <code>cl\u00e9: valeur</code>.</p> </li> <li> <p>Les cl\u00e9s, comme les valeurs, peuvent \u00eatre de types diff\u00e9rents.</p> </li> <li> <p>Un dictionnaire est d\u00e9limit\u00e9 par des accolades, les associations <code>cl\u00e9: valeur</code> s\u00e9par\u00e9es par des espaces.</p> </li> <li> <p>On acc\u00e8de \u00e0 une valeur par sa cl\u00e9 : </p> </li> </ul> <pre><code>&gt;&gt;&gt; contacts[\"pap\"]\n'0155551010'\n</code></pre> <p>M\u00e9thodes <code>keys</code> et <code>values</code></p> <p>On peut lister les cl\u00e9s d'un dictionnaires: <pre><code>&gt;&gt;&gt; contacts.keys()\ndict_keys(['pap', 'b\u00e9n\u00e9dicte', 'christophe'])\n</code></pre> et ses valeurs: <pre><code>&gt;&gt;&gt; contacts.values()\ndict_values(['0155551010', '0516526600', '0545974500'])\n</code></pre></p> <p>Ajout/modification/suppression d'\u00e9l\u00e9ments</p> <p>Pour modifier une valeur associ\u00e9e \u00e0 une cl\u00e9, on r\u00e9affecte la nouvelle valeur :</p> <p><pre><code>&gt;&gt;&gt; contacts[\"pap\"] = '0605040302'\n&gt;&gt;&gt; contacts\n{'pap': '0605040302', 'b\u00e9n\u00e9dicte': '0516526600', 'christophe': '0545974500'}\n</code></pre> Si la cl\u00e9 n'existe pas, cela ajoute une paire <code>cl\u00e9: valeur</code> au dictionnaire: <pre><code>&gt;&gt;&gt; contacts[\"xavier\"] = '0545387000'\n&gt;&gt;&gt; contacts\n{'pap': '0605040302', 'b\u00e9n\u00e9dicte': '0516526600', 'christophe': '0545974500', 'xavier': '0545387000'}\n</code></pre></p> <p>La suppression d'une cl\u00e9 (et donc de sa valeur) se fait par le mot-cl\u00e9 <code>del</code>: <pre><code>&gt;&gt;&gt; del contacts[\"pap\"]\n&gt;&gt;&gt; contacts\n{'b\u00e9n\u00e9dicte': '0516526600', 'christophe': '0545974500', 'xavier': '0545387000'}\n</code></pre></p>"},{"location":"T02_TypesConstruits/T2.3_Dictionnaires/T2.3_Dictionnaires/#232-methodes-sur-les-dictionnaires","title":"2.3.2 M\u00e9thodes sur les dictionnaires","text":"<p>Parcours d'un dictionnaire</p> <p>On utilise comme pour les listes une boucle <code>for</code> avec l'op\u00e9rateur <code>in</code>. Cet op\u00e9rateur <code>in</code> peut \u00e9galement tester l'appartenance d'une cl\u00e9 \u00e0 un dictionnaire, hors d'un <code>for</code>.</p> M\u00e9thode basiqueM\u00e9thode avanc\u00e9e avec <code>items</code> <p>On parcourt par d\u00e9faut sur les cl\u00e9s:</p> <pre><code>&gt;&gt;&gt; for nom in contacts:\n...    print(nom)\nb\u00e9n\u00e9dicte\nchristophe\nxavier\n&gt;&gt;&gt; for nom in contacts:\n...    print(f\"le num\u00e9ro de {nom} est {contacts[nom]}\")\n...\nle num\u00e9ro de b\u00e9n\u00e9dicte est 0516526600\nle num\u00e9ro de christophe est 0545974500\nle num\u00e9ro de xavier est 0545387000\n</code></pre> <p>Il serait \u00e9quivalent de faire <code>for nom in contacts.keys()</code>.</p> <p>On peut \u00e9galement parcourir le dictionnaire sur les valeurs, mais sans possibilit\u00e9 alors de r\u00e9cup\u00e9rer la cl\u00e9 \u00e0 partir de la valeur (puisque plusieurs cl\u00e9s peuvent avoir la m\u00eame valeur).</p> <p>On utilisera pour cela: <pre><code>&gt;&gt;&gt; for v in contacts.values():\n...    print(v)\n...\n0516526600\n0545974500\n0545387000\n</code></pre></p> <p>Il peut \u00eatre utile de parcourir \u00e0 la fois sur les cl\u00e9s et sur les valeurs, c'est \u00e0 dire sur l'\u00e9l\u00e9ment complet <code>cl\u00e9: valeur</code> du dictionnaire, notamment si on souhaite r\u00e9cup\u00e9rer la cl\u00e9 associ\u00e9e \u00e0 une valeur donn\u00e9e.</p> <pre><code>&gt;&gt;&gt; for k, v in contacts.items():\n...     print(f\"{v} est associ\u00e9 \u00e0 {k}\")\n... \n0516526600 est associ\u00e9 \u00e0 b\u00e9n\u00e9dicte\n0545974500 est associ\u00e9 \u00e0 christophe\n0545387000 est associ\u00e9 \u00e0 xavier\n</code></pre> <p>Cr\u00e9ation d'un dictionnaire vide et construction de dictionnaire</p> <p>Comme les listes, il est tr\u00e8s fr\u00e9quent qu'on ait besoin de construire le dictionnaire par ajouts successifs en partant d'un dictionnaire vide.</p> <p>On peut cr\u00e9er un dictionnaire vide de deux fa\u00e7ons: <code>{}</code> ou <code>dict()</code>: <pre><code>&gt;&gt;&gt; dico = {}\n&gt;&gt;&gt; dico = dict()\n&gt;&gt;&gt; chiffres = ['z\u00e9ro', 'un', 'deux', 'trois', 'quatre', 'cinq', 'six', 'sept', 'huit', 'neuf']\n&gt;&gt;&gt; for c in chiffres:\n...     dico[c]\u00a0= len(c)\n...\n&gt;&gt;&gt; dico\n{'z\u00e9ro': 4, 'un': 2, 'deux': 4, 'trois': 5, 'quatre': 6, 'cinq': 4, 'six': 3, 'sept': 4, 'huit': 4, 'neuf': 4}\n</code></pre></p> <p>On peut bien \u00e9videmment cr\u00e9er un dictionnaire en compr\u00e9hension (hors-programme). On peut r\u00e9sumer le code pr\u00e9c\u00e9dent en: <pre><code>dico = {c: len(c) for c in chiffres}\n</code></pre></p> <p>Gaspard's corner</p> <p>Pour r\u00e9cup\u00e9rer les cl\u00e9s d'un dictionnaire en fonction de leur valeur, il n'y a pas d'autre moyen que de parcourir le dictionnaire et de s\u00e9lectionner les cl\u00e9s dont la valeur est celle cherch\u00e9e.</p> Version par ajouts successifsVersion \u00aben compr\u00e9hension\u00bb <p>Dans le dictionnaire <code>dico</code> de l'exemple pr\u00e9c\u00e9dent, si on cherche les cl\u00e9s dont la valeur est \u00e9gale \u00e0 4 par exemple:</p> <p><pre><code>liste = []\nfor cle in dico:\n    if dico[cle] == 4:\n        liste.append(cle)\n</code></pre> ce qui donne:</p> <pre><code>&gt;&gt;&gt; liste\n['z\u00e9ro', 'deux', 'cinq', 'sept', 'huit', 'neuf']\n</code></pre> <p>Mieux, on \u00e9crit une fonction qui prend en param\u00e8tre un dictionnaire et une valeur (enti\u00e8re par exemple) \u00e0 chercher, ainsi que quelques tests:</p> <pre><code>def get_keys(d:dict, v:int) -&gt; list:\n    liste = []\n    for cle in d:\n        if d[cle] == v:\n            liste.append(cle)\n    return liste\n\nassert get_keys(dico, 4) == ['z\u00e9ro', 'deux', 'cinq', 'sept', 'huit', 'neuf']\nassert get_keys(dico, 2) == ['un']\nassert get_keys(dico, 1) == []\nassert get_keys({}, 2) == []\n</code></pre> <p>Puisqu'on a cr\u00e9\u00e9 une liste par ajout successifs dans une liste vide en parcourant un iterable (le dictionnaire <code>dico</code>), on peut \u00e9galement la cr\u00e9er en compr\u00e9hension...</p> <pre><code>liste = [cle for cle in dico if dico[cle] == 4]\n</code></pre> <p>Et la fonction deviet tout simplement:</p> <pre><code>def get_keys(d:dict, v:int) -&gt; list:\n    return [cle for cle in d if d[cle] == v]\n</code></pre>"},{"location":"T02_TypesConstruits/T2.3_Dictionnaires/T2.3_Dictionnaires/#233-bilan","title":"2.3.3 Bilan","text":"<p>En r\u00e9sum\u00e9</p> <ul> <li><code>dico = dict()</code> cr\u00e9e un dictionnaire vide appel\u00e9 <code>dico</code>,</li> <li><code>dico[cle] = contenu</code> met la valeur <code>contenu</code> pour la cl\u00e9 <code>cle</code> dans le dictionnaire <code>dico</code>,</li> <li><code>dico[cle]</code> renvoie la valeur associ\u00e9e \u00e0 la cl\u00e9 <code>cle</code> dans le dictionnaire <code>dico</code>,</li> <li><code>cle in dico</code> renvoie un bool\u00e9en indiquant si la cl\u00e9 <code>cle</code> est pr\u00e9sente dans le dictionnaire <code>dico</code>.</li> <li><code>len(dico)</code> renvoie le nombre de cl\u00e9s d'un dictionnaire.</li> <li><code>for cle in dico:</code> permet d'it\u00e9rer sur les cl\u00e9s d'un dictionnaire.</li> <li><code>for valeur in dico.values():</code> permet d'it\u00e9rer sur les valeurs d'un dictionnaire.</li> <li><code>for cle, valeur in dico.items():</code> permet d'it\u00e9rer sur les cl\u00e9s et les valeurs d'un dictionnaire.</li> </ul>"},{"location":"T02_TypesConstruits/T2.3_Dictionnaires/T2.3_Dictionnaires/#234-exercices","title":"2.3.4 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re le contenu de mon dressing, repr\u00e9sent\u00e9 par un dictionnaire: <pre><code>dressing = {\"pantalons\": 3, \"pulls\": 4, \"tee-shirts\": 8}\n</code></pre></p> <ol> <li>J'ai oubli\u00e9 mes 5 chemises... Ajoutez-les au dictionnaire <code>dressing</code>.</li> <li>\u00c9crire une fonction (ou plut\u00f4t une proc\u00e9dure, pas de return) <code>ajout(habit)</code> qui prend en param\u00e8tre un type d'habit et qui augmente son nombre de 1 dans le dictionnaire.</li> <li>Am\u00e9liorer la fonction pour qu'elle cr\u00e9e une nouvelle entr\u00e9e si le type d'habit n'existe pas comme cl\u00e9.</li> </ol> <pre><code>dressing = {'pantalons': 3, 'pulls': 4, 'tee-shirts': 8}\n\n# 1\ndressing['chemises'] = 5\n\n# 2\ndef ajout(habit):\n    dressing[habit] += 1\n\n# 3\ndef ajout(habit):\n    if habit in dressing:\n        dressing[habit] += 1\n    else:\n        dressing[habit] = 1\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re la liste suivante : <pre><code>lst = ['5717', '1133', '5545', '4031', '6398', '2734', '3070', '1346', '7849', '7288', '7587', '6217', '8240', '5733', '6466', '7972', '7341', '6616', '5061', '2441', '2571', '4496', '4831', '5395', '8584', '3033', '6266', '2452', '6909', '3021', '5404', '3799', '5053', '8096', '2488', '8519', '6896', '7300', '5914', '7464', '5068', '1386', '9898', '8313', '1072', '1441', '7333', '5691', '6987', '5255']\n</code></pre></p> <p>Quel est le chiffre qui revient le plus fr\u00e9quemment dans cette liste ?</p> <pre><code>lst = ['5717', '1133', '5545', '4031', '6398', '2734', '3070', '1346', '7849', '7288', '7587', '6217', '8240', '5733', '6466', '7972', '7341', '6616', '5061', '2441', '2571', '4496', '4831', '5395', '8584', '3033', '6266', '2452', '6909', '3021', '5404', '3799', '5053', '8096', '2488', '8519', '6896', '7300', '5914', '7464', '5068', '1386', '9898', '8313', '1072', '1441', '7333', '5691', '6987', '5255']\n\n# Construction du dictionnaire par parcours de la liste, puis parcours des chiffres:\ndico_chiffres = {}\nfor nombre in lst:\n    for chiffre in nombre:\n        if chiffre in dico_chiffres:\n            dico_chiffres[chiffre] += 1\n        else:\n            dico_chiffres[chiffre] = 1\n\n# Recherche par parcours sur les cl\u00e9s et valeurs du dictionnaire\nmax_chiffre = 0\nfor c, n in dico_chiffres.items():\n    if n &gt; max_chiffre:\n        max_chiffre = n\n        chiffre = c\n\nprint(f'Le chiffre qui revient le plus fr\u00e9quemment est {chiffre}, avec {max_chiffre} occurences')\n</code></pre> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>On mod\u00e9lise des informations (nom, taille et poids) sur des Pok\u00e9mons de la fa\u00e7on suivante:</p> <p><pre><code>exemple_pokemons = {\n    'Bulbizarre': (70, 7),\n    'Herbizarre': (100, 13),\n    'Abo': (200, 7),\n    'Jungko': (170, 52)\n    }\n</code></pre> Par exemple, <code>Bulbizarre</code> est un pok\u00e9mon qui mesure 70 cm et p\u00e8se 7 kg.</p> <ol> <li>Ajouer le pok\u00e9mon <code>Goupix</code> qui mesure 60 cm et p\u00e8se 10 kg.</li> <li>Compl\u00e9ter la fonction <code>plus_grand</code> qui prend en param\u00e8tre un dictionnaire et qui renvoie un tuple contenant le nom du pokemon le plus grand et sa taille.</li> </ol> <pre><code>def plus_grand(pokemons: dict) -&gt; tuple:\n    nom_plus_grand = ''\n    taille_max = 0\n    for  in pokemons. :\n        if     &gt; taille_max:\n            nom_plus_grand =\n            taille_max = \n    return \n</code></pre> <pre><code>exemple_pokemons = {\n'Bulbizarre': (70, 7),\n'Herbizarre': (100, 13),\n'Abo': (200, 7),\n'Jungko': (170, 52)}\n\n# 1\nexemple_pokemons['Goupix'] = (60, 10)\n\n# 2\ndef plus_grand(pokemons: dict) -&gt; tuple:\n    nom_plus_grand = ''\n    taille_max = 0\n    for poke, infos in pokemons.items() :\n        if infos[0] &gt; taille_max:\n            nom_plus_grand = poke\n            taille_max = infos[0]\n    return (nom_plus_grand, taille_max)\n</code></pre> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>Reprendre l'exercice \u00abLe lion de N\u00e9m\u00e9e\u00bb (T2.1 exercice 7) et construire un dictionnaire dont les cl\u00e9s sont les noms des divinit\u00e9s et les valeurs leur \u00abvaleur\u00bb selon l'\u00e9nonc\u00e9.</p> <p>Il suffit de transformer la derni\u00e8re ligne du programme o\u00f9 l'on cr\u00e9ait une liste en compr\u00e9hension par un dictionnaire cr\u00e9\u00e9 \u00e9galement en compr\u00e9hension: <pre><code>valeurs_divinites = {d: valeur_mot(d) for d in divinites}\n</code></pre></p> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>Voici un dictionnaire <code>dates</code> dont les cl\u00e9s sont des pr\u00e9noms au format <code>str</code> et les valeurs des dates de naissance au format <code>tuple</code>.</p> <p><pre><code>dates = {\n    \"Alan\": (23, 6, 1912),\n    \"Grace\": (9, 12, 1906),\n    \"Linus\": (28, 12, 1969),\n    \"Guido\": (31, 1, 1956),\n    \"Ada\": (10, 12, 1815),\n    \"Tim\": (8, 6, 1955),\n    \"Dennis\": (9, 9, 1941),\n    \"Hedy\": (9, 11, 1914),\n    \"Steve\": (24, 2, 1955)\n    }\n</code></pre> Par exemple, Linus est n\u00e9 le 28 d\u00e9cembre 1969.</p> <ol> <li> <p>Ajouter les deux entr\u00e9es suivantes: Margaret, n\u00e9e le 17 ao\u00fbt 1936 et John, n\u00e9 le 28 d\u00e9cembre 1903.</p> </li> <li> <p>\u00c9crire une fonction <code>calendrier</code> qui prend en param\u00e8tre un dictionnaire constitu\u00e9 d'entr\u00e9es <code>nom: (jour, mois, ann\u00e9e)</code> comme <code>dates</code> et qui renvoie un dictionnaire dont les cl\u00e9s sont les mois de l'ann\u00e9e et les valeurs les listes des noms n\u00e9s ce mois-l\u00e0. Par exemple, <code>calendrier(dates)</code> doit renvoyer un dictionnaire contenant l'entr\u00e9e <code>\"juin\": [\"Alan\", \"Tim\"]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>plus_jeune</code> qui renvoie le nom de la personne la plus jeune du dictionnaire.</p> </li> </ol> <pre><code>dates = {\n    'Alan': (23, 6, 1912),\n    'Grace': (9, 12, 1906),\n    'Linus': (28, 12, 1969),\n    'Guido': (31, 1, 1956),\n    'Ada': (10, 12, 1815),\n    'Tim': (8, 6, 1955),\n    'Dennis': (9, 9, 1941),\n    'Hedy': (9, 11, 1914),\n    'Steve': (24, 2, 1955)\n    }\n\n# 1\ndates['Margaret'] = (17, 8, 1936)\ndates['John'] = (28, 12, 1903)\n\n# 2\ndef calendrier(dico_dates):\n    mois = ['janvier', 'f\u00e9vrier', 'mars', 'avril', 'mai', 'juin', 'juillet', 'ao\u00fbt', 'septembre', 'octobre', 'novembre', 'd\u00e9cembre']\n    dico = {m: [] for m in mois}\n    for nom, (j, m, a) in dico_dates.items():\n        dico[mois[m-1]].append(nom)\n    return dico\n\n# 3\ndef plus_jeune(dico_dates):\n    nom_jeune = ''\n    date_naissance = (1, 1, 0)\n    for nom, (j, m, a) in dico_dates.items():\n        if a &gt; date_naissance[2] or (a == date_naissance[2] and m &gt; date_naissance[1]) or (a == date_naissance[2] and m == date_naissance[1] and j &gt; date_naissance[0]):\n            nom_jeune = nom\n            date_naissance = (j, m, a)\n    return nom_jeune, date_naissance\n</code></pre> <p>Exercice  6</p> \u00c9nonc\u00e9Correction <p>Voici un dictionnaire Python:</p> <pre><code>dico = {'L': 'S', 'C': 'D', 'M': 'V', 'R': 'M', 'CA': 'T', 'GR': 'EP', 'HE': 'AD', 'CH': 'MOD'}\n</code></pre> <p>\u00c0 l'aide d'un parcours du dictionnaire, cr\u00e9er le dictionnaire \u00abinvers\u00e9\u00bb, c'est-\u00e0-dire en \u00e9changeant cl\u00e9s et valeurs.</p> <pre><code>dico_inverse = {}\nfor cle, valeur in dico.items():\n    dico_inverse[valeur] = cle\n</code></pre> <p>Ou en compr\u00e9hension:</p> <pre><code>dico_inverse = {valeur:cle for cle, valeur in dico.items()}\n</code></pre> <p>Exercice  7</p> \u00c9nonc\u00e9IndicationsCorrection <p>Ci-dessous, un c\u00e9l\u00e8bre texte a \u00e9t\u00e9 \u00e9crit en code morse. D\u00e9codez le!</p> <pre><code>texte_morse = \"\"\"\n-- .- .. ... ...- --- ..- ... ... .- ...- . --.. -- --- .. .--- . -. .\n-.-. .-. --- .. ... .--. .- ... --.- ..- .. .-.. -.-- .- .. - -.. . -... ---\n-. -. . --- ..- -.. . -- .- ..- ...- .- .. ... . ... .. - ..- .-\n- .. --- -. -- --- .. ... .. .--- . -.. . ...- .- .. ... .-. . ...\n..- -- . .-. -- .- ...- .. . .- ..- .--- --- ..- .-. -.. .... ..- .. .-\n...- . -.-. ...- --- ..- ... .--- . -.. .. .-. .- .. ... --.- ..- . -.-. .\n... - -.. .- -... --- .-. -.. -.. . ... .-. . -. -.-. --- -. - .-. .\n... -.. . ... --. . -. ... --.- ..- .. -- --- -. - - . -. -.. ..-\n.-.. .- -- .- .. -. .--. . ..- - . - .-. . .- ..- -. -- --- --\n. -. - --- ..- .--- . -. . .--. --- ..- ...- .- .. ... .--. .- ... ---\n..- .--- . - .- .. ... ... . ..- .-.. -.-. .... . --.. -- --- .. . -\n-.-. . ... - .- ... ... . --.. -.-. ..- .-. .. . ..- -..- -.. . ... .\n-.. .. .-. . --.- ..- . .-.. . ... .... .- ... .- .-. -.. ... .-.. . ...\n.-. . -. -.-. --- -. - .-. . ... ..-. --- .-. --. . -. - ..- -. .\n-.. . ... - .. -. . . .--. .- .-. -.-. . --.- ..- . --.- ..- .- -.\n-.. --- -. .- .-.. . --. --- ..- - -.. . .-.. .- -.-. .... --- ... . --.-\n..- .- -. -.. --- -. .- .-.. . --. --- ..- - -.. . .-.. .- -.-. .... ---\n... . -... .. . -. ..-. .- .. - . .-.. . -... . .- ..- --. . ...\n- . .--. .- .-. ..-. --- .. ... --- -. -. . - .-. --- ..- ...- . .--.\n.- ... .-.. .. -. - . .-. .-.. --- -.-. ..- - . ..- .-. . -. ..-. .-\n-.-. . .--- . -.. .. .-. .- .. ... .-.. . -- .. .-. --- .. .-. --.- ..-\n.. ...- --- ..- ... .- .. -.. . .- .- ...- .- -. -.-. . .-. .- .-.. ---\n.-. ... -.-. . -. . ... - .--. .- ... -- --- -. -.-. .- ... -.-. --- --\n-- . .--- . .-.. . -.. .. ... .- .. ... .-.. .- .--. ..- .. ... --.- ..-\n. -- --- .. .- ..- -.-. --- -. - .-. .- .. .-. . .--- .- .. .--. ..-\n. - .--- . -.. .. ... -- . .-. -.-. .. .- .-.. .- ...- .. . .--- .\n.-.. ..- .. -.. .. ... -- . .-. -.-. .. .--- . -.-. .... .- -. - . .-..\n.- ...- .. . .--- . -.. .- -. ... . .-.. .- ...- .. . .--- . -. .\n... ..- .. ... --.- ..- .- -- --- ..- .-. . - ..-. .. -. .- .-.. . --\n. -. - --.- ..- .- -. -.. -... . .- ..- -.-. --- ..- .--. -.. . --. .\n-. ... .- ..- .--- --- ..- .-. -.. .... ..- .. -- . -.. .. ... . -. -\n-- .- .. ... -.-. --- -- -- . -. - ..-. .- .. ... - ..- .--. --- ..-\n.-. .- ...- --- .. .-. -.-. . - - . .... ..- -- .- -. .. - . .\n.... -... .. . -. .--- . .-.. . ..- .-. .-. . .--. --- -. -.. ... - .-.\n. ... ... .. -- .--. .-.. . -- . -. - .--- . .-.. . ..- .-. -.. ..\n... --.- ..- . -.-. . ... - -.-. . --. --- ..- - -.. . .-.. .- -- ---\n..- .-. -.-. . --. --- ..- - -.. --- -. -.-. --.- ..- .. -- .- .--. --- ..-\n... ... . .- ..- .--- --- ..- .-. -.. .... ..- .. .- . -. - .-. . .--.\n.-. . -. -.. .-. . ..- -. . -.-. --- -. ... - .-. ..- -.-. - .. ---\n-. -- . -.-. .- -. .. --.- ..- . -- .- .. ... -.. . -- .- .. -.\n--.- ..- .. ... .- .. - .--. . ..- - . - .-. . ... .. -- .--. .-..\n. -- . -. - .- -- . -- . - - .-. . .- ..- ... . .-. ...-\n.. -.-. . -.. . .-.. .- -.-. --- -- -- ..- -. .- ..- - . .- ..-. .-\n.. .-. . .-.. . -.. --- -. .-.. . -.. --- -. -.. . ... --- ..\n\"\"\"\n</code></pre> <p>Pour coder un texte en morse, on a besoin d'un dictionnaire de correspondance entre les lettres (majuscules) et leurs codes en morse.</p> <p>Par exemple:</p> <pre><code>morse_dict = { 'A':'.-', 'B':'-...', ...}\n</code></pre> <p>Ensuite il faut s\u00e9parer la cha\u00eene de caract\u00e8res fournie sur les espaces pour obtenir la liste des codes: on utilise la m\u00e9thode <code>split</code> (voir ici).</p> <p>Et enfin, en parcourant cette liste, on construit une nouvelle cha\u00eene de caract\u00e8res contenant le message d\u00e9cod\u00e9 (variable accumulatrice).</p> <pre><code>morse_dict = { 'A':'.-', 'B':'-...', ...}\ndico_morse_inverse = {valeur:cle for cle, valeur in morse_dict.items()}\n\ntraduction = \nfor code in texte_morse.split():\n    traduction += dico_morse_inverse[code]\n</code></pre> <p>Exercice  8</p> \u00c9nonc\u00e9Correction <p>L\u2019ARN contient le codage des prot\u00e9ines, compos\u00e9es de chaines d\u2019acides amin\u00e9s.</p> <p>Le dictionnaire ci-dessous donne les correspondances entre les codons, des s\u00e9quences d\u2019ARN constitu\u00e9s de trois nucl\u00e9otides, et les acides amin\u00e9s.</p> <p>La s\u00e9quence AUG, par exemple, correspond \u00e0 la m\u00e9thionine, not\u00e9e M.</p> <pre><code>dico_gen = {\n    'UUU': 'F', 'UUC': 'F', 'UUG': 'L', 'UUA': 'L', 'UCU': 'S',\n    'UCC': 'S', 'UCG': 'S', 'UCA': 'S', 'UAU': 'Y', 'UAC': 'Y',\n    'UAG': 'X', 'UAA': 'X', 'UGU': 'C', 'UGC': 'C', 'UGG': 'W',\n    'UGA': 'X', 'CUU': 'L', 'CUC': 'L', 'CUG': 'L', 'CUA': 'L',\n    'CCU': 'P', 'CCC': 'P', 'CCG': 'P', 'CCA': 'P', 'CGU': 'R',\n    'CGC': 'R', 'CGG': 'R', 'CGA': 'R', 'CAU': 'H', 'CAC': 'H',\n    'CAG': 'Q', 'CAA': 'Q', 'ACU': 'T', 'ACC': 'T', 'ACG': 'T',\n    'ACA': 'T', 'AUG': 'M', 'AUU': 'I', 'AUC': 'I', 'AUA': 'I',\n    'AAU': 'N', 'AAC': 'N', 'AAG': 'K', 'AAA': 'K', 'AGU': 'S',\n    'AGC': 'S', 'AGG': 'R', 'AGA': 'R', 'GUU': 'V', 'GUC': 'V',\n    'GUG': 'V', 'GUA': 'V', 'GCU': 'A', 'GCC': 'A', 'GCG': 'A',\n    'GCA': 'A', 'GGU': 'G', 'GGC': 'G', 'GGG': 'G', 'GGA': 'G',\n    'GAU': 'D', 'GAC': 'D', 'GAG': 'E', 'GAA': 'E'\n    }\n</code></pre> <p>\u00c9crire une fonction <code>traduction</code> qui traduit une chaine d\u2019ARN en prot\u00e9ine. On suppose que la longueur de la chaine d\u2019ARN est un multiple de trois. Ainsi, <code>traduction('UUCAGUGGG')</code> renverra <code>'FSG'</code>.</p> <pre><code>def traduction(arn:str) -&gt; str:\n    '''\n    traduit la cha\u00eene arn en suite d'acides amin\u00e9s.\n    '''\n    proteine = ''\n    for i in range(0, len(arn), 3):\n        codon = arn[i] + arn[i+1] + arn[i+2] # ou arn[i:i+3]\n        acide = dico_gen[codon]\n        proteine += acide\n    return proteine\n\nassert traduction('UUCAGUGGG') == 'FSG'\n</code></pre> <p>Exercice  9 (\u00c9preuve pratique)</p> \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>min_et_max</code> qui prend en param\u00e8tre un tableau de nombres <code>tab</code> non vide, et qui renvoie la plus petite et la plus grande valeur du tableau sous la forme d\u2019un dictionnaire \u00e0 deux cl\u00e9s <code>min</code> et <code>max</code>.</p> <p>Les tableaux seront repr\u00e9sent\u00e9s sous forme de liste Python.</p> <p>L\u2019utilisation des fonctions natives <code>min</code>, <code>max</code> et <code>sorted</code>, ainsi que la m\u00e9thode <code>sort</code> n\u2019est pas        autoris\u00e9e.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; min_et_max([0, 1, 4, 2, -2, 9, 3, 1, 7, 1])\n{'min': -2, 'max': 9}\n&gt;&gt;&gt; min_et_max([0, 1, 2, 3])\n{'min': 0, 'max': 3}\n&gt;&gt;&gt; min_et_max([3])\n{'min': 3, 'max': 3}\n&gt;&gt;&gt; min_et_max([1, 3, 2, 1, 3])\n{'min': 1, 'max': 3}\n&gt;&gt;&gt; min_et_max([-1, -1, -1, -1, -1])\n{'min': -1, 'max': -1}\n</code></pre> <p>Comme dans l'\u00e9nonc\u00e9 on annonce que le param\u00e8tre <code>tab</code> est non vide, on peut prendre l'\u00e9l\u00e9ment d'indice 0 comme valeur par d\u00e9faut pour le minimum et le maximum.</p> <pre><code>def min_et_max(tab:list) -&gt; dict:\n    '''\n    Renvoie les valeurs minimales et maximales du tableau sous la \n    forme d'un dictionnaire \u00e0 deux cl\u00e9s 'min' et 'max'. \n    '''\n    assert tab != [], 'Attention, tableau vide!'\n    dico = {'min':tab[0], 'max':tab[0]}\n    for valeur in tab:\n        if valeur &gt; dico['max']:\n            dico['max'] = valeur\n        if valeur &lt; dico['min']:\n            dico['min'] = valeur\n    return dico\n</code></pre> <p>Exercice  10 (BAC) : Jour suivant au format <code>(jour, j, m, a)</code></p> \u00c9nonc\u00e9Correction <p>On dispose des listes <code>jours</code>, <code>mois</code> et <code>duree_mois</code> suivants :</p> <pre><code>jours = [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"]\n\nmois = [\n    \"janvier\", \"f\u00e9vrier\", \"mars\", \"avril\",\n    \"mai\", \"juin\", \"juillet\", \"aout\",\n    \"septembre\", \"octobre\", \"novembre\", \"d\u00e9cembre\",\n]\n\nduree_mois = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n</code></pre> <p>Pour un indice <code>i</code> de 0 \u00e0 11, <code>mois[i]</code> et <code>duree_mois[i]</code> indiquent le nom et la dur\u00e9e du mois d'indice <code>i</code>. On consid\u00e8rera donc dans cet exercice que tous les mois de f\u00e9vrier durent 28 jours.</p> <ol> <li> <p>a. \u00c0 partir de la liste <code>jours</code>, comment obtenir l'\u00e9l\u00e9ment <code>\"lundi\"</code> ?</p> <p>b. Que renvoie l'instruction <code>jours[18 % 7]</code> ?</p> </li> <li> <p>On rappelle que <code>jours.index(element)</code> renvoie l'indice de <code>element</code> dans la liste <code>jours</code>.</p> <p>Par exemple, <code>jours.index(\"mercredi\")</code> renvoie <code>3</code>.</p> <p>Le nom du jour actuel est stock\u00e9 dans une variable <code>nom_jour</code> (par exemple : <code>nom_jour = \"mardi\"</code>).</p> <p>Recopier et compl\u00e9ter l'instruction suivante permettant d'obtenir l'indice du jour de la semaine <code>n</code> jours plus tard :</p> <p><code>indice_jour = (jours.index( ... ) + ...) % ...</code></p> </li> <li> <p>a. \u00c0 partir de la liste <code>mois</code>, comment obtenir le nombre de jours du mois de mars ?</p> <p>b. Les mois sont num\u00e9rot\u00e9s de 1 pour janvier \u00e0 12 pour d\u00e9cembre. Sachant que le num\u00e9ro du mois actuel est stock\u00e9 dans une variable <code>numero_mois</code>, \u00e9crire le code permettant d'obtenir le nom du mois qu'il sera <code>x</code> mois plus tard \u00e0 partir de la liste <code>mois</code>.</p> <p>Par exemple :</p> <ul> <li>Avec <code>numero_mois = 4</code> et <code>x = 5</code>, on doit obtenir <code>\"septembre\"</code>.</li> <li>Avec <code>numero_mois = 8</code> et <code>x = 4</code>, on doit obtenir <code>\"d\u00e9cembre\"</code>.</li> <li>Avec <code>numero_mois = 10</code> et <code>x = 3</code>, on doit obtenir <code>\"janvier\"</code>.</li> </ul> <p> Il est important d'enlever 1 au num\u00e9ro, pour travailler avec l'indice qui commence \u00e0 z\u00e9ro.</p> </li> <li> <p>On d\u00e9finit une date comme un tuple :</p> <p><code>(nom_jour, numero_jour, numero_mois, annee)</code></p> <p>a. Par exemple, pour stocker la date du samedi 21 octobre 1995, on ex\u00e9cute <code>date = (\"samedi\", 21, 10, 1995)</code>. On peut alors extraire les champs de valeurs avec <code>nom_jour, numero_jour, numero_mois, annee = date</code>. Que renvoie alors l'instruction <code>mois[numero_mois - 1]</code> ?</p> <p>b. \u00c9crire une fonction <code>jour_suivant</code> qui prend en param\u00e8tre une <code>date</code> sous forme de tuple et qui renvoie un tuple d\u00e9signant la <code>date</code> du lendemain.</p> <p>Par exemple</p> <pre><code>&gt;&gt;&gt; jour_suivant((\"samedi\", 21, 10, 1995))\n(\"dimanche\", 22, 10, 1995)\n&gt;&gt;&gt; jour_suivant((\"mardi\", 31, 10, 1995))\n(\"mercredi\", 1, 11, 1995)\n</code></pre> <p>Rappel : on ne tient pas compte des ann\u00e9es bissextiles et on consid\u00e8re que le mois de f\u00e9vrier comporte toujours 28 jours.</p> </li> </ol>"},{"location":"T03_TraitementDonnees/accueil/","title":"Traitement de donn\u00e9es en tables","text":"<p>Afin de pouvoir \u00eatre trait\u00e9es efficacement, les donn\u00e9es doivent \u00eatre structur\u00e9es, \u00e0 l'aide de descripteurs communs. </p> <p> </p>"},{"location":"T03_TraitementDonnees/T3.1_Manipulation/T3.1_Manipulation/","title":"T3.1 Tables de donn\u00e9es","text":""},{"location":"T03_TraitementDonnees/T3.1_Manipulation/T3.1_Manipulation/#311-donnees-tabulees","title":"3.1.1 Donn\u00e9es tabul\u00e9es","text":"<p>Lorsqu'on souhaite manipuler des donn\u00e9es, il est tr\u00e8s fr\u00e9quent de les pr\u00e9senter sous forme de tableaux: extrait de compte bancaire, bulletin scolaire, statistiques sportives, etc.  On parle alors de donn\u00e9es tabul\u00e9es.</p> <p> </p> <p>Ces tables sont le principal moyen de stocker des donn\u00e9es structur\u00e9es, et il est tr\u00e8s important de savoir traiter efficacement ces donn\u00e9es pour en tirer de l'information. </p> <p>Vocabulaire</p> <ul> <li>une table est une collection d'enregistrements;</li> <li>chaque enregistrement contient des valeurs correspondant aux champs ou attributs de la table (des enregistrements).</li> </ul> pseudo cat\u00e9gorie score classement Gloxi Fant\u00f4mes 300 3 Letardigradefou Fant\u00f4mes 160 6 Cypher\u2019s Clutch (Kayo, Killjoy) Fant\u00f4mes 131 7 cgouygou Team Scully 677 1 clement_77 Team Scully 356 4 On vient chercher 2 troph\u00e9es (ClementHammel, MathisHammel) Loups-Garous 661 1 <p>Dans la table ci-dessus, les champs/attributs sont <code>'pseudo'</code>, <code>'cat\u00e9gorie'</code>, <code>'score'</code> et <code>'classement'</code> et chaque ligne est un enregistrement.</p> <p>Repr\u00e9sentation des tables en Python</p> <p>Puisque chaque enregistrement contient une valeur pour chaque champ de la table, il para\u00eet naturel de repr\u00e9senter chaque enregistrement par un dictionnaire.</p> <p>Par exemple, le deuxi\u00e8me enregistrement de la table pr\u00e9c\u00e9dente est  <pre><code>{'pseudo': 'Letardigradefou', 'cat\u00e9gorie': 'Fant\u00f4mes', 'score': 160, 'classement': 6}\n</code></pre></p> <p>Une table sera donc repr\u00e9sent\u00e9e par une liste de dictionnaires.</p>"},{"location":"T03_TraitementDonnees/T3.1_Manipulation/T3.1_Manipulation/#312-fichiers-csv","title":"3.1.2 Fichiers CSV","text":"<p>Les tables de donn\u00e9es que nous manipulerons sont repr\u00e9sent\u00e9es par des fichiers au format <code>csv</code> (comma separated values) qui est un format fr\u00e9quemment utilis\u00e9 pour importer ou exporter des donn\u00e9es tabul\u00e9es.</p> <p>C'est un simple fichier texte dans lequel la premi\u00e8re ligne contient les champs, et chaque ligne suivante les enregistrements. Les champs et valeurs sont s\u00e9par\u00e9es par un d\u00e9limiteur, g\u00e9n\u00e9ralement la virgule (comma in english).</p> <p>Virgule ou point-virgule?</p> <p>Il peut \u00eatre n\u00e9cessaire (comme dans l'exemple de la table pr\u00e9c\u00e9dente) de conserver la virgule pour s\u00e9parer une valeur composite. On utilise alors parfois le point-virgule pour s\u00e9parer les champs et valeurs...  Lors de l'import d'un fichier <code>csv</code> avec un tableur, il faut pr\u00e9ciser \u00e0 l'ouverture quel d\u00e9limiteur il faut utiliser. </p> <p>Exercice</p> <ul> <li>T\u00e9l\u00e9charger ce fichier  et l'ouvrir avec LibreOffice Calc. Observer l'importance de pr\u00e9ciser les d\u00e9limiteurs.</li> <li>L'ouvrir ensuite avec l'\u00e9diteur de texte (<code>gedit</code>) pour observer sa construction.</li> </ul> <p>Charger un fichier CSV avec Python</p> <p>Avec une ouverture classique de fichier texte, les donn\u00e9es import\u00e9es sont sous forme d'une liste, dont la premi\u00e8re valeur contient les champs, et les autres les enregistrements:</p> <p><pre><code>&gt;&gt;&gt; data = open('pokedex.csv').read().splitlines()\n&gt;&gt;&gt; data[:5]\n['No;Nom;Type;PV;Attaque;D\u00e9fense;Vitesse;ASp\u00e9;DSp\u00e9;Talent;Nom US;code', '1;Bulbizarre;plante,poison;45;49;49;45;65;65;Engrais,Chlorophylle;Bulbasaur;77140', '2;Herbizarre;plante,poison;60;62;63;60;80;80;Engrais,Chlorophylle;Ivysaur;67530', '3;Florizarre;plante,poison;80;82;83;80;100;100;Engrais,Chlorophylle;Venusaur;65357', '4;Salam\u00e8che;feu;39;52;43;65;60;50;Brasier,Force Soleil;Charmander;10140']\n</code></pre> Pour obtenir une liste de dictionnaires, il faudrait donc retravailler ces donn\u00e9es (c'est un bon exercice, je vous le conseille...).</p> <p>On va donc plut\u00f4t utiliser un module d\u00e9di\u00e9 \u00e0 la manipulation de fichiers au format <code>csv</code>, le module ... <code>csv</code>:</p> Code-type d'importation d'un fichier CSV<pre><code>import csv\n\nwith open('pokedex.csv') as f:       # (1)\n    table = []\n    for enregistrement in csv.DictReader(f, delimiter=';'): # (2)\n        table.append(dict(enregistrement))\n</code></pre> <ol> <li>On charge le fichier dans une variable <code>f</code></li> <li>On applique la fonction <code>DictReader</code> du module <code>csv</code> au fichier en pr\u00e9cisant le d\u00e9limiteur, qui permet d'it\u00e9rer sur les lignes du fichier en les transformant \u00e0 l'aide des champs de la premi\u00e8re ligne.</li> </ol> <p>Exercice</p> <ol> <li>Ex\u00e9cuter le code pr\u00e9c\u00e9dent et contr\u00f4ler que la variable <code>table</code> est bien une liste de dictionnaires avec l'inspecteur d'objet de Thonny.</li> <li>Le code pr\u00e9c\u00e9dent construit la liste <code>table</code> par ajouts successifs. Transformer le code pour la construire en compr\u00e9hension.</li> </ol>"},{"location":"T03_TraitementDonnees/T3.1_Manipulation/T3.1_Manipulation/#313-export-en-csv","title":"3.1.3 Export en csv","text":"<p>\u00c9crire un fichier CSV</p> <p>Le module <code>csv</code> permet \u00e9galement d'exporter une table (c'est-\u00e0-dire une liste de dictionnaires...) vers un fichier CSV, avec la fonction <code>DictWriter</code>.</p> Code-type d'exportation d'une table vers un fichier CSV<pre><code>def export_csv(nomfichier: str, table: list, champs: list) -&gt; None:\n    '''\n    \u00c9crit dans un fichier le contenu d'une table connaissant ses champs.\n\n    - nomfichier: le nom du fichier \u00e0 cr\u00e9er, d'extension csv. S'il existe, il sera \u00e9cras\u00e9, \n    sinon il sera cr\u00e9\u00e9.\n    - table: la table \u00e0 exporter dans le fichier.\n    - champs: une liste de str contenant les intitul\u00e9s des champs de la table.\n    '''\n    with open(nomfichier, \"w\") as sortie:\n        w = csv.DictWriter(sortie, champs)\n        w.writeheader()\n        w.writerows(table)\n</code></pre>"},{"location":"T03_TraitementDonnees/T3.2_TriTable/T3.2_TriTable/","title":"T3.2 Op\u00e9rations sur les tables","text":"<p>L'objectif maintenant est d'exploiter les donn\u00e9es repr\u00e9sent\u00e9es sous forme d'une table. Puisque celle-ci est une liste de dictionnaires, on va utiliser les techniques de manipulation des listes et dictionnaires d\u00e9j\u00e0 rencontr\u00e9es.</p> <p>Pour illustrer ces diff\u00e9rentes techniques dans les exemples et exercices suivants, on utilisera cette table.</p>"},{"location":"T03_TraitementDonnees/T3.2_TriTable/T3.2_TriTable/#321-recherche-et-agregation","title":"3.2.1 Recherche et agr\u00e9gation","text":"<p>Recherche</p> <p>On souhaite d'abord v\u00e9rifier qu'une valeur appartient \u00e0 une table ou non. Pour cela il suffit de parcourir les enregistrements de la table et v\u00e9rifier que la valeur recherch\u00e9e est une valeur de l'enregistrement.</p> Recherche d'une valeur dans une table (\u00e0 compl\u00e9ter)<pre><code>def recherche(valeur, table: list) -&gt; bool:\n    '''\n    Renvoie True ou False selon que valeur appara\u00eet ou non dans les valeurs de table.\n    '''\n    for e in table:\n        for v in e. ... () :\n            if v == ...\n                return ...\n    return ...\n</code></pre> Correction <pre><code>def recherche(valeur, table: list) -&gt; bool:\n    '''\n    Renvoie True ou False selon que valeur appara\u00eet ou non dans les valeurs de table.\n    '''\n    for e in table:\n        for v in e.values() :\n            if v == valeur:\n                return True\n    return False\n</code></pre> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Dans la pratique, la fonction pr\u00e9c\u00e9dente n'a que peu d'int\u00e9r\u00eat. On va plut\u00f4t rechercher si une valeur est pr\u00e9sente dans un champ donn\u00e9. Ainsi on n'a pas besoin de parcourir toutes les valeurs d'un enregistrement.</p> <p>Modifier alors la fonction pr\u00e9c\u00e9dente pour qu'elle prenne en param\u00e8tre un champ et qu'elle recherche si la valeur est pr\u00e9sente pour le champ pr\u00e9cis\u00e9.</p> <pre><code>def recherche(valeur, champ: str, table: list) -&gt; bool:\n    '''\n    Renvoie True ou False selon que valeur appara\u00eet ou non dans les valeurs de table.\n    '''\n    for e in table:\n        if e[champ] == valeur:\n            return True\n    return False\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On souhaite d\u00e9sormais r\u00e9cup\u00e9rer certaines donn\u00e9es si la valeur recherch\u00e9e est trouv\u00e9e.</p> <p>Modifier la fonction pr\u00e9c\u00e9dente (ou en cr\u00e9er une nouvelle) pour qu'elle renvoie la liste des valeurs correspondant \u00e0 un champ 2 (de retour) lorsque la valeur cherch\u00e9e est trouv\u00e9e (dans un champ 1 de recherche).</p> <p>Par exemple, si <code>table_sw</code> est la table contenant les donn\u00e9es du fichier 'sw.csv': <pre><code>&gt;&gt;&gt; recherche('Jedi', 'Statut', 'Nom', table_sw)\n['Obi-Wan Kenobi', 'Yoda', 'Luke Skywalker', 'Rey']\n</code></pre></p> <pre><code>def recherche(valeur, champ1: str, champ2:str, table: list) -&gt; bool:\n    '''\n    Dans la table, renvoie les valeurs de champ2 de si valeur est trouv\u00e9e dans champ1\n    '''\n    resultat = []\n    for e in table:\n        if e[champ1] == valeur:\n            resultat.append(e[champ2])\n    return resultat\n</code></pre> <p>Agr\u00e9gation</p> <p>Il s'agit de r\u00e9cup\u00e9rer une donn\u00e9e statistique sur les donn\u00e9es contenues dans une table, par exemple pour compter le nombre d'enregistrements qui satisfont \u00e0 une certaine condition.</p> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>compte</code> qui prend en param\u00e8tre une valeur, un champ et une table et renvoie le nombre d'occurences de la valeur dans le champ de la table.</p> <p>Par exemple: <pre><code>&gt;&gt;&gt; compte('Dro\u00efde', 'Esp\u00e8ce', table_sw)\n3\n</code></pre></p> <pre><code>def compte(valeur, champ: str, table: list) -&gt; int:\n    '''\n    Dans la table, renvoie le nombre d'occurences de valeur dans champ\n    '''\n    resultat = 0\n    for e in table:\n        if e[champ] == valeur:\n            resultat += 1\n    return resultat\n</code></pre>"},{"location":"T03_TraitementDonnees/T3.2_TriTable/T3.2_TriTable/#322-selection","title":"3.2.2 S\u00e9lection","text":"<p>S\u00e9lection d'une ligne v\u00e9rifiant un crit\u00e8re</p> <p>On cherche ici \u00e0 cr\u00e9er une nouvelle table en extrayant les enregistrements d'une table existante v\u00e9rifiant un certain crit\u00e8re. Par exemple si on veut tous les enregistrements dont le statut est <code>Jedi</code>, on veut extraire la table:</p> Nom Esp\u00e8ce Force Statut Obi-Wan Kenobi Humain oui Jedi Rey Humain oui Jedi Yoda Yoda oui Jedi Luke Skywalker Humain oui Jedi <p>Cela consiste donc \u00e0 cr\u00e9er une liste en parcourant la table existante et en s\u00e9lectionnant les enregistrements selon un crit\u00e8re: c'est exactement ainsi qu'on cr\u00e9e une liste en compr\u00e9hension avec filtre .</p> <p>Par exemple, on peut cr\u00e9er la table pr\u00e9c\u00e9dente en s\u00e9lectionnant les enregistrements dont la valeur du champ <code>'Statut'</code> est <code>'Jedi'</code> avec : <pre><code>table_jedi = [enregistrement for enregistrement in table_sw if enregistrement['Statut'] == 'Jedi']\n</code></pre></p> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <ol> <li>Cr\u00e9er la table des personnages d'esp\u00e8ce humaine.</li> <li>Cr\u00e9er la table des personnages d'esp\u00e8ce humaine qui ma\u00eetrisent la force.</li> </ol> <ol> <li> <pre><code>table_humains = [e for e in table_sw if e['Esp\u00e8ce'] == 'Humain']\n</code></pre> </li> <li> <pre><code>table_humains_force = [e for e in table_sw if e['Esp\u00e8ce'] == 'Humain' and e['Force'] == 'oui']\n</code></pre> </li> </ol> <p>S\u00e9lection de colonnes</p> <p>On peut \u00e9galement avoir \u00e0 extraire d'une table certaines colonnes, c'est-\u00e0-dire seulement des donn\u00e9es d'un ou plusieurs champs. On appelle \u00e9galement cette op\u00e9ration projection<sup>1</sup>.</p> <p>Par exemple, on veut cr\u00e9er la table suivante:</p> Nom Esp\u00e8ce Dark Vador Humain Obi-Wan Kenobi Humain R2-D2 Dro\u00efde ... ... Jango Fett Humain <p>Il s'agit donc de cr\u00e9er une nouvelle table (liste) dont les enregistrements sont des dictionnaires qui ne contiennent que les couples <code>champ: valeur</code> des enregistrements de la table initiale pour les champs pr\u00e9cis\u00e9s (sous forme d'une liste par exemple).</p> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <ol> <li> <p>Compl\u00e9ter la fonction de projection:     Fonction de projection (\u00e0 compl\u00e9ter)<pre><code>def projection(table: list, liste_champs: list) -&gt; list:\n    '''\n    Renvoie une table (liste de dictinonaires) des enregistrements de table ne contenant uniquement\n    les champs appartenant \u00e0 liste_champs.\n    '''\n    table_proj = ...\n    for enregistrement in ...:\n        table_proj.append({c: v for c, v in ... if ... })\n    return ...\n</code></pre></p> </li> <li> <p>Utiliser cette fonction pour obtenir la table pr\u00e9c\u00e9dente.</p> </li> </ol> <p>1.     <pre><code>def projection(table: list, liste_champs: list) -&gt; list:\n    '''\n    Renvoie une table (liste de dictinonaires) des enregistrements de table ne contenant uniquement\n    les champs appartenant \u00e0 liste_champs.\n    '''\n    table_proj = []\n    for enregistrement in table:\n        table_proj.append({c: v for c, v in enregistrement.items() if c in liste_champs})\n    return table_proj\n</code></pre> 2.     <pre><code>&gt;&gt;&gt; projection(table_sw, ['Nom', 'Esp\u00e8ce'])\n</code></pre></p>"},{"location":"T03_TraitementDonnees/T3.2_TriTable/T3.2_TriTable/#323-tri","title":"3.2.3 Tri","text":"<p>Trier une table selon un champ permet d'am\u00e9liorer sa lisibilit\u00e9 selon l'information recherch\u00e9e.</p> <p> Spoiler-alert : Puisqu'une table est une liste, on pourrait utiliser les algorithmes \u00e9tudi\u00e9s au th\u00e8me 7. Mais ceux-ci sont peu efficaces, comme on va le voir.</p> <p>On va donc utiliser les fonctions natives de Python pour trier une liste: la m\u00e9thode <code>sort</code> et la fonction <code>sorted</code>.</p> <p>Diff\u00e9rence fondamentale entre <code>sort</code> et <code>sorted</code></p> <ul> <li>La m\u00e9thode <code>sort</code> trie en place, c'est-\u00e0-dire qu'elle modifie la liste \u00e0 laquelle on applique la m\u00e9thode et renvoie <code>None</code>:     <pre><code>&gt;&gt;&gt; l = [4, 0, 1, 3, 2]\n&gt;&gt;&gt; a = l.sort()\n&gt;&gt;&gt; l\n[0, 1, 2, 3, 4]\n&gt;&gt;&gt; a\n&gt;&gt;&gt;\n</code></pre></li> <li>La fonction <code>sorted</code> ne modifie pas la liste mais cr\u00e9e une nouvelle liste:   <pre><code>&gt;&gt;&gt; l = [4, 0, 1, 3, 2]\n&gt;&gt;&gt; a = sorted(l)\n&gt;&gt;&gt; a\n[0, 1, 2, 3, 4]\n&gt;&gt;&gt; l\n[4, 0, 1, 3, 2]\n</code></pre></li> </ul> <p>Dans notre cas, on pr\u00e9f\u00e8rera ne pas modifier la table \u00e9tudi\u00e9e, mais plut\u00f4t cr\u00e9er une nouvelle table tri\u00e9e: on utilisera donc la fonction <code>sorted</code>.</p> <p>Ordre de tri</p> <p>Par d\u00e9faut le tri avec <code>sorted</code>  se fait dans l'ordre croissant. Si on veut un ordre d\u00e9croissant, il suffit de passer un argument <code>reverse</code> (un bool\u00e9en) \u00e0 la fonction:</p> <pre><code>&gt;&gt;&gt; sorted([4, 0, 1, 3, 2], reverse=True)\n[4, 3, 2, 1, 0]\n</code></pre> <p>Cl\u00e9 de tri</p> <p>Par d\u00e9faut:</p> <ul> <li>les objets de type <code>int</code> sont tri\u00e9s avec l'ordre usuel;</li> <li>les objets de type <code>str</code> sont tri\u00e9s avec l'ordre alphab\u00e9tique;</li> <li>les objets de type <code>list</code> ou <code>tuple</code> sont tri\u00e9s avec l'ordre lexicographique : on trie selon le premier \u00e9l\u00e9ment, puis le deuxi\u00e8me, etc.     <pre><code>&gt;&gt;&gt; sorted([(2, 5), (1, 3), (1, 2), (2, 7), (1, 6), (0, 10), (3, 4), (2, 0)])\n[(0, 10), (1, 2), (1, 3), (1, 6), (2, 0), (2, 5), (2, 7), (3, 4)]\n</code></pre></li> </ul> <p>Lorsqu'on souhaite trier des donn\u00e9es diff\u00e9remment, il faut pr\u00e9ciser une cl\u00e9 de tri: selon quel crit\u00e9re on veut trier. Cela sera particuli\u00e8rement utile pour trier des dictionnaires...</p> <p>Cette cl\u00e9 de tri doit imp\u00e9rativement \u00eatre une fonction, que l'on pr\u00e9cisera avec l'argument <code>key</code>. En g\u00e9n\u00e9ral on cr\u00e9era cette fonction pour l'occasion.</p> Exemple 1Exemple 2Exemple 3: tri d'un dictionnaire <p>Pour trier la liste: <pre><code>l = [(2, 5), (1, 3), (1, 2), (2, 7), (1, 6), (0, 10), (3, 4), (2, 0)]\n</code></pre> sur le deuxi\u00e8me \u00e9l\u00e9ment (d'indice 1), la cl\u00e9 de tri doit \u00eatre la fonction qui, \u00e0 un tuple de d\u00e9part, renvoie l'\u00e9l\u00e9ment d'indice 1:</p> <pre><code>&gt;&gt;&gt; def cle_tri(t: tuple) -&gt; int:\n        return t[1]\n&gt;&gt;&gt; sorted([(2, 5), (1, 3), (1, 2), (2, 7), (1, 6), (0, 10), (3, 4), (2, 0)], key=cle_tri)\n[(2, 0), (1, 2), (1, 3), (3, 4), (2, 5), (1, 6), (2, 7), (0, 10)]\n</code></pre> <p>Python ne sait pas comparer des dictionnaires (peut-\u00eatre tout simplement parce que cela n'a pas de sens). Il faut donc pr\u00e9ciser sur quel champ comparer les donn\u00e9es pour les trier.</p> <p>Voici une table: <pre><code>releve =[{'Nom': 'Alice', 'Anglais': 17, 'Info': 18, 'Maths': 16},\n         {'Nom': 'Bob', 'Anglais': 19, 'Info': 13, 'Maths': 14},\n         {'Nom': 'Carol', 'Anglais': 15, 'Info': 17, 'Maths': 19}]\n</code></pre></p> <p>Pour la trier sur les notes obtenues en Informatique, il faut construire la fonction suivante: <pre><code>def cle_tri(dico):\n    return dico['Info']\n</code></pre></p> <p>Puis on peut trier la table, en pr\u00e9cisant par exemple l'ordre d\u00e9croissant: <pre><code>classement_info = sorted(releve, key=cle_tri, reverse=True)\n</code></pre></p> <p>On ne peut pas trier un dictionnaire (il n'est pas ordonn\u00e9), mais on peut trier ses <code>items()</code> qui sont une liste de <code>tuple</code> de la forme <code>(cle, valeur)</code>.</p> <p>Donc par exemple si on veut trier les pokemons (voir l'exercice 3 ici on peut faire:</p> <p><pre><code>exemple_pokemons = {\n    'Bulbizarre': (70, 7),\n    'Herbizarre': (100, 13),\n    'Abo': (200, 7),\n    'Jungko': (170, 52),\n    'Goupix' :(60, 10),\n    'Pikachu': (40, 6)\n}\n\ndef tri_nom(poke):\n    # pour trier sur le nom, on r\u00e9cup\u00e8re la cl\u00e9, c'est-\u00e0-dire le premier \u00e9l\u00e9ment des tuples (indice 0)\n    return poke[0]\n\ndef tri_longueur_nom(poke):\n    # pour trier par longueur du nom, on applique une fonction\n    return len(poke[0])\n\ndef tri_taille(poke):\n    # pour trier sur la taille, premier \u00e9l\u00e9ment du tuple valeur, donc d'indice 0\n    return poke[1][0]  \n\ndef tri_poids(poke):\n    # pour trier sur le poids, il faut en revanche aller chercher l'\u00e9l\u00e9ment d'indice 1 dans ces tuples\n    return poke[1][1]      \n</code></pre> Puis en console par exemple: <pre><code>&gt;&gt;&gt; sorted(exemple_pokemons.items(), key=tri_nom)\n[('Abo', (200, 7)), ('Bulbizarre', (70, 7)), ('Goupix', (60, 10)), ('Herbizarre', (100, 13)), ('Jungko', (170, 52)), ('Pikachu', (40, 6))]\n\n&gt;&gt;&gt; sorted(exemple_pokemons.items(), key=tri_longueur_nom)\n[('Abo', (200, 7)), ('Jungko', (170, 52)), ('Goupix', (60, 10)), ('Pikachu', (40, 6)), ('Bulbizarre', (70, 7)), ('Herbizarre', (100, 13))]\n\n&gt;&gt;&gt; sorted(exemple_pokemons.items(), key=tri_taille)\n[('Pikachu', (40, 6)), ('Goupix', (60, 10)), ('Bulbizarre', (70, 7)), ('Herbizarre', (100, 13)), ('Jungko', (170, 52)), ('Abo', (200, 7))]\n\n&gt;&gt;&gt; sorted(exemple_pokemons.items(), key=tri_poids)\n[('Pikachu', (40, 6)), ('Bulbizarre', (70, 7)), ('Abo', (200, 7)), ('Goupix', (60, 10)), ('Herbizarre', (100, 13)), ('Jungko', (170, 52))]\n\n&gt;&gt;&gt; \n</code></pre></p> <p>Exercice  6</p> \u00c9nonc\u00e9Correction <ol> <li> <p>Trier la table <code>table_sw</code> selon le champ <code>'Nom'</code>.</p> </li> <li> <p>Trier la table <code>table_sw</code> selon le champ <code>'Esp\u00e8ce'</code>, puis le champ <code>'Nom'</code> (rappel: Python sait trier des tuples).</p> </li> </ol> <p>Tri simple: <pre><code>def tri(table: list, champ: str) -&gt; list:\n    '''\n    Renvoie une nouvelle liste correspondant \u00e0 la table tri\u00e9e selon champ\n    '''\n    def cle_tri(e):\n        return e[champ]\n\n    return sorted(table, key=cle_tri)\n\ntable_triee = tri(table_sw, 'Nom')\n</code></pre></p> <p>Tri multiple: <pre><code>def tri2(table: list, champs: list) -&gt; list:\n    '''\n    Renvoie une nouvelle liste correspondant \u00e0 la table tri\u00e9e selon les champs\n    de la liste champs\n    '''\n    def cle_tri(e):\n        return tuple(e[champ] for champ in champs)\n\n    return sorted(table, key=cle_tri)\n\ntable_triee = tri2(table_sw, ['Esp\u00e8ce', 'Nom'])\n</code></pre></p> <ol> <li> <p>c'est notamment le vocabulaire des bases de donn\u00e9es, au programme de Terminale.\u00a0\u21a9</p> </li> </ol>"},{"location":"T03_TraitementDonnees/T3.3_FusionTable/T3.3_FusionTable/","title":"T3.3 Fusion (par jointure) de tables","text":"<p>Lorsqu'on travaille sur des donn\u00e9es, il est fr\u00e9quent de manipuler plusieurs tables dans lesquelles les m\u00eames donn\u00e9es peuvent se trouver, avec diff\u00e9rents champs. Par exemple voici une nouvelle table (\u00e0 cr\u00e9er dans un fichier CSV, puis \u00e0 importer pour manipulation):</p> Nom Affiliation Dark Vador Empire Obi-Wan Kenobi R\u00e9publique R2-D2 R\u00e9publique Rey R\u00e9bellion Han Solo R\u00e9bellion Grand Moff Tarkin Empire Leia Organa R\u00e9bellion C-3PO R\u00e9publique Luke Skywalker R\u00e9bellion Padm\u00e9 Amidala R\u00e9publique Dark Sidious Empire <p>On peut donc vouloir les fusionner, c'est-\u00e0-dire construire une nouvelle table qui contient les donn\u00e9es des deux tables, \u00e0 condition qu'elles poss\u00e8dent un champ commun, sur lequel on proc\u00e8de \u00e0 l'op\u00e9ration de jointure. Ici le champ commun est <code>'Nom'</code>, et on obtiendrait la table suivante:</p> Nom Esp\u00e8ce Force Statut Affiliation Dark Vador Humain oui Sith Empire Obi-Wan Kenobi Humain oui Jedi R\u00e9publique R2-D2 Dro\u00efde non Astrom\u00e9cano R\u00e9publique Rey Humain oui Jedi R\u00e9bellion Han Solo Humain non Contrebandier R\u00e9bellion Leia Organa Humain oui S\u00e9natrice R\u00e9bellion C-3PO Dro\u00efde non Protocole R\u00e9publique Luke Skywalker Humain oui Jedi R\u00e9bellion Padm\u00e9 Amidala Humain non S\u00e9natrice R\u00e9publique Dark Sidious Humain oui Sith Empire <p>On ne conserve bien \u00e9videmment que les enregistrements existants dans les deux tables.</p> <p>Fusion par jointure</p> <p>La fusion par jointure consiste \u00e0 :</p> <ul> <li>cr\u00e9er une table vide qui accueillera les enregistrements contruits en fusionnant ceux des deux tables;</li> <li>parcourir les enregistrements de la premi\u00e8re table;</li> <li>pour chacun des enregistrements de la deuxi\u00e8me  table, regarder si les enregistrements ont la m\u00eame valeur pour le champ commun;</li> <li>si c'est le cas, cr\u00e9er une copie de l'enregistrement de la premi\u00e8re table, \u00e0 laquelle on ajoute les donn\u00e9es (champ: valeur) de la deuxi\u00e8me table.</li> </ul> Code \u00e0 compl\u00e9terCode compl\u00e9t\u00e9 Jointure de deux tables<pre><code>def fusion(table1: list, table2: list, champ: str) -&gt; list:\n    nouvelle_table = ...\n    for ligne1 in table1:\n        for ligne2 in table2:\n            if ...:\n                ligne = dict(ligne1)\n                for cle in ...:\n                    ...\n                        ligne[cle] = ...\n                nouvelle_table.append(...)\n    return ...\n</code></pre> Jointure de deux tables<pre><code>def fusion(table1: list, table2: list, champ: str) -&gt; list:\n    nouvelle_table = []\n    for ligne1 in table1:\n        for ligne2 in table2:\n            if ligne1[champ] == ligne2[champ]:\n                ligne = dict(ligne1)\n                for cle in ligne2:\n                    if cle != champ:\n                        ligne[cle] = ligne2[cle]\n                nouvelle_table.append(ligne)\n    return nouvelle_table\n</code></pre>"},{"location":"T03_TraitementDonnees/T3.4_TP/T3.4_TP_Pokedex/","title":"TP Pokedex","text":"<p>\u00c0 faire sur Capytale.</p>"},{"location":"T03_TraitementDonnees/T3.4_TP/T3.4_TP_Pokedex/#corrige","title":"Corrig\u00e9","text":"<p>Question 1</p> <p>Commencez par ouvrir le fichier avec l'\u00e9diteur de texte. Quel est le d\u00e9limiteur utilis\u00e9?</p> <p>R\u00e9ponse: Le d\u00e9limiteur est le point-virgule ';' .</p> <p>Question 2</p> <p>Importez les donn\u00e9es dans une table:</p> <pre><code>import csv\n\nwith open('pokedex.csv') as f:\n    table_pokedex = list(csv.DictReader(f, delimiter=';'))\n</code></pre> <p>Question 3</p> <p>Existe-t-il un pokemon dont le nom est <code>Apireine</code> ? Si oui, quel est son <code>'Nom US'</code>?</p> <p>On utilise la fonction de recherche de l'exercice 2.</p> <pre><code>def recherche(valeur, champ1: str, champ2:str, table: list) -&gt; bool:\n    '''\n    Dans la table, renvoie les valeurs de champ2 de si valeur est trouv\u00e9e dans champ1\n    '''\n    resultat = []\n    for e in table:\n        if e[champ1] == valeur:\n            resultat.append(e[champ2])\n    return resultat\n\nrecherche('Apireine', 'Nom', 'Nom US', table_pokedex)\n</code></pre> <p>Question 4</p> <p>Modifiez la table pour ne conserver que les champs:  <pre><code>'Nom', 'Type', 'PV', 'Attaque', 'D\u00e9fense', 'code'\n</code></pre> Il s'agit d'une s\u00e9lection de colonnes, appel\u00e9e aussi projection. Comme on veut modifier la table, on peut lui r\u00e9affecter la table renvoy\u00e9e par la fonction <code>projection</code>.</p> <pre><code>def projection(table: list, liste_champs: list) -&gt; list:\n    '''\n    Renvoie une table (liste de dictinonaires) des enregistrements de table ne contenant uniquement\n    les champs appartenant \u00e0 liste_champs.\n    '''\n    table_proj = []\n    for e in table:\n        table_proj.append({c: v for c, v in e.items() if c in liste_champs})\n    return table_proj\n\ntable_pokedex = projection(table_pokedex, ['Nom', 'Type', 'PV', 'Attaque', 'D\u00e9fense', 'code'])\n</code></pre> <p>Question 5</p> <p>Combien de pokemons ont une <code>'Attaque'</code> sup\u00e9rieure ou \u00e9gale \u00e0 50?</p> <p>On reprend la fonction <code>compte</code> de l'exercice 3, mais en la modifiant l\u00e9g\u00e8rement:</p> <ul> <li>on change le <code>==</code>en <code>&gt;=</code>puisqu'on cherche des valeurs sup\u00e9rieurs ou \u00e9gales</li> <li>on n'oublie pas de convertir les valeurs en entier (ce sont des <code>str</code> par d\u00e9faut).</li> </ul> <pre><code>def compte(valeur, champ: str, table: list) -&gt; int:\n    '''\n    Dans la table, renvoie le nombre d'occurences de valeur dans champ\n    '''\n    resultat = 0\n    for e in table:\n        if int(e[champ]) &gt;= valeur:\n            resultat += 1\n    return resultat\n\ncompte(50, 'Attaque', table_pokedex)\n</code></pre> <p>Question 6</p> <p>\u00c0 partir de la table initiale, cr\u00e9ez une nouvelle table qui ne contient que les pokemons de type <code>'plante'</code> (attention, ils peuvent avoir plusieurs types, donc on cherchera une appartenance et non une \u00e9galit\u00e9).</p> <p>C'est une s\u00e9lection de lignes v\u00e9rifiant un crit\u00e8re, donc on peut cr\u00e9er rapidement la table en compr\u00e9hension.</p> <pre><code>[pokemon for pokemon in table_pokedex if 'plante' in pokemon['Type']]\n</code></pre> <p>Question 7</p> <p>Cr\u00e9ez une nouvelle table tri\u00e9e sur le champ <code>'PV'</code> par ordre d\u00e9croissant.</p> <p>On reprend la fonction <code>tri</code> en convertissant en entier les valeurs et en ajoutant la param\u00e8tre <code>reverse=True</code> \u00e0 la fonction <code>sorted</code> pour le tri d\u00e9croissant.</p> <pre><code>def tri(table: list, champ: str) -&gt; list:\n    '''\n    Renvoie une nouvelle liste correspondant \u00e0 la table tri\u00e9e selon champ\n    '''\n    def cle_tri(e):\n        return int(e[champ])\n\n    return sorted(table, key=cle_tri, reverse=True)\n\ntri(table_pokedex, 'PV')\n</code></pre> <p>Question 8</p> <p>La table <code>coordonnees_communes.csv</code> (fichier attach\u00e9 \u00e0 l'activit\u00e9) contient les coordonn\u00e9es g\u00e9ographiques des communes fran\u00e7aises. Cr\u00e9ez une nouvelle table en fusionnant les deux tables sur le champ <code>'code'</code>.</p> <p>Il s'agit ici d'une fusion de deux tables. Il faut bien entendu importer l'autre fichier csv, en faisant attention au d\u00e9limiteur qui est ici la virgule...</p> <pre><code>with open('coordonnees_communes.csv') as f:\n    table_communes = list(csv.DictReader(f, delimiter=','))\n\ndef fusion(table1: list, table2: list, champ: str) -&gt; list:\n    nouvelle_table = []\n    for ligne1 in table1:\n        for ligne2 in table2:\n            if ligne1[champ] == ligne2[champ]:\n                ligne = dict(ligne1)\n                for cle in ligne2:\n                    if cle != champ:\n                        ligne[cle] = ligne2[cle]\n                nouvelle_table.append(ligne)\n    return nouvelle_table\n\ntable_fusion = fusion(table_pokedex, table_communes, 'code')\n</code></pre> <p>Example</p> <p>Cr\u00e9ez une carte avec folium pour localiser les pokemons... Lequel est le plus proche de nous?</p> <p>On parcourt la table des pokemons en ajoutant pour chacun un marker, en r\u00e9cup\u00e9rant la latitude et la longitude converties en <code>float</code>. On peut \u00e9galement affich\u00e9e en pop-up le nom du pokemon.</p> <pre><code>import folium\n\nlieu = [48.8704, 2.31673] \n\nc = folium.Map(location=lieu, zoom_start=6) \n\nfor pokemon in table_fusion:\n    lieu = [float(pokemon['latitude']), float(pokemon['longitude'])]\n    folium.Marker(location=lieu, popup=pokemon[\"Nom\"]).add_to(c) \n\nc \n</code></pre>"},{"location":"T04_IHMWeb/accueil/","title":"Interactions entre l'homme et la machine sur le Web","text":"<p>Lorsqu'on navigue sur le Web, nous interagissons avec une machine distante via des pages, qui g\u00e8rent des \u00e9v\u00e9nements (clics, soumissions de formulaires par exemple) qui doivent \u00eatre g\u00e9r\u00e9s automatiquement.</p> <p> </p> <p>Avant de commencer,  un petit web-escape game... pour s'\u00e9chauffer...</p>"},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/","title":"T4.1 HTML &amp; CSS","text":"<p>On commence par s'int\u00e9resser au cas le plus simple, celui o\u00f9 le serveur renvoie une page unique, identique pour tous les utilisateurs. De plus, l'utilisateur ne pourra pas agir sur sa page : il n'y a aucune interactivit\u00e9.</p> <p> </p> <p>Sources de l'Escape Game</p> <p>Vous pouvez prendre mod\u00e8le sur la source du site de l'escape game en la t\u00e9l\u00e9chargeant ici.</p>"},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/#411-les-bases-de-html","title":"4.1.1 Les bases de HTML","text":"<p>Nous allons nous int\u00e9resser \u00e0 un acteur fondamental du d\u00e9veloppement web, le couple HTML+CSS (Hyper Text Markup Langage et Cascading Style Sheets).</p> <p> </p> <p>Dans un premier temps, nous allons exclusivement nous int\u00e9resser au HTML. Qu'est-ce que le HTML, voici la d\u00e9finition que nous en donne Wikipedia :</p> <p>L\u2019Hypertext Markup Language, g\u00e9n\u00e9ralement abr\u00e9g\u00e9 HTML, est le format de donn\u00e9es con\u00e7u pour repr\u00e9senter les pages web. C\u2019est un langage de balisage permettant d\u2019\u00e9crire de l\u2019hypertexte, d\u2019o\u00f9 son nom. HTML permet \u00e9galement de structurer s\u00e9mantiquement et de mettre en forme le contenu des pages, d\u2019inclure des ressources multim\u00e9dias, dont des images, des formulaires de saisie, et des programmes informatiques. Il permet de cr\u00e9er des documents interop\u00e9rables avec des \u00e9quipements tr\u00e8s vari\u00e9s de mani\u00e8re conforme aux exigences de l\u2019accessibilit\u00e9 du web. Il est souvent utilis\u00e9 conjointement avec des langages de programmation (JavaScript) et des formats de pr\u00e9sentation (feuilles de style en cascade).</p> <p>On retiendra que HTML est un langage dit \u00ab \u00e0 balises \u00bb. Ce n'est pas \u00e0 proprement parler un langage de programmation, mais un langage de description de contenu. Il a \u00e9t\u00e9 invent\u00e9 en 1992 par Tim Berners-Lee. La version actuellement utilis\u00e9e est le <code>html5</code>.</p> <p>Balises</p> <p>Voici un site pour apprendre le fonctionnement des balises :</p> <p>https://developer.mozilla.org/fr/docs/Apprendre/HTML/Introduction_%C3%A0_HTML/Getting_started </p> <p>Exemple complet minimal</p> <p>Ouvrir l'\u00e9diteur de texte <code>gedit</code> et y coller le code suivant. Enregistrer le document sous le nom <code>exemple_minimal.html</code> par exemple, dans un dossier <code>HTML</code>. Puis l'ouvrir avec un navigateur (Firefox).</p> <code>&lt;head&gt;</code><code>&lt;body&gt;</code> <pre><code>&lt;!DOCTYPE html&gt; \n&lt;html&gt;\n    &lt;head&gt;                                      &lt;!-- (1) --&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;Titre tr\u00e8s original&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Une belle page web&lt;/h1&gt;\n        &lt;p&gt;\n            Un texte tr\u00e8s &lt;strong&gt;int\u00e9ressant&lt;/strong&gt;.\n        &lt;/p&gt;\n        &lt;br&gt;\n        &lt;a href=\"http://lyceevalois.com/lmdv\"&gt;Un lien&lt;/a&gt;\n        &lt;!-- Un commentaire... --&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li>La balise <code>&lt;head&gt;</code> regroupe l'ent\u00eate du document: \u00e0 part le titre, aucun des \u00e9l\u00e9ments de l'ent\u00eate n'est affich\u00e9 sur la page.</li> </ol> <pre><code>&lt;!DOCTYPE html&gt; \n&lt;html&gt;\n    &lt;head&gt;                                      &lt;!-- (1) --&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;Titre tr\u00e8s original&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Une belle page web&lt;/h1&gt;\n        &lt;p&gt;\n            Un texte tr\u00e8s &lt;strong&gt;int\u00e9ressant&lt;/strong&gt;.\n        &lt;/p&gt;\n        &lt;br&gt;\n        &lt;a href=\"http://lyceevalois.com/lmdv\"&gt;Un lien&lt;/a&gt;\n        &lt;!-- Un commentaire... --&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li>La balise <code>&lt;body&gt;</code> regroupe tous les \u00e9l\u00e9ments qui structurenet et composent la page.</li> </ol> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>R\u00e9pondre \u00e0  l'aide de recherches sur le web.</p> <ol> <li>Quelle est la signification des balises de ce code minimal?</li> <li>Quelles sont les balises contenant un attribut?</li> <li>L'indentation est-elle obligatoire?</li> <li>Quelle est l'erreur dans l'extrait de code suivant? <pre><code>&lt;balise1&gt;\n    &lt;balise2&gt;\n    &lt;/balise1&gt;\n&lt;/balise2&gt;\n</code></pre></li> <li>Quelle est la balise permettant d'ins\u00e9rer une image dans une page web? Combien d'attributs obligatoires comporte-t-elle?</li> </ol> <p>On peut donner des attributs pour mettre en forme les diff\u00e9rents \u00e9l\u00e9ments.</p> <p>Modifier par exemple dans l'exemple pr\u00e9c\u00e9dent:</p> <pre><code>&lt;h1 style=\"color: #FF0000;\"&gt;Une belle page web&lt;/h1&gt;\n&lt;p style=\"text-align: center;\"&gt;\n    Un texte tr\u00e8s &lt;strong&gt;int\u00e9ressant&lt;/strong&gt;.\n&lt;/p&gt;\n</code></pre> <p>Pour l'instant, cela fera l'affaire, mais c'est une tr\u00e8s mauvaise pratique, qu'on abandonnera d\u00e8s la section suivante...</p> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>Cr\u00e9er une page web, pr\u00e9sentant la biographie de la personnalit\u00e9 qui vous a \u00e9t\u00e9 attribu\u00e9e:</p> \u00c9l\u00e8ve Personnalit\u00e9 T\u00e9lio John Von Neumann Maxime Ada Lovelace L\u00e9a Dorothy Johnson Vaughan Al\u00e9a-Eddine George Boole Th\u00e9o Tim Berners-Lee Anis Linus Torvalds Lucas Aaron Swartz Younes Margaret Hamilton Maximilien Whitfield Diffie &amp; Martin Hellman Guillaume Hedy Lamarr Basit Guido Van Rossum Gaylord Steve Jobs Zachary Donald Knuth Nicolas Grace Hopper Sacha Larry Page &amp; Sergue\u00ef Brin <p>La page web devra comporter (a minima):</p> <ul> <li>le nom de la personne en titre (centr\u00e9);</li> <li>une image (centr\u00e9e);</li> <li>la biographie sous forme d'une liste non num\u00e9rot\u00e9e (unordered list);</li> <li>un lien vers vos sources, qui doit s'ouvrir dans un nouvel onglet.</li> </ul> <p>Exemple de rendu:</p> <p> </p>"},{"location":"T04_IHMWeb/T4.1_HTML_CSS/T4.1_HTML_CSS/#412-avec-css","title":"4.1.2 Avec CSS","text":"<p>L'acronyme CSS signifie Cascading Style Sheets. L'id\u00e9e est de regrouper dans un seul fichier toutes les informations relatives \u00e0 la mise en forme des \u00e9l\u00e9ments de la page html.</p> <p>De mani\u00e8re tr\u00e8s simplifi\u00e9e, on peut dire que le fichier <code>html</code> s'occupe du fond tandis que le fichier <code>css</code> s'occupe de la forme.</p> <p>Le fichier CSS (souvent nomm\u00e9 <code>style.css</code>) doit \u00eatre r\u00e9f\u00e9renc\u00e9 au d\u00e9but du fichier <code>html</code> , au sein de la balise <code>&lt;head&gt;</code> en y ajoutant cette ligne:</p> <pre><code>&lt;link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n</code></pre> <p>Un exemple</p> <p>Voici un extrait du fichier css utilis\u00e9 pour l'escape game d'introduction:</p> <pre><code>body                                /* note (1) */\n{\n    color : #FFFFFF;\n    background-color : #000000;\n    font-family : monospace;\n}\n\nh1                                  /* note (2) */\n{\n    text-align: center;\n    font-style : bold;\n    width : 60%;\n    font-size : 5em;\n    margin-left: auto;\n    margin-right: auto;\n}\n\na                                   /* note (3) */\n{\n    font-style : bold;\n    color : #C80903;\n}\n\n.cesar                              /* note (4) */\n{\n    margin-left: auto;\n    margin-right: auto;\n    width : 50%;\n    font-size: 4em;\n}\n</code></pre> <ol> <li>On d\u00e9finit le style par d\u00e9faut des pages (balise <code>&lt;body&gt;</code>): couleurs du texte et du fond, police de caract\u00e8re).</li> <li>On d\u00e9finit le sstyle des titres de niveau 1 (balise <code>&lt;h1&gt;</code>).</li> <li>On d\u00e9finit le style des liens (balise <code>&lt;a&gt;</code>).</li> <li>On d\u00e9finit le style de la classe <code>cesar</code>.</li> </ol> <p>Classes</p> <p>Dans l'exemple de code <code>css</code>    pr\u00e9c\u00e9dent, j'ai d\u00e9finit un style pour la <code>class</code> que j'ai appel\u00e9e <code>cesar</code>.</p> <p>En fait, <code>class</code> est un attribut que l'on peut attribuer \u00e0 une balise (<code>div</code>, <code>p</code>, <code>span</code>) pour lui appliquer le style correspondant.</p> <p>Ce que je fait dans la page <code>/true/level5.html</code>: </p> <pre><code>&lt;p class=\"cesar\"&gt;\n    Mh vxlv frqqxh srxu dyrlu uhdolvh oh suhplhu yhulwdeoh surjudpph lqirupdwltxh hw xq odqjdjh gh surjudppdwlrq sruwh prq suhqrp.\n&lt;/p&gt;\n</code></pre> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un fichier <code>css</code> contenant la mise en forme de votre page web. Celle-ci ne doit plus contenir de mise en forme en attributs de balises.</p> <p>Pour s'aider : https://openclassrooms.com/fr/courses/1603881-apprenez-a-creer-votre-site-web-avec-html5-et-css3/1605060-mettez-en-place-le-css </p>"},{"location":"T04_IHMWeb/T4.2_Interactions/T4.2_Js/","title":"T4.2 Interaction dans une page web - Utilisation de Javascript","text":"<p>Jusqu'\u00e0 pr\u00e9sent, la page web envoy\u00e9e par le serveur est :</p> <ol> <li>identique quel que soit le client;</li> <li>statique apr\u00e8s r\u00e9ception sur l'ordinateur du client.</li> </ol> <p> </p> <p>Le JavaScript va venir r\u00e9gler le probl\u00e8me n\u00b02 : il est possible de fabriquer une page sur laquelle le client va pouvoir agir localement, sans avoir \u00e0 redemander une nouvelle page au serveur.</p> <p>Invent\u00e9 en 1995 par Brendan Eich  pour le navigateur Netscape, le langage JavaScript s'est impos\u00e9 comme la norme aupr\u00e8s de tous les navigateurs pour apporter de l'interactivit\u00e9 aux pages web.</p> <p>Exemple minimal - scripts embarqu\u00e9s</p> <p>Dans le script suivant (\u00e0 copier-coller-enregistrer-visualiser), on introduit un objet <code>&lt;button&gt;</code> comportant un attribut <code>onclick</code> li\u00e9 \u00e0 un script d\u00e9clar\u00e9 dans le <code>&lt;head&gt;</code>.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;Un peu d'interaction&lt;/title&gt;\n        &lt;script&gt;\n            function changeCouleur(){\n                if (document.body.style.backgroundColor == 'green') {\n                    document.body.style.backgroundColor = 'red';\n                }\n                else {document.body.style.backgroundColor = 'green';}\n                document.getElementById(\"resultat\").innerHTML=document.body.style.backgroundColor;\n            }\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Une page web extr\u00eamement dynamique&lt;/h1&gt;\n\n        &lt;p&gt;\n            &lt;label&gt;Changez la couleur d'arri\u00e8re-plan:&lt;/label&gt;\n            &lt;button type=\"button\" onclick=\"changeCouleur();\"&gt;Clic !&lt;/button&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n        En JavaScript, le nom de la couleur choisie est :\n        &lt;span id=\"resultat\"&gt; blanc &lt;/p&gt;\n        &lt;/span&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <ol> <li>Modifier (en la simplifiant) le script <code>changeCouleur</code> pour qu'il prenne un param\u00e8tre <code>couleur</code> (comme en Python, \u00e0 l'int\u00e9rieur des parenth\u00e8ses) et qu'il l'attribue \u00e0 la couleur de fond. </li> <li>Ajouter plusieurs boutons avec des choix de couleurs pr\u00e9d\u00e9finies.</li> </ol> <p>Comme pour les styles et CSS, il est pr\u00e9f\u00e9rable de s\u00e9parer les scripts Javascript du code <code>html</code>. On pr\u00e9f\u00e8rera donc \u00e9crire le(s) script() dans un fichier <code>script.js</code> qu'on importe dans le <code>&lt;head&gt;</code> du document <code>html</code> ainsi:</p> <pre><code>&lt;script src=\"script.js\"&gt;&lt;/script&gt;\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>Cr\u00e9er un fichier <code>script.js</code> dans lequel vous copierez les scripts de l'exercice pr\u00e9c\u00e9dent. Actualiser \u00e9galement le document <code>html</code>.</p> <p>La puissance du JavaScript permet de r\u00e9aliser aujourd'hui des interfaces utilisateurs tr\u00e8s complexes au sein d'un navigateur, \u00e9quivalentes \u00e0 celles produites par des logiciels externes (pensez \u00e0 Discord, par ex.). Bien s\u00fbr, dans ces cas complexes, le serveur est aussi sollicit\u00e9 pour modifier la page.</p> <p>Pour en savoir plus</p> <ul> <li>le guide JavaScript de la fondation Mozilla : https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide </li> <li>le cours d'OpenClassrooms : https://openclassrooms.com/fr/courses/2984401-apprenez-a-coder-avec-javascript </li> </ul> <p>Exercice  3</p> \u00c9nonc\u00e9Partie 1 : HTMLPartie 2 : JavaScriptPartie 2 : CSS <p>L'objectif de cet exercice est de r\u00e9aliser une deuxi\u00e8me page web, qui contiendra le quiz \"Vrai/Faux\" que vous avez pr\u00e9par\u00e9 sur votre personnalit\u00e9 de l'Informatique.</p> <p>La premi\u00e8re page (la biographie) devra contenir un lien vers cette page-quiz, et r\u00e9ciproquement.</p> <p>Il faudra adapter et compl\u00e9ter les extraits de code donn\u00e9s dans les diff\u00e9rentes parties.</p> <p>Voici un exemple de code <code>html</code> pour une question du quiz:</p> <pre><code>&lt;div&gt;\n    &lt;p&gt;\n        &lt;strong&gt;Question 1: &lt;/strong&gt; HTML est un langage de programmation.\n    &lt;/p&gt;\n\n    &lt;p&gt;\n        &lt;strong&gt;R\u00e9ponse :&lt;/strong&gt;\n\n        Vrai &lt;input type=\"radio\" name=\"q1\" value=\"vrai\"&gt;\n        Faux &lt;input type=\"radio\" name=\"q1\" value=\"faux\"&gt;\n\n        &lt;span class=\"resultat\"&gt;\n\n        &lt;/span&gt;\n    &lt;/p&gt;\n&lt;/div&gt;\n</code></pre> <ul> <li> <p>on utilise des \u00e9l\u00e9ments <code>&lt;input&gt;</code>  pour r\u00e9cup\u00e9rer les r\u00e9ponses, sous forme de boutons radio. Ces deux \u00e9l\u00e9ments ont le m\u00eame attribut <code>name</code> pour pouvoir les identifier.</p> </li> <li> <p>on utilise un \u00e9l\u00e9ment <code>&lt;span&gt;</code> qui ne contient pas de texte pour l'instant: il contiendra plus tard la correction de la question, apr\u00e8s lancement du script de correction. Il poss\u00e8de un attribut <code>class</code> pour avoir acc\u00e8s \u00e0 tous les \u00e9l\u00e9ments identiques des questions du quiz.</p> </li> </ul> <p>\u00c0 faire: ins\u00e9rer ligne 11 un \u00e9l\u00e9ment <code>&lt;input&gt;</code> de type <code>button</code>. Lui ajouter un attribut <code>onClick</code> associ\u00e9 \u00e0 la fonction JavaScript <code>correction()</code>.</p> <p>Voici le script, \u00e0 copier dans un fichier <code>script.js</code>.</p> <pre><code>var questions = [\"q1\", \"q2\"];\nvar reponses = [\"faux\", \"vrai\"];\n\nfunction correction(numero) {\n    var radios = document.getElementsByName(questions[numero]);\n    for(var i = 0; i &lt; radios.length; i++){\n        if(radios[i].checked){\n            if(radios[i].value == reponses[numero]) {\n                document.getElementsByClassName(\"resultat\")[numero].innerHTML = \"Juste!\";\n            }\n            else {\n                document.getElementsByClassName(\"resultat\")[numero].innerHTML = \"Faux!\" ;\n            }\n        }\n    }\n}\n</code></pre> <ul> <li>On cr\u00e9e deux listes contenant l'une les attributs <code>name</code> des boutons radios et l'autre les r\u00e9ponses aux questions.</li> <li>On r\u00e9cup\u00e8re ensuite la liste des boutons radios par leur attribut <code>name</code>.</li> <li>On parcourt les boutons et s'ils sont s\u00e9lectionn\u00e9s (<code>checked</code>), on compare leur valeur aux r\u00e9ponses attendues, en actualisant les \u00e9l\u00e9ments de la <code>class</code> \"resultat\".</li> </ul> <p>\u00c0 faire: sauvegardez ce script dans un fichier <code>script.js</code> et importez le dans votre fichier <code>html</code>. Compl\u00e9ter correctement l'appel \u00e0 la fonction <code>correction</code> dans le bouton cr\u00e9\u00e9 pr\u00e9c\u00e9demment.</p> <p>Ouverture: modifier les fichiers <code>html</code> et <code>js</code> pour ne plus avoir qu'un seul bouton qui corrige toutes les questions.</p> <p>Faites-vous plaisir.</p>"},{"location":"T04_IHMWeb/T4.3_HTTP/T4.3_HTTP/","title":"T4.3 Protocole HTTP","text":""},{"location":"T04_IHMWeb/T4.3_HTTP/T4.3_HTTP/#431-le-protocole-http-des-requetes-et-des-reponses","title":"4.3.1 Le protocole HTTP : des requ\u00eates et des r\u00e9ponses","text":"<p>HTTP (HyperText Transfer Protocol) est le protocole qui r\u00e9git la communication entre :  </p> <ul> <li>le client (la machine de l'utilisateur qui souhaite obtenir une page web). On dit que le client effectue une requ\u00eate.  </li> <li>le serveur (la machine sur laquelle sont stock\u00e9s les fichiers n\u00e9cessaires \u00e0 l'affichage de cette page web). Le serveur va renvoyer une r\u00e9ponse.</li> </ul> <p></p>"},{"location":"T04_IHMWeb/T4.3_HTTP/T4.3_HTTP/#432-deroule-dune-requete","title":"4.3.2 D\u00e9roul\u00e9 d'une requ\u00eate","text":"<p>Prenons pour exemple la requ\u00eate d'un navigateur vers la page : http://lyceevalois.com/nsi/bellepage.html </p> <ul> <li> <p>le navigateur analyse l'url : la demande concerne la page <code>nsi/bellepage.html</code> (c'est-\u00e0-dire le fichier <code>bellepage.html</code> du r\u00e9pertoire <code>nsi/</code>), stock\u00e9e sur le serveur <code>lyceevalois.com</code>.  </p> <p> </p> </li> <li> <p>une demande est pr\u00e9alablement effectu\u00e9e aupr\u00e8s du serveur DNS pour obtenir l'adresse IP du serveur <code>lyceevalois.com</code>. Ici, l'adresse IP sera <code>2001:41d0:1:1b00:213:186:33:4</code> (au format Ipv6, on la retrouvera dans la capture de la fen\u00eatre d'Outils de dev\u00e9loppement).</p> </li> <li>la requ\u00eate est effectu\u00e9e sur le port 80 de l'adresse <code>2001:41d0:1:1b00:213:186:33:4</code>.</li> <li>la r\u00e9ponse est envoy\u00e9e au navigateur, qui en extrait la charge utile et proc\u00e8de \u00e0 l'affichage de la page.</li> </ul> <p>Adresse IP</p> <p>L'adresse IP donn\u00e9e ci-dessus ne sera peut-\u00eatre pas la m\u00eame lorsque vous essaierez chez vous. Cela d\u00e9pend de l'h\u00e9bergeur.</p>"},{"location":"T04_IHMWeb/T4.3_HTTP/T4.3_HTTP/#433-analyse-dune-requete","title":"4.3.3 Analyse d'une requ\u00eate","text":"<p>Avec un navigateur</p> <ul> <li>Ouvrir le lien pr\u00e9c\u00e9dent (http://lyceevalois.com/nsi/bellepage.html ) avec Firefox, puis ouvrir les \u00abOutils de d\u00e9veloppement\u00bb (clic droit sur la page web puis \u00abInspecter\u00bb, ou <code>Ctrl+Maj+I</code>).</li> <li>S\u00e9lectionner l'onglet \u00abR\u00e9seau\u00bb, puis cliquer sur la premi\u00e8re ligne, vous devez obtenir ceci (ou \u00e0 peu pr\u00e8s):</li> </ul> <p> </p> <p>Observons \u00e0 partir de l'Inspecteur d'\u00e9l\u00e9ment d'un navigateur (ici Firefox) les informations qui transitent lors de la requ\u00eate et de la r\u00e9ponse.</p> URL et m\u00e9thode GETStructure de la r\u00e9ponseRemarque <p>La requ\u00eate de type GET vers l'url <code>http://lyceevalois.com/nsi/bellepage.html</code> a g\u00e9n\u00e9r\u00e9 un code de r\u00e9ponse 200 OK, ce qui signifie que la requ\u00eate a \u00e9t\u00e9 trait\u00e9e et que la r\u00e9ponse contenant la page a \u00e9t\u00e9 envoy\u00e9e.</p> <p>On peut trouver \u00e0 l'adresse https://developer.mozilla.org/fr/docs/Web/HTTP/Status la totalit\u00e9 des codes de r\u00e9ponse possibles. </p> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <ol> <li>En \u00abd\u00e9roulant\u00bb le GET dans la partie En-t\u00eates \u00e0 droite, r\u00e9cup\u00e9rer l'adresse IP consult\u00e9e.</li> <li>Donner la signification des codes r\u00e9ponses 304, 403, 404, 500.</li> </ol> <p>En observant la taille totale des donn\u00e9es transf\u00e9r\u00e9es (326 octets), on peut comprendre que la r\u00e9ponse faite par le serveur est constitu\u00e9e :</p> <ul> <li>d'un en-t\u00eate (326 octets) qui contient : <pre><code>HTTP/1.1 200 OK\ndate: Sun, 05 Jun 2022 15:29:46 GMT\ncontent-type: text/html\ncontent-length: 114\nserver: Apache\naccept-ranges: none\nvary: Accept-Encoding\ncontent-encoding: gzip\nx-iplb-request-id: 2A010E0A014961907C271B558D29C44A:CDC4_200141D000011B000213018600330004:0050_629CCBE4_09CC:1CBC3\nx-iplb-instance: 31974\n</code></pre></li> <li>du corps de la r\u00e9ponse (dont on sait d'apr\u00e8s l'en-t\u00eate qu'il p\u00e8se 114 octets). Ce corps de la r\u00e9ponse est la charge utile de la r\u00e9ponse. Elle contient ici le code html de la page (voir onglet \u00abR\u00e9ponse\u00bb, et cocher le bouton \u00abBrut\u00bb): <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Waouh&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\nCeci est vraiment une jolie page web.\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></li> </ul> <p>On peut observer que le navigateur a aussi effectu\u00e9 (de sa propre initiative) une requ\u00eate vers un fichier <code>favicon.ico</code> qui est l'icone de la page web dans les onglets du navigateur ou la barre de favoris. Ce fichier n'a pas \u00e9t\u00e9 trouv\u00e9 sur le serveur d'o\u00f9 la r\u00e9ponse 404.</p> <p>De mani\u00e8re g\u00e9n\u00e9rale, une requ\u00eate vers un site web moins \u00e9l\u00e9mentaire va occasionner une multitude de r\u00e9ponses (essayer avec le site web de votre choix).</p> <p>Avec Python</p> <p>On peut effectuer des requ\u00eates HTTP avec le module <code>requests</code> (l'installer si besoin en ouvrant la console du syst\u00e8me avec Thonny, puis taper <code>pip install requests</code>). Par exemple, ex\u00e9cuter le code suivant:</p> <pre><code>import requests\nr = requests.get('http://lyceevalois.com/nsi/bellepage.html')\n</code></pre> <p>On peut r\u00e9cup\u00e9rer alors les informations pr\u00e9c\u00e9dentes en consultant dans le terminal:</p> <pre><code>&gt;&gt;&gt; r\n...\n&gt;&gt;&gt; r.headers\n{'date': 'Sun, 05 Jun 2022 16:26:27 GMT', 'content-type': 'text/html', 'content-length': '114', 'server': 'Apache', 'accept-ranges': 'bytes', 'vary': 'Accept-Encoding', 'content-encoding': 'gzip', 'x-iplb-request-id': '2A010E0A014961907C271B558D29C44A:D110_200141D000011B000213018600330004:0050_629CD934_10A81:D667', 'x-iplb-instance': '31965'}\n&gt;&gt;&gt; r.content\nb'&lt;!DOCTYPE html&gt;\\n&lt;html&gt;\\n&lt;head&gt;\\n&lt;title&gt;Waouh&lt;/title&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\nCeci est vraiment une jolie page web.\\n&lt;/body&gt;\\n&lt;/html&gt;\\n'\n&gt;&gt;&gt; r.text\n...\n</code></pre>"},{"location":"T04_IHMWeb/T4.4_RequetesFormulaire/T4.4_Get_post/","title":"T4.4 Formulaires, m\u00e9thodes GET et POST","text":""},{"location":"T04_IHMWeb/T4.4_RequetesFormulaire/T4.4_Get_post/#441-pages-web-dynamiques","title":"4.4.1 Pages web dynamiques","text":"<p>Jusqu'\u00e0 pr\u00e9sent, toutes les pages que nous avons \u00e9tudi\u00e9es ou cr\u00e9\u00e9es (avec ou sans Javascript)  sont uniform\u00e9ment envoy\u00e9es par le serveur au client. Aucune \u00abpr\u00e9paration\u00bb de la page en amont n'a lieu sur le serveur, aucun dialogue n'a lieu avec le serveur une fois que la page a \u00e9t\u00e9 livr\u00e9e. \u00c9videmment, si le web \u00e9tait comme ceci, il ne serait qu'une gigantesque biblioth\u00e8que en consultation seule (ce fut le cas pendant longtemps, et ce qui n'\u00e9tait d\u00e9j\u00e0 pas si mal).</p> <p>Les langages serveurs, parmi lesquels PHP (pr\u00e9sent sur environ 80% des serveurs), Python (via le framework Django), Java, Ruby, C#, permettent de rajouter de l'interactivit\u00e9 c\u00f4t\u00e9 serveur.</p> <p>Pages c\u00f4t\u00e9 serveur</p> Page statiquePage dynamique <p>Lors d'une requ\u00eate d'un client vers un serveur, si le client demande la page <code>bellepage.html</code>, une copie exacte du fichier <code>bellepage.html</code> est transmise au client sur sa machine. </p> <p>Une page web peut \u00eatre \u00abfabriqu\u00e9e\u00bb \u00e0 la demande pour le client, \u00e0 l'aide d'un langage comme PHP par exemple.</p> <p> </p> <p>Par exemple, voici le contenu de la page http://lyceevalois.com/nsi/form_cg/date.php:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\" /&gt;\n        &lt;title&gt;Quel jour sommes-nous&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;p&gt;\n    &lt;?php\n    $date = date(\"d-m-Y\");\n    $heure = date(\"h \\h i \\m s \\s\");\n    Print(\"Nous sommes le $date et il est $heure.\");\n    ?&gt;\n    &lt;/p&gt;\n    &lt;br&gt;\n    &lt;p&gt;\n    &lt;?php\n      function getIp(){\n        if(!empty($_SERVER['HTTP_CLIENT_IP'])){\n          $ip = $_SERVER['HTTP_CLIENT_IP'];\n        }elseif(!empty($_SERVER['HTTP_X_FORWARDED_FOR'])){\n          $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];\n        }else{\n          $ip = $_SERVER['REMOTE_ADDR'];\n        }\n        return $ip;\n      }\n\n      echo 'Votre adresse IP est : '.getIp();\n    ?&gt;\n    &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <ol> <li>Consulter cette page en cliquant sur le lien.</li> <li>Afficher le code source de la page et le comparer au code <code>php</code> pr\u00e9c\u00e9dent. Qu'a produit la balise <code>&lt;?php?&gt;</code> ?</li> </ol>"},{"location":"T04_IHMWeb/T4.4_RequetesFormulaire/T4.4_Get_post/#442-formulaires","title":"4.4.2 Formulaires","text":"<p>Un formulaire HTML est cr\u00e9\u00e9 \u00e0 l'aide de la balise <code>&lt;form&gt;</code> et contient des champs de saisie appel\u00e9s <code>&lt;input&gt;</code> de diff\u00e9rents types (cf. le quiz cr\u00e9\u00e9 en T4.2).</p> <p>Les param\u00e8tres du formulaire peuvent alors \u00eatre transmis via le protocole HTTP par deux m\u00e9thodes: la m\u00e9thode GET ou la m\u00e9thode POST.</p> <p>M\u00e9thode GET</p> <p>Voici un exemple de formulaire, inclus dans une page html ouverte dans le navigateur du client (voir un aper\u00e7u dans le lien donn\u00e9 \u00e0 l'exercice suivant):</p> <pre><code>Le mot de passe est :\n&lt;form action=\"cible.php\" method=\"get\"&gt;\n&lt;p&gt;\n    &lt;input type=\"password\" name=\"pass\" /&gt; \n    &lt;input type=\"submit\" value=\"Valider\" /&gt;\n&lt;/p&gt;\n&lt;/form&gt;\n</code></pre> <p>Description:</p> <ul> <li>le fichier <code>cible.php</code> est le fichier sur le serveur qui recevra les param\u00e8tres contenus dans le formulaire.</li> <li>le param\u00e8tre sera nomm\u00e9 <code>pass</code> et sera de type <code>password</code>, ce qui signifie qu'on n'affichera pas les caract\u00e8res tap\u00e9s par l'utilisateur. On aurait pu aussi avoir un type :<ul> <li><code>text</code> : le texte s'affiche en clair (pour les login par ex) </li> <li><code>radio</code> : pour une s\u00e9lection (d'un seul \u00e9l\u00e9ment)</li> <li><code>checkbox</code> : pour une s\u00e9lection (\u00e9ventuellement multiple)</li> </ul> </li> <li>un bouton comportant le label \u00abValider\u00bb d\u00e9clenchera l'envoi (gr\u00e2ce au type particulier <code>submit</code>) des param\u00e8tres (ici un seul, la variable <code>pass</code>) au serveur.</li> </ul> <p>Exercice  3: m\u00e9thode GET et confidentialit\u00e9</p> \u00c9nonc\u00e9Correction <ol> <li>Aller \u00e0 l'adresse http://lyceevalois.com/nsi/form_cg/test_get.html et tester un mot de passe.</li> <li>Observer attentivement l'url de la page obtenue. Que remarque-t-on ?</li> </ol> <p>M\u00e9thode POST</p> <p>Dans le code du formulaire pr\u00e9c\u00e9dent, on modifie l'attribut <code>method</code>, auparavant \u00e9gal \u00e0 <code>\"get\"</code> et le changeant par<code>\"post\"</code>  :</p> <pre><code>Le mot de passe est :\n&lt;form action=\"cible.php\" method=\"post\"&gt;\n&lt;p&gt;\n    &lt;input type=\"password\" name=\"pass\" /&gt; \n    &lt;input type=\"submit\" value=\"Valider\" /&gt;\n&lt;/p&gt;\n&lt;/form&gt;\n</code></pre> <p>Exercice  4: m\u00e9thode POST et confidentialit\u00e9</p> \u00c9nonc\u00e9Correction <ol> <li>Aller \u00e0 l'adresse http://lyceevalois.com/nsi/form_cg/test_post.html et tester un mot de passe.</li> <li>Observer attentivement l'url de la page obtenue. Que remarque-t-on ?</li> <li>Inspecter la page et retrouver le mot de passe que vous avez saisi.</li> </ol> <p>En r\u00e9sum\u00e9 : quand utiliser GET ou POST ?</p> <ul> <li> <p>GET : la m\u00e9thode GET doit \u00eatre utilis\u00e9e quand les param\u00e8tres \u00e0 envoyer :</p> <ul> <li>n'ont pas de caract\u00e8re confidentiel. </li> <li>n'ont pas vocation \u00e0 cr\u00e9er des modifications sur le serveur (ceci est plus une bonne pratique qu'une interdiction technique)</li> <li>ne sont pas trop longs. En effet, vu qu'ils seront contenus dans l'url, il peut exister des limites de longueur sp\u00e9cifiques au navigateur. Une taille inf\u00e9rieure \u00e0 2000 caract\u00e8res est conseill\u00e9e.</li> </ul> </li> <li> <p>POST : la m\u00e9thode POST doit \u00eatre utilis\u00e9e quand les param\u00e8tres \u00e0 envoyer :</p> <ul> <li>ont un caract\u00e8re confidentiel (attention, \u00e0 coupler imp\u00e9rativement avec un protocole de chiffrement).</li> <li>peuvent avoir une longueur tr\u00e8s importante (le param\u00e8tre \u00e9tant dans le corps de la requ\u00eate et non plus dans l'url, sa longueur peut \u00eatre arbitraire).</li> <li> <p>ont vocation \u00e0 provoquer des changements sur le serveur. Ainsi, un ordre d'achat sur un site de commerce sera n\u00e9cessairement pass\u00e9 par une m\u00e9thode POST. Les navigateurs pr\u00e9viennent alors le risque de \u00abdouble commande\u00bb lors d'une actualisation malencontreuse de la page par l'utilisateur par la fen\u00eatre :</p> <p></p> <p>Cette fen\u00eatre est caract\u00e9ristique de l'utilisation d'une m\u00e9thode POST.</p> </li> </ul> </li> </ul>"},{"location":"T04_IHMWeb/T4.4_RequetesFormulaire/T4.4_Get_post/#443-challenge-facultatif","title":"4.4.3 Challenge  (facultatif)","text":"<p>Au chapitre pr\u00e9c\u00e9dent (T4.3 Avec Python), on a vu comment effectuer une requ\u00eate par m\u00e9thode GET. L'objectif de cette partie est de trouver le mot de passe demand\u00e9 sur la page pr\u00e9c\u00e9dente par brute force.</p> <p> </p> <p>Le principe est simple:</p> <ul> <li>on effectue une premi\u00e8re requ\u00eate dont on sait que le mot de passe est erron\u00e9 pour r\u00e9cup\u00e9rer le <code>text</code> (voir T4.3 Avec Python) de la page correspondante \u00e0 un mauvais mot de passe;</li> <li>on recommence en testant tous les mots de passe d'une liste de mots de passe jusqu'\u00e0 ce que le <code>text</code> ne soit pas celui m\u00e9moris\u00e9 \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente.</li> </ul> <p>Pour cela on a donc besoin d'une liste de mots de passe. On pourra utiliser celle-ci qui est un extrait du leak du site Rockyou en 2009 et dont le mot de passe \u00e0 trouver fait partie.</p> <p>Pour lire et charger dans une liste le contenu d'un fichier texte, voir ici.</p>"},{"location":"T05_Architectures/accueil/","title":"Architectures mat\u00e9rielles et syst\u00e8mes d'exploitation","text":"<p>Les circuits \u00e9lectroniques sont au c\u0153ur de toutes les machines informatiques. Les r\u00e9seaux permettent de transmettre l\u2019information entre machines. Les syst\u00e8mes d\u2019exploitation g\u00e8rent et optimisent l\u2019ensemble des fonctions de la machine, de l\u2019ex\u00e9cution des programmes aux entr\u00e9es-sorties et \u00e0 la gestion d\u2019\u00e9nergie.</p> <p> </p>"},{"location":"T05_Architectures/T5.1_VonNeumann/T5.1_VonNeumann/","title":"T5.1 Architecture de Von Neumann","text":"<p>Mini-projet</p> <p>L'objectif de ce mini-projet est de vous faire d\u00e9couvrir (par vous-m\u00eame):</p> <ul> <li>les principaux composants mat\u00e9riels d'un ordinateur ;</li> <li>le principe de l'architecture de Von Neumann qui est le principal mod\u00e8le de construction des ordinateurs;</li> <li>en quoi consiste un syst\u00e8me d'exploitation (souvent abr\u00e9g\u00e9 OS comme Operating System).</li> </ul> <p>Rendu du travail</p> <p>Vous devrez rendre sur Moodle une archive <code>zip</code> contenant les fichiers (<code>html</code>, <code>css</code>, images...) d'un mini site web comportant:</p> <ul> <li>une page d'accueil avec des liens vers chaque partie;</li> <li>une page par composant;</li> <li>une page sur l'architecture de von Neumann;</li> <li>une page sur le r\u00f4le du syst\u00e8me d'exploitation et quelques exemples des OS les plus r\u00e9pandus;</li> <li>une page comportant un quiz sur le contenu du site.</li> </ul> <p>Grille d'\u00e9valuation:</p> Contenu Points Contenu des pages sur les composants 10 Navigation, site complet 2 CSS et JS s\u00e9par\u00e9s 2 Quiz 4 Code sans erreurs 2 Total 20 <p> </p> <p>Consignes</p> <p>En travaillant par groupe de 2/3 \u00e9l\u00e8ves:</p> \u00c9tape 1\u00c9tape 2\u00c9tape 3\u00c9tape 4 <p>D\u00e9monter l'ordinateur fourni (attention, il faudra le remonter...) et identifier les composants suivants (prendre des photos):</p> <ul> <li>la carte m\u00e8re</li> <li>la RAM</li> <li>le disque dur</li> <li>le micro-processeur</li> <li>la carte graphique</li> </ul> <p>Remonter les composants...</p> <p>Se r\u00e9partir au sein du groupe les composants et faire des recherches sur le web sur ces composants.</p> <p>Se r\u00e9partir \u00e9galement les autres pages, ainsi que la r\u00e9alisation d'un fichier <code>css</code>.</p> <p>Construire le site web.</p>"},{"location":"T05_Architectures/T5.2_UNIX/T5.2_Commandes_UNIX/","title":"T5.2 OS et commandes UNIX","text":""},{"location":"T05_Architectures/T5.2_UNIX/T5.2_Commandes_UNIX/#521-systeme-dexploitation","title":"5.2.1 Syst\u00e8me d'exploitation","text":"<p>Le syst\u00e8me d\u2019exploitation (OS) est le logiciel syst\u00e8me qui g\u00e8re l'ordinateur, en jouant un r\u00f4le d\u2019interm\u00e9diaire entre les programmes, les \u00e9l\u00e9ments mat\u00e9riels de l\u2019ordinateur (notamment la m\u00e9moire) ainsi que les p\u00e9riph\u00e9riques d'entr\u00e9e/sortie. C\u2019est le premier programme ex\u00e9cut\u00e9 au d\u00e9marrage de la machine, et c\u2019est le seul qui reste en permanence en ex\u00e9cution.</p> <p> </p> <p>La partie de l'OS qui g\u00e8re la communication avec les \u00e9l\u00e9ments mat\u00e9riels s'appelle  le noyau (kernel).</p> <p>Outre le noyau, l'OS comporte des applications, une interface graphique, la gestion des fichiers, le terminal...</p> <p>Historiquement, les premiers syst\u00e8mes d\u2019exploitation ne disposaient pas d\u2019interface graphique. D\u2019ailleurs, \u00e0 cette \u00e9poque, la souris n\u2019existait m\u00eame pas. On interagissait donc avec le syst\u00e8me essentiellement par \u00e9change de texte. L\u2019\u00e9cran servait \u00e0 recevoir les infor- mations fournies par le syst\u00e8me sous forme de phrase, d\u2019affichage de valeur ou de tableau textuel. Aujourd\u2019hui, m\u00eame si les interfaces graphiques modernes permettent d\u2019effectuer la plupart des op\u00e9rations, il est important de connaitre quelques-unes de ces lignes de commandes qui se saisissent dans un (\u00e9mulateur de) terminal, qui lance un shell par d\u00e9faut.</p> <p>Vocabulaire</p> TerminalShellCommande <p> </p> <p>L'\u00e9mulateur de terminal (souvent appel\u00e9 terminal tout court) est un programme qui s'ex\u00e9cute dans le gestionnaire de fen\u00eatre. Il sert \u00e0 ex\u00e9cuter des programmes en mode texte, c'est-\u00e0-dire o\u00f9 toute l'interaction avec l'utilisateur se fait avec l'\u00e9cran (pour afficher du texte) et le clavier (pour lire du texte). </p> <p>Par d\u00e9faut le terminal ex\u00e9cute un shell.</p> <p>Il existe de nombreux \u00e9mulateurs de terminaux sous Unix: xterm, rxvt-unicode, LXTerminal, gnome-terminal, konsole, xfce4-terminal...</p> <p>Le shell (aussi appel\u00e9 invite de commande ou interpr\u00e9teur de commandes) est un programme avec une interface en mode texte. Le shell affiche un prompt (repr\u00e9sent\u00e9 par le symbole $) et lit les commandes tap\u00e9es par l'utilisateur. Ces commandes permettent d'effectuer des t\u00e2ches courantes sur les fichiers et r\u00e9pertoires, de lancer d'autres programmes, etc. Le shell offre aussi un langage permettant d'effectuer des t\u00e2che conditionnelles et / ou r\u00e9p\u00e9titive \u00e0 l'aide de structures de controle (conditionnelles, boucles for et while, etc.) Les suites de commandes que l'on souhaite r\u00e9utiliser peuvent \u00eatre sauvegard\u00e9es dans un fichier appel\u00e9 script.</p> <p>Il existe de nombreux shell sous Unix. Les plus utilis\u00e9s dans le monde Linux sont bash et zsh.</p> <p>Une commande est en g\u00e9n\u00e9ral un petit programme externe lanc\u00e9 par le shell. Par exemple, la commande <code>ls</code> permet d'afficher la liste des fichiers contenus dans le r\u00e9pertoire courant. Il est \u00e9galement possible d'ex\u00e9cuter des programmes tr\u00e8s complexes (comme un traitement de texte ou un navigateur internet), mais cela est rarement fait depuis le shell.</p> <p>Principalement, les commandes servent \u00e0 lancer des petits programmes ou \u00e0 travailler sur les fichiers et les r\u00e9pertoires. Dans les syst\u00e8mes de type \"UNIX\" (par exemple GNU/Linux ou macOS), nous avons un syst\u00e8me de fichier en arborescence : </p> <p> </p> <p>Repertoire courant et chemins</p> <p>On parle de chemin dans une arborescence de fichiers lorsqu'on veut changer de r\u00e9pertoire ou faire une r\u00e9f\u00e9rence vers un fichier qui ne se situe pas dans le m\u00eame r\u00e9pertoire que celui o\u00f9 \u00abon travaille\u00bb.</p> R\u00e9pertoire courantChemin absoluChemin relatif <p>Le r\u00e9pertoire courant est celui o\u00f9 on se situe, c'est-\u00e0-dire celui o\u00f9 l'on se trouve lors d'une navigation dans l'arborescence de fichiers ou bien celui dans lequel on est en train de travailler sur un fichier (python, html, document texte, etc.) \u00e0 travers un logiciel.</p> <p>Par exemple, si Elsa d\u00e9cide de suivre le TP sur l'image dans un fichier <code>images.py</code> qu'elle enregistrera dans le r\u00e9pertoire <code>boulot</code> avec Thonny, le r\u00e9pertoire courant pour Thonny sera <code>boulot</code>. Il est alors imp\u00e9ratif d'enregistrer le fichier <code>ada.png</code> dans ce r\u00e9pertoire pour pouvoir l'importer avec <code>imageio.imread('ada.png')</code> par exemple.</p> <p>Le chemin absolu d'un fichier est son chemin complet depuis la racine <code>/</code>. </p> <p>Par exemple le chemin absolu du fichier <code>fiche.ods</code> dans l'illustration pr\u00e9c\u00e9dente est <code>/home/elsa/documents/fiche.ods</code>.</p> <p>Le chemin relatif d'un fichier est son chemin depuis le r\u00e9pertoire courant.</p> <p>On indique qu'on \u00abremonte\u00bb d'un r\u00e9pertoire avec <code>..</code>.</p> <p>Par exemple, si le r\u00e9pertoire courant est <code>ski</code>, le chemin relatif du fichier <code>photo_1.jpg</code> est <code>../photos_vac/photo_1.jpg</code>.</p> <p>Si par m\u00e9garde Elsa a enregistr\u00e9 le fichier <code>ada.png</code> dans le r\u00e9pertoire <code>elsa</code>, il faudra l'importer avec <code>imageio.imread('../../ada.png')</code> .</p>"},{"location":"T05_Architectures/T5.2_UNIX/T5.2_Commandes_UNIX/#522-commandes","title":"5.2.2 Commandes","text":"<p>Pour d\u00e9couvrir un certain nombre de commandes UNIX, parmi les plus courantes, nous allons jouer \u00e0 un jeu:</p> <p> </p> <p>Travail \u00e0 faire</p> <p>En jouant \u00e0 Terminus: </p> <ul> <li>noter au fur et \u00e0 mesure les commandes d\u00e9couvertes, \u00e0 quoi elles servent et comment on les utilise (tableau conseill\u00e9):</li> </ul> Nom de la commande Description Utilisation <code>ls</code> Lister les \u00e9l\u00e9ments du dossier Saisir <code>ls</code> puis Entr\u00e9e <ul> <li>faire un plan du jeu sous forme d'une arborescence, par exemple:</li> </ul> <p> </p>"},{"location":"T05_Architectures/T5.2_UNIX/T5.2_Commandes_UNIX/#523-complements-sur-les-commandes","title":"5.2.3 Compl\u00e9ments sur les commandes","text":"<p>Prenons l'exemple de l'arborescence du dossier <code>/home/jeanmichel/</code> de l'ordinateur personnel de Jean-Michel B.:</p> <pre><code>.\n+-- Travail\n|   +-- reforme\n        +-- projet_flou.odt\n|   +-- HTML\n|   |   +-- images\n|   |   |   +-- toto.png\n|   |   |   +-- tata.png\n|   |   |   +-- tutu.png\n|   |   +-- styles\n|   |   |   +-- style.css\n|   |   +-- scripts\n|   |   |   +-- script.js\n|   |   +-- index.html\n|   |   +-- page1.html\n|   |   +-- page2.html\n+-- Photos\n|   +-- Ibiza\n|   |   +-- reveillon.png    \n</code></pre> <p>Chemins</p> <p>On a vu la commande <code>cd</code> qui permet de changer de r\u00e9pertoire (dossier). Par exemple, pour aller dans le r\u00e9pertoire <code>images</code> depuis la racine, on peut taper successivement: <pre><code>~$ cd Travail/\n~/Travail$\u00a0cd HTML/\n~/Travail/HTML$ cd images/\n~/Travail/HTML/images$\n</code></pre></p> <p>On peut plus rapidement pr\u00e9ciser le chemin relatif: <pre><code>~$ cd Travail/HTML/images/\n~/Travail/HTML/images$\n</code></pre></p> <p>Pour revenir \u00e0 la racine <code>/home/jeanmichel/</code>, on peut taper successivement 3 fois la commande <code>cd ..</code>, ou bien plus rapidement: <pre><code>~/Travail/HTML/images$ cd ../../../\n~$\n</code></pre></p> <p>Et pour aller du r\u00e9pertoire <code>images</code> au r\u00e9pertoire <code>scripts</code>, on utilisera le chemin relatif: <pre><code>~/Travail/HTML/images$ cd ../scripts/\n~/Travail/HTML/scripts$\n</code></pre></p> <p>Ou bien le chemin absolu (mais c'est plus long...): <pre><code>~/Travail/HTML/images$ cd /home/jeanmichel/Travail/HTML/scripts/\n~/Travail/HTML/scripts$\n</code></pre></p> <p>Options et arguments</p> OptionsArguments <p>On peut ajouter aux commandes UNIX une ou plusieurs options, qui s'\u00e9crivent soit:</p> <ul> <li>avec une lettre pr\u00e9c\u00e9d\u00e9e d'un tiret;</li> <li>avec un mot-cl\u00e9 pr\u00e9c\u00e9d\u00e9 de 2 tirets.</li> </ul> Exemple avec <code>ls</code>Exemple avec <code>rm</code> <p>Tester par exemple dans un de vos r\u00e9pertoires les commandes suivantes: <pre><code>$ ls\n$ ls -l\n$ ls -l -h \n</code></pre></p> <p>Attention, l'usage de <code>rm</code> est dangereux, soyez attentif !</p> <p>La commande <code>rm</code> permet de supprimer d\u00e9finitivement un fichier, il n'y a pas de corbeille dans le shell! Mais pas un r\u00e9pertoire non vide. </p> <p>Pour effacer tous les fichiers d'un r\u00e9pertoire: <pre><code>$ rm *\n</code></pre></p> <p>Et pour supprimer tout le contenu d'un r\u00e9pertoire, y compris les sous-r\u00e9pertoires, on utilise l'option <code>-r</code>: <pre><code>$ rm -r *\n</code></pre></p> <p>On peut parfois pr\u00e9ciser plusieurs arguments \u00e0 une commande pour ne pas r\u00e9p\u00e9ter plusieurs fois son utilisation. Par exemple pour cr\u00e9er deux r\u00e9pertoires <code>images/</code> et <code>data/</code>   en m\u00eame temps dans le r\u00e9pertoire courant: <pre><code>$ mkdir images/ data/\n</code></pre> Et trois fichiers <code>toto.txt</code>,  <code>tata.txt</code> et  <code>tutu.txt</code>: <pre><code>$ touch toto.txt tata.txt tutu.txt\n</code></pre></p> <p>\u00c0 propos de <code>grep</code></p> <p>Comme vu dans l'activit\u00e9 \u00abTerminus\u00bb, la commance <code>grep</code> permet de rechercher une cha\u00eene de caract\u00e9res dans un fichier. La syntaxe g\u00e9n\u00e9rale est: <pre><code>$ grep options \"recherche\" chemin\n</code></pre> Voici quelques options utiles:</p> <ul> <li><code>--ignore-case</code> ou <code>-i</code> : pour ignorer la casse (minuscules/majuscules indiff\u00e9rentes);</li> <li><code>-c</code> : pour afficher seulement le nombre d'occurences de la recherche;</li> <li><code>-l</code> : pour afficher le nom des fichiers contenant la recherche (<code>chemin</code> est alors un r\u00e9pertoire);</li> <li><code>-r</code> : pour rechercher dans tous les fichiers et sous-r\u00e9pertoires de <code>chemin</code>, qui est un r\u00e9pertoire.</li> </ul> <p>Pour rechercher dans plusieurs fichiers (comme dans l'activit\u00e9 Terminus) on peut utiliser <code>*</code> qui remplace n'importe quel mot. Par exemple, pour rechercher <code>'password'</code> dans tous les fichiers <code>txt</code> de l'activit\u00e9, on aurait pu taper: <pre><code>$ grep 'password' *.txt\n</code></pre></p>"},{"location":"T05_Architectures/T5.2_UNIX/T5.2_Commandes_UNIX/#524-utilisateurs-et-droits","title":"5.2.4 Utilisateurs et droits","text":"<p>Un syst\u00e8me UNIX est un syst\u00e8me multi-utilisateur. Toute personne physique ou tout programme interagissant avec le syst\u00e8me est un utilisateur (user). Cet utilisateur est authentifi\u00e9 sur le syst\u00e8me par un nom unique et un identifiant unique (UID). Chaque utilisateur poss\u00e8de certains droits lui permettant d'effectuer certaines op\u00e9rations et pas d'autres (avoir acc\u00e8s aux r\u00e9pertoires et fichiers, aux p\u00e9riph\u00e9riques, installer des logiciels...).</p> <p>Pour conna\u00eetre les utilisateurs de votre syst\u00e8me, on consulte le fichier <code>/etc/passwd</code> (faites-le) o\u00f9 on trouve tous les utilisateurs au format:</p> <pre><code>nom:motdepasse:UID:GID:informations:repertoire:shell\n</code></pre> <p>Chaque utilisateur appartient \u00e0 un ou plusieurs groupes, qui servent \u00e0 ressembler plusieurs utilisateurs pour leur attribuer des droits (permissions d'acc\u00e8s) communs aux fichiers ou applications.</p> <p>Pour conna\u00eetre les utilisateurs de votre syst\u00e8me, on consulte le fichier <code>/etc/group</code> (faites-le).</p> <p> </p> <p>Parmi les utilisateurs, il y a un super-utilisateur appel\u00e9 <code>root</code> qui a tous les pouvoirs sur le syst\u00e8me. Son UID est 0. Pour ex\u00e9cuter une commande r\u00e9serv\u00e9e au super-utilisateur, un utilisateur doit utiliser la commande <code>sudo</code> (super user do) qui n\u00e9cessite de conna\u00eetre le mot de passe root qui en g\u00e9n\u00e9ral n'est connu que de l'administrateur du syst\u00e8me.</p> <p>En particulier le super-utilisateur peut modifier les droits (en attribuer ou en retirer) des utilisateurs et des groupes.</p> <p>Les types de droits <code>r-w-x</code></p> <ul> <li>les droits en lecture (symbolis\u00e9s par la lettre <code>r</code>) : il est possible de lire le contenu de ce fichier</li> <li>les droits en \u00e9criture (symbolis\u00e9s par la lettre <code>w</code>) : il est  possible de modifier le contenu de ce fichier</li> <li>les droits en ex\u00e9cution (symbolis\u00e9s par la lettre <code>x</code>) : il est possible d'ex\u00e9cuter le contenu de ce fichier (quand le fichier est du code ex\u00e9cutable)</li> </ul> <p>Les types d'utilisateurs <code>u-g-o</code></p> <p>Tout fichier UNIX:</p> <ul> <li>poss\u00e8de un propri\u00e9taire (par d\u00e9faut l'utilisateur qui l'a cr\u00e9\u00e9) : u comme user;</li> <li>est associ\u00e9 \u00e0 un groupe dont on d\u00e9finit les actions sur ce fichier: g comme group;</li> <li>peut \u00eatre \u00e9ventuellement manipul\u00e9 par tous les autres utilisateurs : o comme others.</li> </ul> <p>Lecture des droits</p> <p>Voici ce que me donne la commande <code>ls</code> avec l'option <code>-l</code> pour obtenir des informations sur le contenu du r\u00e9pertoire <code>/Travail/1NSI/Archi/</code>:</p> <p> </p> <ul> <li>Le premier caract\u00e8re <code>-</code> ou <code>d</code> indique s'il s'agit d'un fichier ou d'un r\u00e9pertoire;</li> <li>les 9 caract\u00e8res suivants repr\u00e9sentent dans l'ordre les droits pour les 3 types d'utilisateurs (par paquets de 3 caract\u00e8res), dans l'ordre ugo. Par exemple pour le premier fichier, le propri\u00e9taire u a les droits <code>rw-</code>, c'est-\u00e0-dire lecture, \u00e9criture, pas d'\u00e9x\u00e9cution (il ne s'agit pas d'un fichier ex\u00e9cutable), les utilisateurs du groupe ont les m\u00eames droits <code>rw-</code> et les autres utilisateurs o ont les droits <code>r--</code>, c'est-\u00e0-dire seulement lecture. Pour les dossiers, tous les utilisateurs ont le droit d'\u00e9x\u00e9cution <code>x</code>, qui consiste \u00e0 explorer le r\u00e9pertoire.</li> <li>ensuite on lit le nombre de liens (notion non \u00e9tudi\u00e9e cette ann\u00e9e);</li> <li>on trouve ensuite le nom du propri\u00e9taire du fichier, le nom du groupe, la taille du fichier en octets, la date et l'heure de la derni\u00e8re modification et enfin le nom du fichier ou r\u00e9pertoire.</li> </ul> <p> </p> <p>Modification des droits</p> <p>Il est important de ne pas perdre de vu que l'utilisateur \"root\" a la possibilit\u00e9 de modifier les droits de tous les utilisateurs.</p> <p>Le propri\u00e9taire d'un fichier peut \u00e9galement modifier les permissions d'un fichier ou d'un r\u00e9pertoire \u00e0 l'aide de la commande <code>chmod</code>. </p> <p>Elle s'utilise ainsi, en pr\u00e9cisant l'utilisateur (a pour tous), l'ajout + ou la suppression - ou la r\u00e9initialisation = de la permission et enfin le type de permission:</p> <p><pre><code>chmod [u g o a] [+ - =] [r w x] nom_du_fichier\n</code></pre> Par exemple,  <pre><code>chmod g+w toto.txt\n</code></pre> attribuera la permission \"\u00e9criture\" au groupe associ\u00e9 au fichier <code>toto.txt</code>.</p>"},{"location":"T05_Architectures/T5.2_UNIX/T5.2_Commandes_UNIX/#525-exercices","title":"5.2.5 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p> </p> <ol> <li> <p>Donner les chemins absolus:</p> <ul> <li>du fichier <code>grub.cfg</code></li> <li>du r\u00e9pertoire <code>photos_vac</code></li> </ul> </li> <li> <p>Le r\u00e9pertoire courant est <code>grub</code>. Donner le chemin relatif du fichier <code>abi</code>.</p> </li> <li> <p>Le r\u00e9pertoire courant est <code>documents</code>. Donner les chemins relatifs:</p> <ul> <li>du fichier <code>rapport.odt</code></li> <li>du dossier <code>images</code></li> </ul> </li> </ol> <p>Exercice  2</p> \u00c9nonc\u00e9 partie 1\u00c9nonc\u00e9 partie 2Correction <p>D\u00e9crire (papier/crayon) l'effet de chacune des commandes suivantes en supposant qu'elle sont ex\u00e9cut\u00e9es les unes \u00e0 la suite des autres.</p> <ol> <li><code>cd ~</code></li> <li><code>mkdir T5</code></li> <li><code>mkdir T5/TP_shell</code></li> <li><code>cd T5/TP_shell</code></li> <li><code>touch toto.txt</code></li> <li><code>ls -l</code></li> <li><code>chmod g-rwx,o-rwx toto.txt</code></li> <li><code>ls -l</code></li> <li><code>cd ..</code></li> <li><code>rm -r TP_shell</code></li> </ol> <p>Ouvrir un terminal et effectuer ces commandes. V\u00e9rifier que tout se d\u00e9roule comme d\u00e9crit dans la partie 1.</p> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>On suppose que l'on se trouve dans un r\u00e9pertoire vide <code>TEST/</code> et qu'on ex\u00e9cute les commandes suivantes. Dessiner l'arborescence finale des fichiers et r\u00e9pertoires en utilisant <code>TEST/</code> comme racine de l'arborescence.</p> <ol> <li><code>mkdir series films mangas musique</code></li> <li><code>touch films/sw.txt mangas/HxH.txt</code></li> <li><code>cd series/</code></li> <li><code>mkdir ../musique/rap/ got/ oitnb/</code></li> <li><code>cd ..</code></li> <li><code>cp */*.txt series/got/</code></li> <li><code>rm -r mangas</code></li> </ol> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>Consulter la page de manuel d'utilisation de la commande <code>head</code>. Trouver comment l'utiliser pour n'afficher que les 5 premi\u00e8res lignes d'un fichier <code>toto.txt</code>.</p> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>Commencer par t\u00e9l\u00e9charger ce fichier dans votre r\u00e9pertoire <code>/home/nsi/T\u00e9l\u00e9chargements/</code>.</p> <ol> <li>Dans votre r\u00e9pertoire personnel, cr\u00e9ez un r\u00e9pertoire <code>Shell/</code> puis un r\u00e9pertoire <code>Exo5/</code> dans ce r\u00e9pertoire <code>Shell/</code>.</li> <li>D\u00e9placez le fichier <code>pg6318.txt</code> dans le r\u00e9pertoire <code>Exo5/</code> que vous venez de cr\u00e9er.</li> <li>Consultez les 25 premi\u00e8res lignes de ce fichier, puis renommez-le judicieusement.</li> <li>Cr\u00e9ez un fichier nomm\u00e9 <code>reponses.txt</code>.</li> <li>Consulter le manuel de la commande <code>echo</code>.</li> <li>\u00c9crivez votre nom dans ce fichier \u00e0 l'aide de la commande <code>echo</code>.</li> <li>Cherchez les mots <code>rouge</code>, <code>bleu</code> et <code>jaune</code> dans le fichier texte et ajoutez au fichier <code>reponses.txt</code> celui qui n'y appara\u00eet pas.</li> <li>V\u00e9rifier en affichant le contenu du fichier <code>reponses.txt</code>.</li> <li>Cherchez en quelle ligne appara\u00eet pour la premi\u00e8re fois le mot <code>tra\u00eetre</code>.</li> <li>Ajouter cette r\u00e9ponse au fichier <code>reponses.txt</code>.</li> </ol> <p>Les commandes (a minima):</p> <ol> <li><pre><code>mkdir Shell/\nmkdir Shell/Exo5/\n</code></pre></li> <li><pre><code>cd T\u00e9l\u00e9chargements/\nmv pg6318.txt ../Shell/Exo5/\n</code></pre> 3. <pre><code>cd ../Shell/Exo5/\nhead -n 25 pg6318.txt\nmv pg6318.txt avare.txt\n</code></pre></li> <li> <p><code>touch reponses.txt</code></p> </li> <li> <p><code>man echo</code></p> </li> <li> <p><code>echo votre_nom &gt; reponses.txt</code></p> </li> <li> <pre><code>grep rouge avare.txt\ngrep bleu avare.txt\ngrep jaune avare.txt\necho jaune &gt;&gt; reponses.txt\n</code></pre> </li> <li> <p><code>cat reponses.txt</code></p> </li> <li> <p><code>grep -n tra\u00eetre avare.txt</code></p> </li> <li> <p><code>echo 467 &gt;&gt; reponses.txt</code></p> </li> </ol> <p>Exercice  6</p> \u00c9nonc\u00e9Correction <p>Ouvrir un terminal, puis sans quitter le r\u00e9pertoire courant:</p> <ol> <li>cr\u00e9er un r\u00e9pertoire <code>Exo6/</code> puis les r\u00e9pertoires <code>Exo6/NSI/</code> et <code>Exo6/Divers/</code>.</li> <li>cr\u00e9er un fichier <code>hello.py</code> dans le r\u00e9pertoire <code>Exo6/NSI/</code>.</li> <li>\u00e9crire <code>print(\"hello world\")</code> dans ce fichier.</li> <li>se d\u00e9placer dans le r\u00e9pertoire <code>Exo6/NSI/</code>.</li> <li>afficher le contenu de ce fichier <code>hello.py</code>.</li> <li>accorder tous les droits \u00e0 \u00abtout le monde\u00bb sur le fichier <code>hello.py</code>.</li> <li>ex\u00e9cuter ce fichier \u00e0 l'aide du programme <code>python3</code>.</li> </ol> <ol> <li><code>mkdir Exo6/ Exo6/NSI/ Exo6/Divers/</code></li> <li><code>touch Exo6/NSI/hello.py</code></li> <li><code>echo print(\"hello world\") &gt;&gt; Exo6/NSI/hello.py</code></li> <li><code>cd Exo6/NSI/</code></li> <li><code>cat hello.py</code></li> <li><code>chmod a+rwx hello.py</code></li> <li><code>python3 hello.py</code></li> </ol> <p>Exercice  7</p> \u00c9nonc\u00e9Correction <p>On imagine qu'un r\u00e9pertoire nomm\u00e9 <code>Biblioth\u00e8que</code> dans le r\u00e9pertoire <code>Travail</code> du r\u00e9pertoire personnel contient plusieurs fichiers textes (format <code>txt</code>) dont le fichier <code>brouillon.txt</code>. Le r\u00e9pertoire courant est <code>/home/nsi/Documents/Images</code>.</p> <ol> <li>En une seule commande, se d\u00e9placer dans le r\u00e9pertoire <code>Biblioth\u00e8que</code>.</li> <li>Afficher le contenu de ce r\u00e9pertoire.</li> <li>Chercher toutes les occurences du mot \"informatique\" dans les fichiers texte de ce r\u00e9pertoire.</li> <li>Supprimer le fichier <code>brouillon.txt</code>.</li> </ol> <ol> <li><code>cd ../../Travail/Biblioth\u00e8que/</code></li> <li><code>ls</code></li> <li><code>grep informatique *.txt</code></li> <li><code>rm brouillon.txt</code></li> </ol>"},{"location":"T05_Architectures/T5.2_UNIX/TPnote/","title":"TP not\u00e9","text":"<p>TP not\u00e9</p> \u00c9nonc\u00e9 <p>Commencer par t\u00e9l\u00e9charger ce fichier dans votre r\u00e9pertoire <code>/home/nsi/T\u00e9l\u00e9chargements/</code>.</p> <p>Les instructions suivantes doivent toutes \u00eatre r\u00e9alis\u00e9es \u00e0 l'aide d'une commande (ou plusieurs si besoin)  dans le terminal, qu'il faut donc ouvrir maintenant... Moins vous utiliserez de commandes, mieux ce sera.</p> <ol> <li>Consultez le r\u00e9pertoire courant (dans lequel vous vous situez). Si ce n'est pas votre r\u00e9pertoire personnel (<code>/home/nsi/</code>), revenez-y.</li> <li>Supprimez le fichier <code>.bash_history</code> (ne pas oublier le point).</li> <li>Cr\u00e9ez un r\u00e9pertoire <code>Terminal/</code> dans le r\u00e9pertoire <code>Documents/</code>, puis un r\u00e9pertoire <code>TP/</code> dans ce r\u00e9pertoire <code>Terminal/</code>.</li> <li>D\u00e9placez le fichier <code>foo.txt</code> que vous avez t\u00e9l\u00e9charg\u00e9 vers le r\u00e9pertoire <code>TP/</code> que vous venez de cr\u00e9er .</li> <li>Renommez ce fichier en <code>queneau1014poemes.txt</code>.</li> <li>Si le r\u00e9pertoire courant n'est pas <code>/home/nsi/Documents/Terminal/TP/</code>, s'y rendre. Sans quitter ce r\u00e9pertoire, cr\u00e9ez un r\u00e9pertoire <code>Sauvegarde/</code> dans le r\u00e9pertoire <code>Terminal/</code>.</li> <li>Cr\u00e9ez une copie du fichier <code>queneau1014poemes.txt</code> dans le r\u00e9pertoire <code>Sauvegarde/</code> sous le nom <code>queneau_save.txt</code>.</li> <li>Dans le r\u00e9pertoire <code>TP/</code>, consultez les 14 premi\u00e8res lignes du <code>queneau1014poemes.txt</code>.</li> <li>Parmi les 3 mots suivants, lequel(s) n'y figure(nt) pas (peu importe la casse)? Malabar, Bretzel, Cacahu\u00e8te?</li> <li>Donnez le nombre d'occurences du mot \u00abfr\u00e8re\u00bb.</li> <li>En quelle ligne trouve-t-on le mot \u00abillustre\u00bb?</li> <li>On peut \u00e9crire du texte (par exemple \u00abBonjour\u00bb) dans un fichier (par exemple \u00abtoto.txt\u00bb) gr\u00e2ce \u00e0 la commande <code>echo Bonjour &gt; toto.txt</code>. Pour ajouter du texte, on remplace <code>&gt;</code> par <code>&gt;&gt;</code>. Cr\u00e9ez un fichier <code>reponses.txt</code> dans lequel vous \u00e9crirez les r\u00e9ponses aux questions 8, 9 et 10.</li> <li>V\u00e9rifiez en affichant le contenu du fichier <code>reponses.txt</code>.</li> <li>Consultez le contenu du r\u00e9pertoire <code>TP/</code>, en affichant les d\u00e9tails sur les droits.</li> <li>Modifiez les droits sur le fichier <code>reponses.txt</code> pour que les utilisateurs du groupe n'aient que la permission \u00ablecture\u00bb et que les autres utilisateurs n'aient aucun droit d'acc\u00e8s.</li> <li>Supprimez le r\u00e9pertoire <code>Terminal/</code> et tout son contenu.</li> <li>Fermez le terminal.</li> </ol> <p>Vous pouvez maintenant aller sur Moodle. Dans le d\u00e9p\u00f4t \u00abTP shell\u00bb de la section \u00ab\u00c9valuations\u00bb, d\u00e9posez le fichier <code>.bash_history</code> situ\u00e9 dans <code>/home/nsi/</code>. Si vous ne le voyez pas, affichez les fichiers cach\u00e9s (Ctrl + H).</p>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.3_Architecture/","title":"T5.3 Architecture d'un r\u00e9seau","text":"<p>Notion de r\u00e9seau</p> <ul> <li>En g\u00e9n\u00e9ral, un r\u00e9seau est un ensemble de n\u0153uds reli\u00e9s entre eux par des liens.</li> <li>Un r\u00e9seau informatique est un r\u00e9seau dont les n\u0153uds sont des \u00e9quipements informatiques reli\u00e9s par des liens de diff\u00e9rente nature: c\u00e2bles, fibre optique, liaisons satellites, ondes radio, ....</li> <li>Une interface est le point de raccordement entre un lien et un n\u0153ud: elle peut \u00eatre mat\u00e9rielle (carte r\u00e9seau) ou logicielle.</li> <li>Un protocole est un ensemble de r\u00e8gles permettant d'\u00e9tablir, de mener et de terminer une communication entre deux \u00e9quipements du r\u00e9seau.</li> </ul> <p>Dans ce cours, nous allons simuler un r\u00e9seau local avec le logiciel Filius install\u00e9 sur les VM du lyc\u00e9e.</p>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.3_Architecture/#531-un-premier-reseau","title":"5.3.1 Un premier r\u00e9seau","text":"<p>Partie 1: Construction d'un r\u00e9seau</p> <ol> <li> <p>Construire le sous-r\u00e9seau ci-dessous, en cochant \u00abUtiliser l'adresse IP comme nom\u00bb.</p> <p> </p> <ul> <li> <p>Adresse MAC : Chaque ordinateur sur le r\u00e9seau dispose d'une adresse MAC, qui est une valeur unique attribu\u00e9e \u00e0 sa carte r\u00e9seau (Ethernet, Wifi, 4G, 5G, ...) lors de sa fabrication en usine.</p> <p>Cette adresse est cod\u00e9e sur 48 bits, pr\u00e9sent\u00e9s sous la forme de 6 octets en hexad\u00e9cimal, ici <code>1F:5E:60:F0:15:23</code>.</p> <p>Les trois premiers octets correspondent au code du fabricant. Un site comme https://www.macvendorlookup.com/  vous permet de retrouver le fabricant d'une adresse MAC quelconque.</p> </li> <li> <p>Adresse IP: Une machine poss\u00e8de en g\u00e9n\u00e9ral une adresse IP par interface et contrairement \u00e0 l'adresse MAC, elle peut \u00eatre modifi\u00e9e lors du param\u00e9trage du r\u00e9seau.. Nous utiliserons la version IPv4 (sur 4 octets) bien que cette version est peu \u00e0 peu remplac\u00e9e par la version IPv6.</p> </li> </ul> </li> <li> <p>Passer en mode simulation (triangle vert), puis cliquer sur l'ordinateur <code>192.168.0.1</code> et installer le logiciel \"Ligne de commande\".</p> </li> <li>R\u00e9aliser un <code>ping</code> de la machine <code>192.168.0.1</code> vers la machine <code>192.168.0.3</code> en tapant <code>ping 192.168.0.3</code> en ligne de commande.</li> </ol> <p>R\u00f4le du switch</p> <p>Le r\u00f4le d'un switch est de distribuer un message au bon destinataire, en analysant la trame re\u00e7ue. Lors d'un branchement d'un nouvel ordinateur sur le switch, celui-ci r\u00e9cup\u00e8re son adresse MAC, ce qui lui permet de trier les messages.</p> <p> </p> <p>Partie 2: un deuxi\u00e8me r\u00e9seau</p> <ol> <li> <p>Renommer le switch en \"SwitchA\" et cr\u00e9er un deuxi\u00e8me r\u00e9seau de trois machines d'adresses IP <code>192.168.1.1</code>, <code>192.168.1.2</code> et <code>192.168.1.3</code> avec un \"SwitchB\".</p> </li> <li> <p>Tester un <code>ping</code> de <code>192.168.0.1</code> vers <code>192.168.1.2</code>.</p> </li> <li> <p>Renommer la machine <code>192.168.1.2</code> en <code>192.168.0.16</code> et retenter le <code>ping</code>. Que se passe-t-il?</p> </li> </ol>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.3_Architecture/#532-masque-de-sous-reseau","title":"5.3.2 Masque de sous-r\u00e9seau","text":"<p>Lorsqu'une machine A veut envoyer un message \u00e0 une machine B, elle doit d\u00e9terminer si cette machine :</p> <ul> <li>appartient au m\u00eame sous-r\u00e9seau : auquel cas le message est envoy\u00e9 directement via un ou plusieurs switchs.</li> <li>n'appartient pas au m\u00eame sous-r\u00e9seau : auquel cas le message doit d'abord transiter par un routeur (voir plus loin).</li> </ul> <p>La notion de sous-r\u00e9seau n'est pas topologique (\u00abil suffit de relier les ordinateurs entre eux\u00bb) mais ob\u00e9it \u00e0 des r\u00e8gles num\u00e9riques.</p> <p>C'est le masque de sous-r\u00e9seau (tout simplement \"Masque\" dans Filius, netmask en anglais) qui permet de d\u00e9terminer quelles adresses font partie d'un m\u00eame r\u00e9seau.</p> <p>Adresse IP et masque de sous-r\u00e9seau</p> <p>Une adresse IP comporte deux parties: </p> <ul> <li>l'adresse du r\u00e9seau : les k premiers bits;</li> <li>l'adresse de l'h\u00f4te : les 32-k derniers bits.</li> </ul> <p>La valeur de k est variable pour chaque r\u00e9seau, elle acompagne donc g\u00e9n\u00e9ralement les adresses et se nomme masque de sous-r\u00e9seau.</p> <p>Un masque de sous-r\u00e9seau est souvent repr\u00e9sent\u00e9 comme une adresse IPv4 par 4 octets, et est constitu\u00e9 d'une suite de k <code>1</code> suivie d'une suite de <code>0</code>.</p> Exemple 1Exemple 2 <ul> <li> <p>Le masque par d\u00e9faut de Filius est <code>255.255.255.0</code>, qui s'\u00e9crit en binaire : <code>11111111.11111111.11111111.00000000</code>.</p> </li> <li> <p>La valeur de k est donc 24. On note donc aussi (notation CIDR) l'adresse IP : <code>192.168.0.1 / 24</code>.</p> </li> <li> <p>Dans cette configuration, 256 machines peuvent donc appartenir au m\u00eame sous-r\u00e9seau (ce n'est pas tout \u00e0 fait le cas car des adresses finissant par 0 ou par 255 sont r\u00e9serv\u00e9es).</p> </li> <li> <p>Deux machines appartiennent au m\u00eame sous-r\u00e9seau si elles partagent les 3 premiers nombres (octets) de leur adresse IP, c'est \u00e0 dire les 24 premiers bits.</p> </li> </ul> <ul> <li> <p>Une autre valeur de masque peut \u00eatre <code>255.255.248.0</code>, qui s'\u00e9crit en binaire : <code>11111111.11111111.11111000.00000000</code>.</p> </li> <li> <p>La valeur de k est donc 21. On note donc aussi (notation CIDR) l'adresse IP : <code>192.168.0.1 / 21</code>.</p> </li> <li> <p>Deux machines appartiennent au m\u00eame sous-r\u00e9seau si elles partagent les 21 premiers bits de leur adresse IP.</p> </li> <li> <p>Combien de machines peuvent appartenir \u00e0 ce m\u00eame sous-r\u00e9seau ?</p> </li> </ul> <p>Appartenance \u00e0 un m\u00eame sous-r\u00e9seau</p> <p>Pour que deux machines appartiennent \u00e0 un m\u00eame sous-r\u00e9seau, il faut donc qu'elles partagent un m\u00eame nombre de bits, donn\u00e9s par le masque de sous-r\u00e9seau.</p> <p>L'op\u00e9ration qui permet de le d\u00e9terminer est le <code>&amp;</code> (et) logique, bit \u00e0 bit.</p> ExempleCorrection <p>Consid\u00e9rons trois machines A, B, C d'IP respectives <code>192.168.129.10</code>, <code>192.168.135.200</code> et <code>192.168.145.1</code>, configur\u00e9es avec un masque de sous-r\u00e9seau \u00e9gal \u00e0 <code>255.255.248.0</code>.  </p> machine A machine B machine C IP 192.168.129.10 192.168.135.200 192.168.145.1 M 255.255.248.0 255.255.248.0 255.255.248.0 IP &amp; M"},{"location":"T05_Architectures/T5.3_Reseaux/T5.3_Architecture/#533-utilisation-et-role-du-routeur","title":"5.3.3 Utilisation et r\u00f4le du routeur","text":"<p>La solution initiale (relier les deux switchs par un cable pour unifier les deux sous-r\u00e9seaux) n'est pas viable \u00e0 l'\u00e9chelle d'un r\u00e9seau plan\u00e9taire.</p> <p>Pour que les machines de deux r\u00e9seaux diff\u00e9rents puissent \u00eatre connect\u00e9es, on va utiliser un dispositif \u00e9quip\u00e9 de deux cartes r\u00e9seaux, situ\u00e9 \u00e0 cheval entre les deux sous-r\u00e9seaux. Cet \u00e9quipement de r\u00e9seau est appel\u00e9 routeur ou passerelle.</p> <p>Routage</p> <p>Les 3 \u00e9tapes du routage :</p> <ul> <li>Lorsque qu'une machine A veut envoyer un message \u00e0 une machine B, elle va tout d'abord v\u00e9rifier si cette machine appartient \u00e0 son r\u00e9seau local. si c'est le cas, le message est envoy\u00e9 par l'interm\u00e9diaire du switch qui relie les deux machines.</li> <li>Si la machine B n'est pas trouv\u00e9e sur le r\u00e9seau local de la machine A, le message va \u00eatre achemin\u00e9 vers le routeur, par l'interm\u00e9diaire de son adresse de passerelle (qui est bien une adresse appartenant au sous-r\u00e9seau de A).</li> <li>De l\u00e0, le routeur va regarder si la machine B appartient au deuxi\u00e8me sous-r\u00e9seau auquel il est connect\u00e9. Si c'est le cas, le message est distribu\u00e9, sinon, le routeur va donner le message \u00e0 un autre routeur auquel il est connect\u00e9 et va le charger de distribuer ce message : c'est le proc\u00e9d\u00e9 (complexe) de routage, qui sera vu en classe de Terminale.</li> </ul> <p>Dans l'exemple suivant, o\u00f9 le masque est <code>255.255.255.0</code>, l'adresse <code>172.16.52.3</code> n'est pas dans le sous-r\u00e9seau de <code>192.168.0.1</code>. Le message va donc transiter par le routeur. </p> <p>Partie 3: Ajout d'un routeur</p> <p>Si vous n'avez pas sauvegard\u00e9 votre r\u00e9seau, t\u00e9l\u00e9chargez ce fichier .</p> <ol> <li>Ajouter un routeur entre le SwitchA et le SwitchB.</li> <li>Configurer le routeur :<ul> <li>L'interface reli\u00e9e au Switch A doit avoir une adresse du sous-r\u00e9seau A (idem pour le r\u00e9seau B). On donne souvent une adresse finissant par <code>254</code>, qui est en quelque sorte la derni\u00e8re adresse du r\u00e9seau (en effet l'adresse en <code>255</code> est appel\u00e9e adresse de broadcast, utilis\u00e9e pour \u00abpinger\u00bb en une seule fois l'int\u00e9gralit\u00e9 d'un sous-r\u00e9seau).  </li> <li>Dans l'onglet g\u00e9n\u00e9ral, s\u00e9lectionner \u00ab Routage automatique \u00bb.  </li> <li>Ainsi configur\u00e9 notre routeur peut jouer le r\u00f4le de passerelle entre les deux sous-r\u00e9seaux.</li> </ul> </li> <li> <p>Tester un ping entre <code>192.168.0.1</code> et <code>192.168.1.2</code></p> \u00bfQue pasa? <p>Cela ne marche pas. La carte r\u00e9seau refuse d'envoyer les paquets car elle ne sait pas o\u00f9 les envoyer. Il faut donc dire \u00e0 chaque machine qu'une passerelle est maintenant disponible pour pouvoir sortir de son propre sous-r\u00e9seau. Il faut donc aller sur la machine <code>192.168.0.1</code> et lui donner l'adresse de sa passerelle...</p> </li> <li> <p>Une fois les passerelles renseign\u00e9es, effectuer un traceroute entre <code>192.168.0.1</code> et <code>192.168.1.2</code> : on y voit le nombre de sauts n\u00e9cessaires entre les deux machines.</p> </li> </ol> Cas d'un r\u00e9seau domestique <p>Chez vous, la box de votre op\u00e9rateur joue simultan\u00e9ment le r\u00f4le de switch et de routeur :</p> <ul> <li>switch car elle r\u00e9partit la connexion entre les diff\u00e9rents dispositifs (ordinateurs branch\u00e9s en ethernet, smartphone en wifi, tv connect\u00e9e...)</li> <li>routeur car elle fait le lien entre ce sous-r\u00e9seau domestique (les appareils de votre maison) et le r\u00e9seau internet.</li> </ul> <p></p> <p>Essayez chez vous de r\u00e9cup\u00e9rer l'adresse IP locale, le masque de sous-r\u00e9seau ainsi que la passerelle par d\u00e9faut, \u00e0 l'aide d'une commande <code>ipconfig</code> sous Windows.</p>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.3_Architecture/#534-serveur-dns","title":"5.3.4 Serveur DNS","text":"<p>Lors d'une utilisation classique d'un navigateur web, c'est une url m\u00e9morisable qui s'affiche, et non une adresse IP : on retient en effet plus facilement <code>https://www.google.com/</code> que <code>http://216.58.213.131</code>, qui renvoient pourtant \u00e0 la m\u00eame adresse.  La machine qui assure ce r\u00f4le d'annuaire entre les serveurs web et leur adresse IP s'appelle un serveur DNS. Pour pouvoir indexer la totalit\u00e9 des sites internet, son r\u00f4le est structur\u00e9 de mani\u00e8re hi\u00e9rarchique. Vous trouverez des d\u00e9tails ici.</p> <p>Partie 4: Ajout d'un serveur DNS</p> <p> </p> <ol> <li>Connecter un ordinateur au SwitchB, sur l'adresse <code>192.168.1.30</code>, installer dessus un Serveur web et le d\u00e9marrer.</li> <li>Sur la machine <code>192.168.0.1</code>, installer un Navigateur Web. En tapant dans la barre d'adresse l'adresse IP du Serveur web, la page d'accueil de Filius s'affiche.  </li> <li>Rajouter un serveur DNS, qui n'aura dans son annuaire d'un seul site. Il faut pour cela raccorder une nouvelle machine (mais une machine d\u00e9j\u00e0 sur le r\u00e9seau aurait tr\u00e8s bien pu jouer ce r\u00f4le), et installer dessus un serveur DNS.  </li> <li>Sur ce serveur DNS, associer le nom de domaine <code>www.vivelansi.fr</code>  \u00e0 l'adresse IP <code>192.168.1.30</code>.</li> <li>De retour sur la machine <code>192.168.0.1</code>, sp\u00e9cifier maintenant l'adresse du serveur DNS.</li> <li>Depuis le navigateur web de la machine <code>192.168.0.1</code>, le site <code>http://www.vivelansi.fr</code> doit maintenant \u00eatre accessible.  </li> </ol>"},{"location":"T05_Architectures/T5.3_Reseaux/T5.3_Architecture/#535-exercices","title":"5.3.5 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>On souhaite pouvoir raccorder 1000 machines sur le m\u00eame r\u00e9seau IP. Donner le plus petit masque permettant de d\u00e9finir un tel sous-r\u00e9seau. M\u00eame question avec 3000 machines.</p> <p>Noter \u00e0 chaque fois le masque en notation d\u00e9cimale point\u00e9e, puis CIDR.</p> <p>Exercice  2</p> \u00c9nonc\u00e9IndicationCorrection <p>On consid\u00e8re le masque <code>255.255.252.0</code>. Parmi les adresses suivantes, indiquer lesquelles appartiennent au m\u00eame sous-r\u00e9seau:</p> <ol> <li><code>129.175.127.1</code></li> <li><code>129.175.130.10</code></li> <li><code>129.175.128.17</code></li> <li><code>129.175.131.110</code></li> <li><code>129.175.132.8</code></li> </ol> <p>Penser \u00e0 utiliser la fonction <code>bin</code> de Python pour effectuer les conversions (m\u00eame s'il faut savoir les faire \u00ab\u00e0 la main\u00bb, et v\u00e9rifier vos \u00abet\u00bb logiques avec l'op\u00e9rateur <code>&amp;</code> de Python: <pre><code>&gt;&gt;&gt; 127 &amp; 252\n124\n</code></pre></p>"},{"location":"T05_Architectures/T5.4_Protocole/T5.4_Protocole/","title":"T5.4 Protocoles de communication dans un r\u00e9seau","text":""},{"location":"T05_Architectures/T5.4_Protocole/T5.4_Protocole/#541-modele-osi-modele-internet","title":"5.4.1 Mod\u00e8le OSI, mod\u00e8le Internet","text":"<p>Les bits transmis d'un ordinateur \u00e0 un autre contiennent, en plus des donn\u00e9es utiles (le mot \u00abbonjour\u00bb dans un email), une multitude de donn\u00e9es (tout aussi utiles) qui vont aider \u00e0 l'acheminement de ces bits au bon endroit, puis au bon ordinateur, puis au bon logiciel.  Les diff\u00e9rents protocoles qui r\u00e9gissent cette transmission sont regroup\u00e9s dans ce qui est appel\u00e9 un mod\u00e8le.</p> <p>Deux mod\u00e8les et plusieurs protocoles...</p> <p>Deux mod\u00e8les synth\u00e9tisent ces protocoles :</p> <ul> <li>le mod\u00e8le OSI (Open Systems Interconnection, 1984), organis\u00e9 en 7 couches : physique, liaison, r\u00e9seau, transport, session, pr\u00e9sentation,application. C'est un mod\u00e8le th\u00e9orique qui sert de r\u00e9f\u00e9rence pour inspirer d'autres architectures pour l'interconnexion de r\u00e9seaux.</li> <li>le mod\u00e8le Internet (ou mod\u00e8le TCP/IP, 1974), organis\u00e9 en 4 couches : liaison, r\u00e9seau, transport, application.</li> </ul> <p>Ils respectent tous deux les m\u00eames principes:</p> <ul> <li>Chaque couche ne peut communiquer qu\u2019avec une couche adjacente</li> <li>Chaque couche est ind\u00e9pendante:<ul> <li>les informations d\u2019une couche ne peuvent \u00eatre utilis\u00e9es dans une autre;</li> <li>cela permet l\u2019\u00e9volution des communications dans le temps : IPv4 va devenir IPv6 sans qu\u2019on doive tout r\u00e9\u00e9crire.</li> </ul> </li> </ul> <p>Ces deux mod\u00e8les co\u00efncident suivant le sch\u00e9ma ci-dessous. Ce sont des mod\u00e8les d'une certaine rigidit\u00e9. Leur utilisation dans la pratique est parfois plus floue, avec des protocoles \u00e0 cheval sur plusieurs couches. Dans la suite de ce cours, nous \u00e9voquerons principalement le mod\u00e8le Internet (TCP/IP).</p> <p></p> <p>Lors de son \u00e9mission, un message va subir successivement toutes les transformations effectu\u00e9es par chaque couche, depuis sa cr\u00e9ation (couche 7) jusqu'\u00e0 sa transmission physique (couche 1).  </p> <p>Lorsque ce m\u00eame message sera r\u00e9ceptionn\u00e9, les transformations seront effectu\u00e9es dans l'ordre inverse, jusqu'\u00e0 la pr\u00e9sentation du message au destinataire.</p> Couche 4  \u2014 couche applicationCouche 3 \u2014 couche transportCouche 2 \u2014 couche r\u00e9seauCouche 1 \u2014 couche liaison/physique <p>Cette couche regroupe les protocoles n\u00e9cessaires \u00e0 la bonne mise en forme d'un message (au sens large: compression, cryptage, ...) avant sa transmission. </p> <p>Ces protocoles peuvent \u00eatre de nature tr\u00e8s diff\u00e9rente : protocole HTTP pour la transmisson de pages web, protocole FTP pour le transfert de fichiers, protocoles POP ou IMAP pour le courrier \u00e9lectronique...</p> <p> </p> <p>Le protocole majeur de cette couche est le protocole TCP :</p> <ul> <li>il s'assure par SYN-ACK que l'\u00e9metteur et le r\u00e9cepteur sont pr\u00eats \u00e0 \u00e9changer des messages. </li> <li>il d\u00e9coupe en segments num\u00e9rot\u00e9s le message \u00e0 transmettre (c\u00f4t\u00e9 \u00e9metteur) ou bien recompose le message total en remettant les segments dans l'ordre (c\u00f4t\u00e9 r\u00e9cepteur).    </li> </ul> <p>Les \u00e9l\u00e9ments \u00e9chang\u00e9s avec la couche inf\u00e9rieure sont des segments.</p> <p> </p> <p>Ports</p> <p>Une machine peut \u00e9tablir plusieurs connexions TCP en m\u00eame temps. Afin de les distinguer on ajoute une information suppl\u00e9mentaire, le port r\u00e9seau.</p> <p>TCP n\u2019est pas le seul protocole \u00e0 utiliser ces ports.</p> <p>Les ports sont des nombres sur 16 bits, g\u00e9n\u00e9ralement not\u00e9s en d\u00e9cimal, entre 0 et \\(2^{16} = 65536\\)</p> <p>Ils sont g\u00e9n\u00e9ralement ajout\u00e9s \u00e0 la fin de l\u2019adresse IP apr\u00e8s le symbole : (deux points)      <code>192.168.1.2:80</code></p> <p>Chaque fois que vous ouvrez deux onglets dans le navigateur, celui-ci \u00e9tabli une connexion avec une machine diff\u00e9rente et se voit attribuer un port de r\u00e9ception diff\u00e9rent.</p> <p>C'est la couche o\u00f9 chaque segment num\u00e9rot\u00e9 est encapsul\u00e9 dans un paquet qui, suivant le protocole IP, va contenir son adresse source et son adresse de destination. C'est \u00e0 ce niveau que se d\u00e9cide si le message doit rester dans le r\u00e9seau local ou \u00eatre envoy\u00e9 sur un autre r\u00e9seau via la passerelle du routeur. Les \u00e9l\u00e9ments \u00e9chang\u00e9s avec la couche inf\u00e9rieure sont des paquets.</p> <p> </p> <p>C'est l'encapsulation finale du message, pour transmettre des trames \u00e0 travers le r\u00e9seau physique, en bits. Elle d\u00e9pend donc du mat\u00e9riel.</p> <p>On y trouve donc:</p> <ul> <li>la r\u00e9solution d'adresses : suivant le protocole Ethernet, les informations sont transmises d'une carte r\u00e9seau \u00e0 une autre, gr\u00e2ce \u00e0 leur adresse MAC (Media Access Controler).  Il s'agit donc d'associer une adresse physique (MAC) \u00e0 une adresse IP : c'est le r\u00f4le du protocole ARP.</li> <li>des routines d'acc\u00e8s au r\u00e9seau : selon le medium de communication, par signal lumineux (fibre optique), par ondes (wifi), par courant \u00e9lectrique (Ethernet)...</li> </ul> <p> </p> <p>Lors de son parcours, une trame peut \u00eatre partiellement d\u00e9capsul\u00e9e et remonter \u00e0 la couche 3, avant de redescendre et de continuer son chemin. C'est le cas notamment lors du passage dans un routeur. Mais jamais, lors de son acheminement, le contenu r\u00e9el du message n'est ouvert : les paquets transmis sont achemin\u00e9s de mani\u00e8re identique, qu'ils contiennent les \u00e9l\u00e9ments constitutifs d'une vid\u00e9o YouTube ou d'un email \u00e0 votre cousin.  </p> <p>Ce principe fondateur, actuellement menac\u00e9 par certains acteurs politiques et industriels, est connu sous l'expression \u00abla neutralit\u00e9 du net\u00bb. </p> <p> </p>"},{"location":"T05_Architectures/T5.4_Protocole/T5.4_Protocole/#542-tp-observation-avec-filius","title":"5.4.2 TP: Observation avec Filius","text":"<p>Partie 1: avant la communication</p> <ol> <li>T\u00e9l\u00e9charger et ouvrir le fichier ping_switch.fls avec Filius: deux machines sont reli\u00e9s par un switch.</li> <li>Lancer la simulation et cliquer sur le switch pour consulter sa table SAT. Que constate-t-on?</li> <li>Sur la machine <code>192.168.0.10</code>, taper dans le terminal la commande <code>arp -a</code> pour obtenir sa table de correspondance IP \u2b80 MAC. \u00c0 quoi correspond la seule ligne de cette table?</li> </ol> <p>Partie 2: communication</p> <ol> <li>Sur la machine <code>192.168.0.10</code>, lancer un <code>ping</code> vers la machine <code>192.168.0.11</code>, puis contr\u00f4ler la table SAT du switch ainsi que la table de correspondance IP \u2b80 MAC de <code>192.168.0.10</code>.</li> <li>Observer les \u00e9changes de donn\u00e9es (clic droit sur la machine <code>192.168.0.10</code>). Cliquer sur chaque ligne pour en voir le d\u00e9tail.</li> </ol> Analyse des messages Message 1: \u00ab Qui poss\u00e8de l'IP <code>192.168.0.11</code> ? \u00bbMessage 2 : \u00ab Moi ! \u00bbMessage 3 : le ping est envoy\u00e9Message 4 : le pong est retourn\u00e9 <p>Cette premi\u00e8re ligne est une requ\u00eate ARP. ARP est un protocole qui s'interface entre la couche r\u00e9seau (appel\u00e9e Internet sur Filius) et la couche liaison (appel\u00e9e R\u00e9seau sur Filius). Comme indiqu\u00e9 dans le commentaire, elle consiste \u00e0 un appel \u00e0 tout le r\u00e9seau : \"Est-ce que quelqu'un ici poss\u00e8de l'IP <code>192.168.0.11</code> ?</p> <p> </p> <p>Il faut comprendre \u00e0 cette \u00e9tape que l'adresse IP est totalement inutile pour r\u00e9p\u00e9rer un ordinateur dans un sous-r\u00e9seau. Ce sont les adresses MAC qui permettent de se rep\u00e9rer dans un sous-r\u00e9seau. Les adresses IP, elles, permettront \u00e9ventuellement d'acheminer le message jusqu'au bon sous-r\u00e9seau (elles n'int\u00e9ressent donc que les routeurs).</p> <p>La commande <code>arp -a</code> effectu\u00e9e dans un terminal de la machine <code>192.168.0.10</code> nous permet de voir qu'elle ne conna\u00eet encore personne dans son sous-r\u00e9seau. La table de correspondance IP \u2b80 MAC ne contient que l'adresse de broadcast <code>255.255.255.255</code>, qui permet d'envoyer un message \u00e0 tout le r\u00e9seau.  </p> <p> </p> <p>Constatant qu'elle ne sait pas quelle est l'adresse MAC de <code>192.168.0.11</code>, la machine <code>192.168.0.10</code> commence donc par envoyer un message \u00e0 tout le sous-r\u00e9seau, par l'adresse MAC de broadcast <code>FF:FF:FF:FF:FF:FF</code>. Le switch va lui aussi lui aussi relayer ce message \u00e0 tous les \u00e9quipements qui lui sont connect\u00e9s (dans notre cas, un seul ordinateur).</p> <p>La machine <code>192.168.0.11</code> s'est reconnu dans le message de broadcast de la machine <code>192.168.0.10</code>. Elle lui r\u00e9pond pour lui donner son adresse MAC.  </p> <p> </p> <p>\u00c0 partir de ce moment, la machine <code>192.168.0.10</code> sait comment communiquer avec <code>192.168.0.11</code>. Elle l'\u00e9crit dans sa table <code>arp</code>, afin de ne plus avoir \u00e0 \u00e9mettre le message n\u00b01 :  </p> <p> </p> <p>Le switch, qui a vu passer sur ses ports 0 et 1 des messages venant des cartes MAC <code>BC:81:81:42:9C:31</code>  et <code>2A:AB:AC:27:D6:A7</code>, peut mettre \u00e0 jour sa table SAT :  </p> <p> </p> <p>Par la suite, il saura sur quel port rediriger les messages destin\u00e9s \u00e0 ces deux adresses MAC. Un switch est un \u00e9quipement de r\u00e9seau de la couche 2 du mod\u00e8le OSI, il ne sait pas lire les adresses IP : il ne travaille qu'avec les adresses MAC.</p> <p> </p> <p> </p> <p>Partie 3: communication \u00e0 travers un routeur</p> <p>L'objectif est maintenant d'observer les diff\u00e9rentes \u00e9tapes lors d'un ping entre des machines de sous-r\u00e9seaux diff\u00e9rents:</p> <p> </p> <ol> <li>T\u00e9l\u00e9charger et ouvrir le fichier ping_routeur.fls avec Filius.</li> <li>Noter la configuration des machines <code>192.168.0.1 / 24</code> et <code>192.168.1.1 / 24</code> (adresses MAC) et du routeur (adresses IP et MAC sur chaque sous-r\u00e9seau).</li> <li>Effectuer un <code>ping</code> entre les machines indiqu\u00e9es sur le sch\u00e9ma ci-dessus et analyser les messages \u00e9mis/re\u00e7us (sur les deux machines et le routeur).</li> </ol> Analyse des messages <p>Configuration:</p> <ul> <li>la machine <code>192.168.0.1 / 24</code> : adresse MAC <code>F9:E1:D6:0B:29:03</code> </li> <li>la machine <code>192.168.1.1 / 24</code> : adresse MAC <code>D3:79:96:B8:5C:A4</code> </li> </ul> <p>Le routeur est configur\u00e9 ainsi :</p> <ul> <li>interface sur le r\u00e9seau A :<ul> <li>IP : <code>192.168.0.254</code> </li> <li>MAC : <code>77:C2:22:C9:5C:E7</code> </li> </ul> </li> <li>interface sur le r\u00e9seau B :<ul> <li>IP : <code>192.168.1.254</code> </li> <li>MAC : <code>66:E5:4E:7D:0B:B0</code> </li> </ul> </li> </ul> \u00c9tape 0 : le routeur signale sa pr\u00e9sence\u00c9tape 1 : de <code>192.168.0.1</code> vers le routeur\u00c9tape 2 : le routeur d\u00e9capsule la trame <p>Lors de l'observation des messages re\u00e7us ou \u00e9mis par la machine <code>192.168.0.1</code>, on peut \u00eatre intrigu\u00e9 par ce tout premier message re\u00e7u, \u00e9mis par le routeur : </p> <p> </p> <p>On peut y distinguer les 4 couches du mod\u00e8le Internet. Le routeur, par ce message distribu\u00e9 \u00e0 tous les \u00e9l\u00e9ments du sous-r\u00e9seau A (il envoie un message \u00e9quivalent sur son sous-r\u00e9seau B), d\u00e9clare sa pr\u00e9sence, et le fait qu'il poss\u00e8de deux interfaces, une pour chaque r\u00e9seau.  Il se positionne ainsi comme une passerelle : \u00abc'est par moi qu'il faudra passer si vous voulez sortir de votre sous-r\u00e9seau\u00bb.  Dans cette trame envoy\u00e9e figure son adresse MAC, de sorte que tous les membres de son sous-r\u00e9seau pourront donc communiquer avec lui.</p> <p>La machine <code>192.168.0.1 / 24</code> calcule que la machine <code>192.168.1.1 / 24</code> avec laquelle elle veut communiquer n'est pas dans son sous-r\u00e9seau. Elle va donc envoyer son message \u00e0 sa passerelle, qui est l'adresse du routeur dans son sous-r\u00e9seau. </p> <p>Cette premi\u00e8re trame est :</p> <p> </p> <p>Le routeur est un \u00e9quipement de r\u00e9seau de couche 3 (couche r\u00e9seau). Il doit observer le contenu du paquet IP (sans remonter jusqu'au contenu du message) pour savoir, suivant le proc\u00e9d\u00e9 de routage (voir cours de Terminale), o\u00f9 acheminer ce paquet.</p> <p>Dans notre cas, l'adresse IP <code>192.168.1.1</code>de destination lui est accessible : elle fait partie de son sous-r\u00e9seau B.</p> <p>Le routeur va modifier la valeur du TTL (Time To Live), en la d\u00e9cr\u00e9mentant de 1. Si, apr\u00e8s de multiples routages, cette valeur devenait \u00e9gale \u00e0 0, ce paquet serait d\u00e9truit. Ceci a pour but d'\u00e9viter l'encombrement des r\u00e9seaux avec des paquets ne trouvant pas leur destination.</p> NAT : translation d'adresse <p>Dans notre cas, le routeur va laisser intacte l'adresse IP Source. Ce n'est pas toujours le cas. Dans le cas classique de la box qui relie votre domicile \u00e0 internet, le routeur contenu dans celle-ci va remplacer l'adresse locale de votre ordinateur ou smartphone (ex <code>192.168.0.26</code>) par son IP publique (celle apparaissant sur whatsmyip.com, par exemple). Elle effectue ce qu'on appelle une translation d'adresse (NAT).  Pourquoi ? Parce que sinon la r\u00e9ponse du serveur distant que vous interrogez serait envoy\u00e9e sur une adresse locale (votre adresse <code>192.168.0.26</code>), qui est introuvable depuis un r\u00e9seau ext\u00e9rieur. Il faut donc remplacer toutes les adresses locales par l'IP publique de votre box. Pour \u00e9viter que la r\u00e9ponse du serveur web que vous avez interrog\u00e9 ne soit affich\u00e9e sur l'ordinateur de vos parents, le routeur affecte des ports diff\u00e9rents \u00e0 chaque machine de son sous-r\u00e9seau. Ce port est inclus dans le message transmis au serveur, et il l'est aussi dans sa r\u00e9ponse : le routeur peut donc rediriger le trafic vers la bonne machine du sous-r\u00e9seau.</p> <p>Le routeur va r\u00e9-encapsuler le paquet IP modifi\u00e9, et cr\u00e9er une nouvelle trame Ethernet en modifiant :</p> <ul> <li>l'adresse MAC source : il va mettre l'adresse MAC de son interface dans le sous-r\u00e9seau B.</li> <li>l'adresse MAC de destination : il va mettre l'adresse MAC de <code>192.168.1.1</code> (qu'il aura peut-\u00eatre r\u00e9cup\u00e9r\u00e9e au pr\u00e9alable par le protocole ARP)</li> </ul> <p>Cette deuxi\u00e8me trame est donc :</p> <p> </p> <p>On peut observer dans Filius cette trame, en se positionnant sur l'interface <code>192.168.1.254</code> du routeur, ou sur <code>192.168.1.1</code> :</p> <p> </p> <p>En suivant le m\u00eame principe, la machine <code>192.168.1.1</code> pourra envoyer son pong.</p>"},{"location":"T05_Architectures/T5.4_Protocole/T5.4_Protocole/#543-protocole-du-bit-alterne","title":"5.4.3 Protocole du bit altern\u00e9","text":"<p>Ce protocole est un exemple de fiabilisation du transfert de donn\u00e9es.  Simple et l\u00e9ger, il a longtemps \u00e9t\u00e9 utilis\u00e9 mais il peut toutefois \u00eatre facilement mis en d\u00e9faut, ce qui explique qu'il ait \u00e9t\u00e9 remplac\u00e9 par des protocoles plus performants.</p> <p>Contexte</p> <ul> <li>Alice veut envoyer \u00e0 Bob un message M, qu'elle a pr\u00e9d\u00e9coup\u00e9 en sous-messages M0, M1, M2,...</li> <li>Alice envoie ses sous-messages \u00e0 une cadence \u0394t fix\u00e9e (en pratique, les sous-messages partent quand leur acquittement a \u00e9t\u00e9 re\u00e7u ou qu'on a attendu celui-ci trop longtemps : on parle alors de timeout).</li> </ul> 1. Situation id\u00e9ale2. Situation r\u00e9elle3. Solution na\u00efve...4. Mais peu efficace...5. Bob prend le contr\u00f4le <p> </p> <p>Dans cette situation, les sous-messages arrivent tous \u00e0 destination dans le bon ordre. La transmission est correcte.</p> <p>Mais parfois, les choses ne se passent pas toujours aussi bien. Car si on ma\u00eetrise parfaitement le timing de l'envoi des sous-messages d'Alice, on ne sait pas combien de temps vont mettre ces sous-messages pour arriver, ni m\u00eame (attention je vais passer dans un tunnel) s'ils ne vont pas \u00eatre d\u00e9truits en route.</p> <p> </p> <p>Le sous-message M0 est arriv\u00e9 apr\u00e8s le M1, le message M2 n'est jamais arriv\u00e9...</p> <p>Que faire ?</p> <p>\u00c9cartons l'id\u00e9e de num\u00e9roter les sous-messages, afin que Bob puisse remettre dans l'ordre les messages arriv\u00e9s, ou m\u00eame redemander sp\u00e9cifiquement des sous-messages perdus. C'est ce que r\u00e9alise le protocole TCP (couche 3 \u2014 transport), c'est tr\u00e8s efficace, mais cher en ressources. Essayons de trouver une solution plus basique.</p> <p>Pourquoi ne pas demander \u00e0 Bob d'envoyer un signal pour dire \u00e0 Alice qu'il vient bien de recevoir son sous-message ? Nous appelerons ce signal ACK (comme acknowledgement, traduisible par \u00abaccus\u00e9 de r\u00e9ception\u00bb). Ce signal ACK permettra \u00e0 Alice de renvoyer un message qu'elle consid\u00e9rera comme perdu :</p> <p> </p> <p>N'ayant pas re\u00e7u le ACK cons\u00e9cutif \u00e0 son message M1, Alice suppose (avec raison) que ce message n'est pas parvenu jusqu'\u00e0 Bob, et donc renvoie le message M1.</p> <p> </p> <p>Le deuxi\u00e8me ACK de Bob a mis trop de temps pour arriver (ou s'est perdu en route) et donc Alice a suppos\u00e9 que son sous-message M1 n'\u00e9tait pas arriv\u00e9. Elle l'a donc renvoy\u00e9, et Bob se retrouve avec deux fois le sous-message M1. La transmission est incorrecte.  En faisant transiter un message entre Bob et Alice, nous multiplions par 2 la probabilit\u00e9 que des probl\u00e8mes techniques de transmission interviennent. Et pour l'instant rien ne nous permet de les d\u00e9tecter.</p> <p>Bob va maintenant int\u00e9grer une m\u00e9thode de validation du sous-message re\u00e7u. Il pourra d\u00e9cider de le garder ou de l'\u00e9carter. Le but est d'\u00e9viter les doublons.</p> <p>Pour r\u00e9aliser ceci, Alice va rajouter \u00e0 chacun de ses sous-messages un bit de contr\u00f4le, que nous appelerons FLAG (drapeau). Au d\u00e9part, ce FLAG vaut 0.  Quand Bob re\u00e7oit un FLAG, il renvoie un ACK \u00e9gal au FLAG re\u00e7u.</p> <p>Alice va attendre ce ACK contenant le m\u00eame bit que son dernier FLAG envoy\u00e9 :</p> <ul> <li>tant qu'elle ne l'aura pas re\u00e7u, elle continuera \u00e0 envoyer le m\u00eame sous-message, avec le m\u00eame FLAG.</li> <li>d\u00e8s qu'elle l'a re\u00e7u, elle peut envoyer un nouveau sous-message en inversant (\u00abalternant\u00bb) le bit de son dernier FLAG (d'o\u00f9 le nom de ce protocole).</li> </ul> <p>Bob, de son c\u00f4t\u00e9, va contr\u00f4ler la validit\u00e9 de ce qu'il re\u00e7oit : il ne gardera que les sous-messages dont le FLAG est \u00e9gal \u00e0 l'inverse de son dernier ACK. C'est cette m\u00e9thode qui lui permettra d'\u00e9carter les doublons.</p> <p>Observons ce protocole dans plusieurs cas :</p> 5.1 Cas o\u00f9 le sous-message est perdu5.2 Cas o\u00f9 le ACK  est perdu5.3 Cas o\u00f9 un sous-message est en retard <p> </p> <p> </p> <p>Le protocole a bien d\u00e9tect\u00e9 le doublon du sous-message M1.</p> <p> </p> <p>Le protocole a bien d\u00e9tect\u00e9 le doublon du sous-message M1... mais que se passerait-il si notre premier sous-message M1 \u00e9tait encore plus en retard ?</p>"},{"location":"T06_Python/accueil/","title":"Langages et programmation","text":"<p>Histoire de l'informatique</p> <p> </p> <p> </p> <p>John Backus (1924-2007) est l'auteur de l'un des premiers langages de programmation : le Fortran (1954). Il a par la suite propos\u00e9, avec Peter Naur, la notation de Backus Naur qui permet de d\u00e9crire des grammaires formelle pour langages de programmation...</p> <p>Grace Hopper  (1906-1992) est une informaticienne am\u00e9ricaine, connue pour sa contribution \u00e0 la conception et \u00e0 la traduction des premiers langages de programmation, et comme l\u2019une des principales inspiratrices du langage COBOL.</p> <p>Les langages de programmation permettent de d\u00e9crire d'une part les structures des donn\u00e9es qui seront manipul\u00e9es par l'appareil informatique, et d'autre part d'indiquer comment sont effectu\u00e9es les manipulations, selon quels algorithmes. Ils servent de moyens de communication par lesquels le programmeur communique avec l'ordinateur, mais aussi avec d'autres programmeurs...</p> <p></p> Vid\u00e9o <p><p> </p></p>"},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/","title":"6.1.0 Prise en main de Python","text":""},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#preambule","title":"Pr\u00e9ambule","text":""},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#python","title":"Python","text":"<p>Python est un langage de programmation invent\u00e9 en 1991 par Guido Van Rossum.</p> <p>Ce langage est un des langages les plus utilis\u00e9s actuellement (avec le C, le Java, le Javascript ...), notamment dans le monde scientifique.</p> <p>Il est aussi un des langages de d\u00e9veloppement de nombreuses applications (Spotify, Instagram, Netflix), des sites Web, de traitement de donn\u00e9es,  du noyau Linux... Python fait \u00e0 peu pr\u00e8s tout ce qu'on veut. Sauf le caf\u00e9.</p> <p>Il est aussi parfaitement adapt\u00e9 \u00e0 la d\u00e9couverte de la programmation, de par sa clart\u00e9 et sa concision (il a aussi bien s\u00fbr beaucoup de d\u00e9fauts !).</p> <p>C'est pourquoi c'est le langage de programmation utilis\u00e9 au lyc\u00e9e en Math\u00e9matiques, en Physique-Chimie, en SNT et bien s\u00fbr maintenant en NSI.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#ordinateur","title":"Ordinateur","text":"<p>Mis \u00e0 part des calculs (beaucoup et tr\u00e8s rapidement), un ordinateur ne sait pas faire \u00e9norm\u00e9ment de choses... Il sait faire les instructions suivantes:</p> <ul> <li>g\u00e9rer des donn\u00e9es stock\u00e9es dans des variables;</li> <li>faire des tests (entre les valeurs des variables);</li> <li>r\u00e9p\u00e9ter des instructions;</li> <li>encha\u00eener des instructions.</li> </ul> <p>Et c'est (\u00e0 peu pr\u00e8s) tout.</p> <p>Citation</p> <p>Un ordinateur, c'est compl\u00e8tement con.</p> <p>Citation</p> <p>Programmer, c'est compliqu\u00e9.</p> <p>Ces deux citations sont de G\u00e9rard Berry, professeur d'Informatique au coll\u00e8ge de France. La premi\u00e8re signifie qu'un ordinateur ne prend pas de d\u00e9cision, et attend des instructions somme toute assez basiques. La seconde signifie que c'est \u00e0 l'\u00eatre humain de traduire sa fa\u00e7on de penser et de r\u00e9soudre un probl\u00e8me en une s\u00e9quence de ces quelques instructions basiques. Et ce n'est pas toujours simple.</p> <p>Bien s\u00fbr, il faut \u00e9galement conna\u00eetre la syntaxe de ces instructions, c'est-\u00e0-dire comment les \u00e9crire correctement pour que l'ordinateur puisse les interpr\u00e9ter sans erreur (car un ordinateur ne sait pas corriger vos erreurs, cf. citation 1).</p> <p>Et n'oubliez pas:</p> <p>Citation</p> <p>99% des probl\u00e8mes en informatique se situent entre le clavier et la chaise.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#utiliser-python","title":"Utiliser Python","text":"<p>Pour pouvoir utiliser un langage de programmation, en particulier Python, on a besoin d'un IDE (environnement de d\u00e9veloppement). Il en existe beaucoup...</p>"},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#en-ligne","title":"En ligne","text":"<p>Rendez-vous sur la page https://console.basthon.fr/ </p> <p></p> <p> \u00c9diteur \u00e0 gauche, console \u00e0 droite </p> <p>En s'identifiant sur l'ENT du lyc\u00e9e, vous avez acc\u00e8s \u00e0 l'application Capytale, dans laquelle vous pouvez cr\u00e9er et g\u00e9rer vos activit\u00e9s Basthon. </p> <p> </p>"},{"location":"T06_Python/T6.1_Python/T6.1_0_Python/#au-lycee-a-la-maison","title":"Au lyc\u00e9e / \u00e0 la maison","text":"<p>Nous utiliserons l'IDE Thonny  au lyc\u00e9e, qui est assez simple et complet. Si vous souhaitez installer Python sur votre PC \u00e0 la maison, je vous conseille de l'installer \u00e9galement.</p> <p></p> <p> \u00c9diteur en haut, console en bas </p>"},{"location":"T06_Python/T6.1_Python/T6.1_1_Variables/","title":"6.1.1 Les variables","text":"<p>\u00c9crire un programme, c'est traiter des donn\u00e9es. Le plus souvent num\u00e9riques en cours de Math\u00e9matiques ou de Physique-Chimie, elles peuvent \u00eatre aussi d'autres types en NSI: cha\u00eene de caract\u00e8res (texte), tableaux (ensemble de valeurs), bool\u00e9ens (vrai/faux), ...</p> <p>Pour stocker, manipuler et modifier ces donn\u00e9es au fil du programme, on cr\u00e9e des variables qui vont permettre de les nommer ces donn\u00e9es et  d'y avoir acc\u00e8s simplement.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_1_Variables/#1-affectation","title":"1. Affectation","text":"<p>Admettons qu'on souhaite programmer un jeu de combat de Pok\u00e9mons (ou tout autre personnage). Dans ce programme il faudra prendre en compte de nombreux attributs des Pok\u00e9mons, par exemple les points de vie (PV). Pour chaque Pok\u00e9mon, ces PV sont assez \u00e9videmment amen\u00e9s \u00e0 varier tout au long de l'ex\u00e9cution du programme. Le programmeur ne peut donc pas conna\u00eetre la valeur de ces PV pendant le programme. Il lui faut manipuler une variable, c'est \u00e0 dire un nom associ\u00e9 \u00e0 cette valeur, qui elle est stock\u00e9e en m\u00e9moire.</p> <p>Notion de variable</p> <p>Une variable est une association entre un nom (son identifiant, voir 4.) et une valeur (de n'importe quel type, voir 3.).</p> <p>Associer une valeur \u00e0 une variable (nouvelle ou d\u00e9j\u00e0 cr\u00e9\u00e9) s'appelle une affectation. </p> <p>Par exemple, si mon Pok\u00e9mon a 80 points de vie en d\u00e9but de partie, je peux cr\u00e9er une variable en affectant la valeur 80 au nom <code>pv</code>.</p> <p>En Python, on \u00e9crira:</p> <pre><code>pv = 80\n</code></pre> <p>Vocabulaire</p> <ul> <li> <p>Par abus de langage, on confond souvent variable et nom de variable. Ici on parlera de la variable <code>pv</code>.</p> </li> <li> <p>La premi\u00e8re fois qu'on affecte une valeur \u00e0 une variable, on dit qu'on l'initialise.</p> </li> </ul> <p>Attention</p> <ul> <li>Le symbole <code>=</code> n'a rien \u00e0 voir avec le symbole \\(=\\) utilis\u00e9 en math\u00e9matiques. </li> <li>On commence toujours \u00e0 gauche par la variable \u00e0 affecter, cette instruction n'est pas sym\u00e9trique. On obtiendrait une erreur (essayez) avec: <pre><code>80 = pv\n</code></pre></li> <li>En effet cette instruction est lue par Python de droite \u00e0 gauche : on met la valeur <code>80</code> dans la variable <code>pv</code>. En langage naturel dans un algorithme, on \u00e9crirait : <code>pv \u2190 80</code>. C'est ainsi qu'il faut se le repr\u00e9senter mentalement.</li> </ul> <p> </p> <p>On peut<sup>1</sup> se repr\u00e9senter cette affectation par une m\u00e9taphore, o\u00f9 l'on repr\u00e9sente la m\u00e9moire de l'ordinateur comme une gigantesque commode avec d'innombrables tiroirs.</p> <p>\u00c9tape 1: Lorsqu'on affecte la valeur <code>80</code> \u00e0 la variable <code>pv</code>, l'ordinateur commence par trouver un tiroir vide.</p> <p>\u00c9tape 2: Ensuite il nomme ce tiroir <code>pv</code>, comme s'il lui collait une \u00e9tiquette dessus.</p> <p>\u00c9tape 3: Enfin il d\u00e9pose dans ce tiroir la valeur <code>80</code>.</p> <p>D\u00e9sormais - tant qu'on ne lui aura pas affect\u00e9 une autre valeur - chaque fois qu'on utilisera la variable <code>pv</code> dans notre programme, l'ordinateur utilisera la valeur <code>80</code>.</p> <p>Si on affecte une nouvelle valeur \u00e0 la variable <code>pv</code>, alors l'ancienne dispara\u00eet (on dit qu'elle est \u00e9cras\u00e9e).</p>"},{"location":"T06_Python/T6.1_Python/T6.1_1_Variables/#2-expressions-et-evaluation","title":"2. Expressions et \u00e9valuation","text":"<p>Regardons l'exemple suivant (\u00e0 reproduire dans la console ci-dessous):</p> <pre><code>&gt;&gt;&gt; a = 2\n&gt;&gt;&gt; a = 4\n&gt;&gt;&gt; a\n4\n&gt;&gt;&gt; b = a + 3\n&gt;&gt;&gt; b\n7\n&gt;&gt;&gt; b = c + 1\nTraceback (most recent call last):\n  File \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nNameError: name 'c' is not defined\n&gt;&gt;&gt; \n</code></pre> &gt;&gt;&gt;  <p>Analyse ligne par ligne</p> Ligne 1Ligne 2Lignes 3 et 4Ligne 5Ligne 8 <p>On initialise la variable <code>a</code> \u00e0 <code>2</code>.</p> <p>On r\u00e9affecte une nouvelle valeur, <code>4</code>,  \u00e0 la variable <code>a</code>.</p> <p>On demande la valeur associ\u00e9e \u00e0 <code>a</code>. Python r\u00e9pond logiquement <code>4</code>: la valeur <code>2</code> a \u00e9t\u00e9 \u00e9cras\u00e9e.</p> <p>On cr\u00e9e une nouvelle variable <code>b</code> \u00e0 laquelle on affecte <code>a + 3</code>. Ceci est une expression, Python doit au pr\u00e9alable l'\u00e9valuer avant de l'affecter. Dans l'ordre:</p> <ul> <li>Python lit d'abord le membre de droite <code>a + 3</code>.</li> <li>Il r\u00e9cup\u00e8re la valeur stock\u00e9e dans <code>a</code>, c'est-\u00e0-dire <code>4</code>.</li> <li>Il \u00e9value ensuite l'expression, ici il fait une addition : <code>4 + 3</code>.</li> <li>Il affecte \u00e0 <code>b</code> la somme obtenue, c'est-\u00e0-dire <code>7</code>. On le v\u00e9rifie aux lignes 6 et 7.</li> </ul> <p>On r\u00e9affecte \u00e0 <code>b</code> le r\u00e9sultat de l'expression <code>c + 1</code>. Or aucune variable nomm\u00e9e <code>c</code> n'a \u00e9t\u00e9 d\u00e9clar\u00e9e : on obtient une erreur, puisque Python n'a pas de valeur associ\u00e9e \u00e0 <code>c</code>.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_1_Variables/#3-types-de-variables","title":"3. Types de variables","text":"<p>Pour l'instant, les variables que nous avons manipul\u00e9es contiennent toutes des nombres entiers.</p> <p>Mais imaginons un programme qui doive manipuler les noms des Pokemons... Ce ne seront plus des nombres, mais des mots cha\u00eenes de caract\u00e8res.</p> <p>Pour diff\u00e9rencier la nature de ce que peut contenir une variable, on parle alors de type de variable.</p> <p>En voici quelques uns, que nous d\u00e9couvrirons au fil de l'ann\u00e9e :</p> <p>Types de base</p> <p>Voici les types Python les plus fr\u00e9quemment utilis\u00e9s cette ann\u00e9e:</p> Type Python Traduction Exemple <code>int</code> entier <code>42</code> <code>float</code> flottant (d\u00e9cimal) <code>3.1416</code> <code>str</code> cha\u00eene de caract\u00e8res (string) <code>\"NSI\"</code> <code>bool</code> bool\u00e9en (True ou False) <code>True</code> <code>tuple</code> p-uplet <code>(255, 127, 0)</code> <code>list</code> liste <code>[0, 1, 2, 3, 4, 5]</code> <code>dict</code> dictionnaire <code>{'Homer':43, 'Marge':41, 'Bart':12, 'Lisa':10, 'Maggie':4}</code> <code>function</code> fonction <code>print</code> <p>Conna\u00eetre le type d'une variable</p> <p>Il suffit dans la console d'utiliser la fonction <code>type</code>.</p> <pre><code>&gt;&gt;&gt; a = 1\n&gt;&gt;&gt; type(a)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; \n</code></pre> <p>Essayez avec une variable du type <code>str</code>:</p> <p>&gt;&gt;&gt; </p> En cas d'erreur <p>Une cha\u00eene de caract\u00e8res s'\u00e9crit avec des guillemets. Sans, Python l'interpr\u00e8te comme une variable...</p> <p>Jusqu'\u00e0 pr\u00e9sent, nous ne nous sommes pas occup\u00e9s de pr\u00e9ciser \u00e0 Python le type de notre variable.</p> <pre><code>a = 1\n</code></pre> <p>Mais dans certains langages, c'est obligatoire ! En C par exemple, il faut \u00e9crire :</p> <p><pre><code>int a = 1;\n</code></pre> Cela signifie (pour le langage C) que notre variable <code>a</code> n'aura pas le droit de contenir autre chose qu'un nombre entier.</p> <p>Si on \u00e9crit ensuite <pre><code>a = \"test\";\n</code></pre></p> <p>Le compilateur C renverra une erreur : on ne peut pas stocker une cha\u00eene de caract\u00e8res dans une variable qu'on a cr\u00e9\u00e9e comme \u00e9tant de type entier.</p> <p>Et en Python ?</p> <pre><code>&gt;&gt;&gt; a = 1\n&gt;&gt;&gt; type(a)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; a = \"test\"\n&gt;&gt;&gt; type(a)\n&lt;class 'str'&gt;\n</code></pre> <p>Python a chang\u00e9 tout seul le type de notre variable, sans intervention ! On parle de typage dynamique.</p> <p>Source d'erreurs</p> <p>Ce typage dynamique, s'il all\u00e8ge la d\u00e9claration de variables, peut \u00e9galement \u00eatre la cause de bugs...</p> <p>C'est pourquoi il faut toujours avoir en t\u00eate le type des variables qu'on manipule.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_1_Variables/#4-regles-de-nommage","title":"4. R\u00e8gles de nommage","text":"<p>Pour nommer correctement une variable, il existe des r\u00e8gles \u00e0 respecter.</p> <p>R\u00e8gles obligatoires</p> <ul> <li> <p>le nom de la variable ne peut contenir que les caract\u00e8res suivants:</p> <ul> <li>des lettres non accentu\u00e9es (attention, minuscule et majuscule sont des caract\u00e8res diff\u00e9rents)</li> <li>des chiffres (mais pas comme premier caract\u00e8re)</li> <li>le tiret du bas _ (underscore, tiret du 8)</li> </ul> </li> <li> <p>le nom de la variable ne doit pas commencer par un chiffre;</p> </li> <li>le nom de la variable ne doit pas contenir d'espace;</li> <li>le nom de la variable ne doit pas \u00eatre un mot cl\u00e9 du langage.</li> </ul> Mots cl\u00e9 de Python <p><p> andas assert  break class  continue   def    del elif   else   except False  finally for   from   global    if   import in is  lambda None not     or  pass raise   return True try   while with    yield  </p></p> <p>Hormis pour les indices (de boucles, de tableaux...) un nom de variable (dans un programme destin\u00e9 \u00e0 \u00eatre lu, par vous ou quelqu'un d'autre) doit imp\u00e9rativement avoir du sens </p> <p>Oui mais pour donner du sens, il faut souvent plusieurs mots... La longueur du nom de la variable n'est plus un probl\u00e8me depuis que la grande majorit\u00e9 des IDE proposent la compl\u00e9tion automatique.  Mais comment former ces longs mots ?</p> <p>Comment accoler des mots</p> <ul> <li>S'il est compos\u00e9, le nom peut \u00eatre de la forme:<ul> <li><code>snake_case</code> : les mots sont s\u00e9par\u00e9s par des underscores. Conseill\u00e9 en Python.</li> <li><code>camelCase</code> : les mots sont s\u00e9par\u00e9s par des majuscules mais la 1\u00e8re lettre est minuscule. Conseill\u00e9 en Javascript.</li> <li><code>PascalCase</code> : les mots sont s\u00e9par\u00e9s par des majuscules et la 1\u00e8re lettre est majuscule. Conseill\u00e9 en C.</li> <li><code>kebab-case</code> : les mots sont s\u00e9par\u00e9s par des tirets courts. Conseill\u00e9 en HTML - CSS. </li> </ul> </li> </ul> <p>Sans surprise, en Python, nous utiliserons donc le <code>snake_case</code>.</p> <p></p> <p>R\u00e8gle d'or</p> <p>On ne donne jamais un nom de variable au hasard, on le choisit pour qu'il soit explicite.</p> <p>C'est-\u00e0-dire que si on doit manipuler une variable qui stocke l'\u00e2ge du capitaine, il faut l'\u00e9crire non pas <code>a</code> mais <code>age_capitaine</code>.</p> <pre><code># PAS BIEN\nif d == 1:\n    cep += vm\n\n# BIEN\nif date == 1:\n    compte_epargne += versement_mensuel\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_1_Variables/#5-exercices","title":"5. Exercices","text":"<p>Notebook d'exercices</p> <p>https://capytale2.ac-paris.fr/web/c/d22e-3854186 </p> <ol> <li> <p>Mais ce n'est pas tout \u00e0 fait exact. On verra exactement plus tard comment cela se passe. Pour l'instant, cette image mentale suffira.\u00a0\u21a9</p> </li> </ol>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/","title":"6.1.2 La boucle <code>for</code>","text":"<p>Un ordinateur est fait pour effectuer des calculs longs et r\u00e9p\u00e9titifs.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#1-le-principe","title":"1. Le principe","text":"<p>Imaginons - nous sommes en 2074 - une maman (ou un papa) qui souhaite faire manger \u00e0 son enfant les 10 derni\u00e8res cuill\u00e8res de soupe... en programmant son robot domestique pour qu'il annonce ces phrases \u00e0 sa place.</p> <p>On pourrait imaginer un code qui ressemble \u00e0 \u00e7a:</p> <pre><code>print(\"Une cuill\u00e8re pour maman\")\nprint(\"Une cuill\u00e8re pour papa\")\nprint(\"Une cuill\u00e8re pour mamie Fran\u00e7oise\")\nprint(\"Une cuill\u00e8re pour papy Jacques\")\nprint(\"Une cuill\u00e8re pour m\u00e9m\u00e9 Paulette\")\nprint(\"Une cuill\u00e8re pour tata Jacqueline\")\nprint(\"Une cuill\u00e8re pour tonton Michel\")\nprint(\"Une cuill\u00e8re pour le cousin Maurice\")\nprint(\"Une cuill\u00e8re pour la cousine Gertrude\")\nprint(\"Une cuill\u00e8re pour M\u00e9dor\")\n</code></pre> <p>C'est tr\u00e8s r\u00e9p\u00e9titif. Et heureusement qu'il n'y a que 10 cuill\u00e8res...</p> <p>D'autant que chaque instruction est quasiment identique, seul le nom du membre de la famille change.</p> <p>En fran\u00e7ais, on serait tent\u00e9 de r\u00e9sumer en </p> <p>\u00abannonce une cuill\u00e8re pour chacun des 10 membres de la famille\u00bb</p> <p>Heureusement, dans tous les langages de programmation, il existe une instruction qui permet de r\u00e9p\u00e9ter une instruction (ou plusieurs instructions) pour chaque \u00e9l\u00e9ment d'un ensemble de valeurs donn\u00e9: la boucle <code>for</code>.</p> <p>Vocabulaire</p> <p>En programmation, on parle de boucle pour toute instruction qui permet de r\u00e9p\u00e9ter des instructions. On utilise plut\u00f4t le verbe it\u00e9rer et on parle d'it\u00e9rations.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#2-les-ensembles-de-valeurs-enumerables-iterables","title":"2. Les ensembles de valeurs \u00e9num\u00e9rables / it\u00e9rables","text":"<p>En math\u00e9matiques, on dit qu'un ensemble est d\u00e9nombrable lorsqu'on peut associer \u00e0 chaque \u00e9l\u00e9ment de l'ensemble un nombre (traditionnellement 1, 2, 3...)</p> <ul> <li>les fraises Tagada d'un paquet sont d\u00e9nombrables.</li> <li>les voitures qui roulent sur l'autoroute sont d\u00e9nombrables.</li> <li>l'eau qui coule d'un robinet n'est pas d\u00e9nombrable.</li> </ul> <p>En informatique, il existe un concept similaire qui va d\u00e9signer les objets que l'on peut \u00e9num\u00e9rer, c'est-\u00e0-dire les d\u00e9composer en une succession ordonn\u00e9e d'\u00e9l\u00e9ments. On les appelle les \u00e9num\u00e9rables ou les it\u00e9rables (Python utilise le mot anglais <code>iterable</code>).</p> <ul> <li>la variable <code>NSI</code> (qui est de type <code>string</code>) est \u00e9num\u00e9rable : on peut la d\u00e9composer en  <code>N</code>,  <code>S</code>, <code>I</code>.</li> <li>la variable <code>[4, 3, 17]</code>  (qui est de type <code>list</code><sup>1</sup>) est \u00e9num\u00e9rable : on peut la d\u00e9composer en  <code>4</code>,  <code>3</code>, <code>17</code>.</li> <li>la variable <code>5</code>  (qui est de type <code>int</code>) n'est PAS \u00e9num\u00e9rable : on ne peut pas la d\u00e9composer. </li> </ul>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#3-la-syntaxe","title":"3. La syntaxe","text":"<p>La boucle <code>for</code></p> <p>Pour mettre en place cette boucle, on a besoin d'identifier:</p> <ul> <li>les instructions \u00e0 r\u00e9p\u00e9ter;</li> <li>pour quelles valeurs diff\u00e9rentes on doit les r\u00e9p\u00e9ter: on a donc besoin d'une variable et d'un iterable que cette variable va parcourir;</li> <li>identifier dans les instructions ce qui d\u00e9pend de cette variable de boucle.</li> </ul> <p>Syntaxe g\u00e9n\u00e9rale:</p> <p><pre><code>for var in iterable:\n    *instructions \u00e0 r\u00e9p\u00e9ter*\n</code></pre> o\u00f9 <code>var</code> est un nom de variable (non pr\u00e9c\u00e9demment d\u00e9clar\u00e9e dans le programme), <code>iterable</code> un objet ... it\u00e9rable.</p> <p>On dit que <code>var</code> parcourt l'ensemble <code>iterable</code>.</p> <p>Exemples essentiels \u00e0 tester</p> avec une cha\u00eene de caract\u00e8resavec une listesans appel \u00e0 la variable de boucleavec un <code>range</code> <pre><code>for l in \"INRIA\":\n    print(l)\n</code></pre> \u00c9tude du code <p>\u00c9tudions, gr\u00e2ce \u00e0 PythonTutor, le d\u00e9tail de cette ex\u00e9cution.</p> <p>Cliquez sur Next et observez bien l'\u00e9volution de la variable <code>k</code>.</p> <p> </p> <pre><code>for a in [1, 2, 3, 4]:\n    b = 2 * a\n    print(\"le double de\", a, \"est\", b)\n</code></pre> \u00c9tude du code <p>\u00c9tudions, gr\u00e2ce \u00e0 PythonTutor, le d\u00e9tail de cette ex\u00e9cution.</p> <p>Cliquez sur Next et observez bien l'\u00e9volution de la variable <code>a</code>. </p> <p> </p> <pre><code>for a in [1, 2, 3, 4, 5, 6]:\n    print(\"miaou\")\n</code></pre> \u00c9tude du code <p>\u00c9tudions, gr\u00e2ce \u00e0 PythonTutor, le d\u00e9tail de cette ex\u00e9cution.</p> <p>Cliquez sur Next et observez bien l'\u00e9volution de la variable <code>a</code>.   </p> <pre><code>for k in range(10):\n    print(\"We're up all night to get lucky\")\n</code></pre> \u00c9tude du code <p>\u00c9tudions, gr\u00e2ce \u00e0 PythonTutor, le d\u00e9tail de cette ex\u00e9cution.</p> <p>Cliquez sur Next et observez bien l'\u00e9volution de la variable <code>k</code>. </p> <p> </p> <p>Syntaxe</p> <p>Il faut absolument un caract\u00e8re <code>:</code> \u00e0 la fin de la ligne du <code>for</code> !</p> <p>Indentation</p> <p>C'est le d\u00e9calage par rapport \u00e0 la marge - qu'on appelle indentation - qui d\u00e9termine quelles sont les instructions \u00e0 r\u00e9p\u00e9ter !</p> <p>Exemples : attention \u00e0 l'indentation</p> <p>Tester les diff\u00e9rents codes suivants dans votre IDE ou dans la console ci-dessous:</p> Code 1Code 2Code 3 <pre><code>for k in [\"toto\", \"tata\", \"tutu\"]:\nprint(\"Bonjour\", end=\" \")\nprint(k)\n</code></pre> <pre><code>for k in [\"toto\", \"tata\", \"tutu\"]:\n    print(\"Bonjour\", end=\" \")\n    print(k)\n</code></pre> <pre><code>for k in [\"toto\", \"tata\", \"tutu\"]:\n    print(\"Bonjour\", end=\" \")\nprint(k)\n</code></pre> <p>Exemple: Parcours de liste</p> <p>Comme vous vous apercevrez tout au long de l'ann\u00e9e, parcourir une liste (c'est-\u00e0-dire r\u00e9p\u00e9ter des instructions pour chaque \u00e9l\u00e9ment d'une liste les uns apr\u00e8s les autres) est quelque chose que l'on va faire tr\u00e8s souvent (euph\u00e9misme). </p> <p>Par exemple:</p> <p><pre><code>for jour in [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\"]:\n    print(f\"Je vais au lyc\u00e9e le {jour}\")\n</code></pre> va donner: <pre><code>Je vais au lyc\u00e9e le lundi\nJe vais au lyc\u00e9e le mardi\nJe vais au lyc\u00e9e le mercredi\nJe vais au lyc\u00e9e le jeudi\nJe vais au lyc\u00e9e le vendredi\n</code></pre></p> <p>Remarque 1: Bien souvent, la liste sera stock\u00e9e dans une variable.</p> <pre><code>semaine = [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\"]\nfor jour in semaine:\n    print(f\"Je vais au lyc\u00e9e le {jour}\")\n</code></pre> <p>Remarque 2: Notez que l'emploi de noms de variables explicites rend la lecture et l'\u00e9criture du code bien plus simple.</p> <pre><code>x = [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\"]\nfor k in x:\n    print(f\"Je vais au lyc\u00e9e le {k}\")\n</code></pre> <p>Exercice 0</p> \u00c9nonc\u00e9Correction <p>Compl\u00e9ter le code suivant pour satisfaire le parent de 2074 qui veur faire manger de la soupe \u00e0 son enfant.</p> <pre><code>liste_noms = [\"maman\", \"papa\", \"mamie Fran\u00e7oise\", \"papy Jacques\", \"m\u00e9m\u00e9 Paulette\", \"tata Jacqueline\", \"tonton Michel\", \"le cousin Maurice\", \"la cousine Gertrude\", \"M\u00e9dor\"]\n\nfor\n</code></pre> <pre><code>liste_noms = [\"maman\", \"papa\", \"mamie Fran\u00e7oise\", \"papy Jacques\", \"m\u00e9m\u00e9 Paulette\", \"tata Jacqueline\", \"tonton Michel\", \"le cousin Maurice\", \"la cousine Gertrude\", \"M\u00e9dor\"]\n\nfor nom in liste_noms:\n    print(\"Une cuill\u00e8re pour\", nom)\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#4-a-propos-du-range","title":"4. \u00c0 propos du <code>range</code>","text":"<p>Il arrive tr\u00e8s fr\u00e9quemment que la variable soit tout simplement un entier, qui doit parcourir un ensemble de nombres entiers cons\u00e9cutifs.</p> <p>Par exemple, imaginons que votre professur.e d'EPS, \u00e0 court d'id\u00e9es d'activit\u00e9s \u00e0 cause des conditions sanitaires, d\u00e9cide de vous faire faire 20 tours de stade et vous demande d'annoncer \u00e0 chaque passage sur la ligne de d\u00e9part \u00e0 quel tour vous en \u00eates...</p> <p>Vous allez donc annoncer successivement \u00abTour 1!\u00bb, \u00abTour 2!\u00bb, \u00abTour 3!\u00bb, etc. jusqu'\u00e0 \u00abTour 20!\u00bb.</p> <p>Pour repr\u00e9senter cette situation, on peut donc imaginer un code ressemblant \u00e0: <pre><code>for k in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]:\n    print(\"Tour\", k)\n</code></pre> Mais la liste est tr\u00e8s p\u00e9nible \u00e0 \u00e9crire.</p> <p>Heureusement, comme vous avez d\u00fb le comprendre dans le dernier exemple du 3., l'objet de type <code>range</code> permet de g\u00e9n\u00e9rer ce genre d'ensemble de nombres entiers cons\u00e9cutifs.</p> <p>G\u00e9n\u00e9rer une plage de nombres entiers</p> <p>L'objet <code>range(start, stop, step)</code>:</p> <ul> <li> <p>il renvoie une s\u00e9quence de nombres entiers en partant de <code>start</code> (inclus) jusqu'\u00e0 <code>stop</code> (exclus), en incr\u00e9mentant de <code>step</code>;</p> </li> <li> <p><code>start</code> est facultatif et vaut 0 par d\u00e9faut;</p> </li> <li> <p><code>step</code> est facultatif et vaut 1 par d\u00e9faut. Mais si on veut pr\u00e9ciser <code>step</code>, alors il faut donner aussi <code>start</code>, m\u00eame si sa valeur est 0.</p> </li> </ul> Attention <p>Un objet <code>range</code> n'est pas de type <code>list</code>. Mais on peut le convertir en liste avec la fonction <code>list</code>.</p> <pre><code>&gt;&gt;&gt; range(10)\nrange(0, 10)\n&gt;&gt;&gt; list(range(10))\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n&gt;&gt;&gt; \n</code></pre> <p>Exemples</p> <pre><code>&gt;&gt;&gt; list(range(10))\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n&gt;&gt;&gt; list(range(2, 10))\n[2, 3, 4, 5, 6, 7, 8, 9]\n&gt;&gt;&gt; list(range(1, 20 , 3))\n[1, 4, 7, 10, 13, 16, 19]\n</code></pre> Question \u00c9nonc\u00e9IndicationCorrection <p>Comment g\u00e9n\u00e9rer les nombres entiers de 1 \u00e0 20 (comme dans l'exemple des tours de terrain) avec un <code>range</code>?</p> <p>Il ne faut pas commencer \u00e0 0... et le <code>stop</code> n'est pas inclus dans la s\u00e9quence !</p> <p>Il faut utiliser <code>range(1, 21)</code> .</p>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#5-la-double-boucle-imbriquee","title":"5. La double boucle imbriqu\u00e9e","text":"<p>Il est tr\u00e8s souvent utile d'imbriquer une boucle dans une autre, notamment lors du parcours de tous les pixels d'une image (voir les exercices graphiques avec Pygame).</p> <p>Prenons pour l'instant un exemple num\u00e9rique : Comment \u00e9crire tous les produits de deux nombres compris entre 1 et 5?</p> <p>Il faut pour cela que le premier facteur parcourre <code>range(1, 6)</code> mais \u00e9galement le deuxi\u00e8me facteur!</p> <p>On obtient donc le code suivant:</p> <pre><code>for x in range(1, 6):\n    for y in range(1, 6):\n        print(x * y)\n</code></pre> <p> </p> <p>\u00c0 vous d'essayer</p> \u00c9nonc\u00e9Correction <p>Comment obtenir l'affichage suivant?</p> <pre><code>Papa dit : \u00ab et une cuill\u00e8re pour Riri ! \u00bb\nPapa dit : \u00ab et une cuill\u00e8re pour Fifi ! \u00bb\nPapa dit : \u00ab et une cuill\u00e8re pour Loulou ! \u00bb\nMaman dit : \u00ab et une cuill\u00e8re pour Riri ! \u00bb\nMaman dit : \u00ab et une cuill\u00e8re pour Fifi ! \u00bb\nMaman dit : \u00ab et une cuill\u00e8re pour Loulou ! \u00bb\nMamie dit : \u00ab et une cuill\u00e8re pour Riri ! \u00bb\nMamie dit : \u00ab et une cuill\u00e8re pour Fifi ! \u00bb\nMamie dit : \u00ab et une cuill\u00e8re pour Loulou ! \u00bb\n</code></pre> <pre><code>for parent in [\"Papa\", \"Maman\", \"Mamie\"]:\n    for enfant in [\"Riri\", \"Fifi\", \"Loulou\"]:\n        print(parent, \"dit : \u00ab et une cuill\u00e8re pour \", enfant, \"! \u00bb)\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#6-pour-conclure","title":"6. Pour conclure","text":"<p>\u00c0 retenir</p> <ul> <li>La boucle <code>for</code> s'utilise lorsqu'on conna\u00eet \u00e0 l'avance le nombre de r\u00e9p\u00e9titions \u00e0 effectuer: soit un nombre entier, soit un ensemble de valeurs contenus dans un iterable. On parle de boucle born\u00e9e.</li> <li> <p>La variable de boucle prend alors successivement chacune des valeurs de l'iterable, et les instructions sont r\u00e9p\u00e9t\u00e9es pour chaque valeur.</p> </li> <li> <p>Les instructions r\u00e9p\u00e9t\u00e9es peuvent - mais ce n'est pas obligatoire - faire appel \u00e0 la variable de boucle, mais il ne faut pas que ces instructions la modifient.</p> </li> <li> <p>Ne pas oublier les <code>:</code> et l'indentation !</p> </li> <li><code>range(n)</code> g\u00e9n\u00e8re une s\u00e9quence de <code>n</code> nombres entiers: on s'en servira d\u00e8s qu'on aura besoin de r\u00e9p\u00e9ter <code>n</code> fois des instructions.</li> </ul>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#7-exercices","title":"7. Exercices","text":""},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#series-1-et-2","title":"S\u00e9ries 1 et 2","text":"<p>Notebook d'exercices</p> <p>S\u00e9rie 1: https://capytale2.ac-paris.fr/web/c/609d-3885829 </p> <p>S\u00e9rie 2: https://capytale2.ac-paris.fr/web/c/59d8-3886016 </p> <p>Quelques corrections</p> Exercice 4Exercice 6Exercice 8Exercice 9 <pre><code>mystere = [111, 107, 44, 32, 98, 105, 101, 110, 32, 106, 111, 117, 233]\nmot_secret = \"\"\nfor code in mystere:\n    mot_secret = mot_secret + chr(code)\n\nprint(mot_secret)\n</code></pre> <p>\u00c0 la ligne 3, on peut aussi \u00e9crire <code>somme += k</code>.</p> <pre><code>somme = 0\nfor k in range(1, 1001):\n    somme = somme + k\n\nprint(somme)\n</code></pre> <p>La ligne 4 est \u00e9quivalente \u00e0 <code>somme = somme + n</code>.</p> Avec variable compteurAvec la fonction <code>len</code> <p>On se sert d'une variable compteur qui va permettre de r\u00e9cup\u00e9rer le nombre de passages dans la boucle, c'est-\u00e0-dire le nombre d'\u00e9l\u00e9ments de la liste.</p> <pre><code>nombres = [15, 8, 12, 19, 10, 17]\nsomme = 0\nnb_valeurs = 0\nfor n in nombres:\n    somme += n\n    nb_valeurs += 1\nmoyenne = somme / nb_valeurs\n\nprint(moyenne)\n</code></pre> <p>La fonction <code>len</code> donne le nombre d'\u00e9l\u00e9ments d'un iterable.</p> <pre><code>nombres = [15, 8, 12, 19, 10, 17]\nsomme = 0\nfor n in nombres:\n    somme += n\nmoyenne = somme / len(nombres)\n\nprint(moyenne)\n</code></pre> <p><p> </p></p>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#serie-3","title":"S\u00e9rie 3","text":"<p>Notebook d'exercices</p> <p>https://capytale2.ac-paris.fr/web/c/4ed4-1823957 </p> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Proposer un code qui \u00e9crit la table de multiplication de 7.</p> <p>La sortie doit ressembler \u00e0: <pre><code>7x1 = 7\n7x2 = 14\n\n...\n\n7x10 = 70\n</code></pre></p> <pre><code>for k in range(1, 11):\n    print(\"7 x\", k, \"=\", 7*k)\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9IndicationCorrection <p>Sur un jeu d'\u00e9checs, les cases sont rep\u00e9r\u00e9es par une lettre (de A jusqu'\u00e0 H) et par un chiffre (de 1 jusqu'\u00e0 8).</p> <p>Les cases sont donc A1, A2, A3, ..., H7, H8.</p> <p>Proposer un code qui \u00e9crit toutes les cases possibles.</p> <p>Pour convertir un entier en cha\u00eene de caract\u00e8res, on utilise la fonction <code>str</code>: <pre><code>&gt;&gt;&gt; k = 3\n&gt;&gt;&gt; k\n3\n&gt;&gt;&gt; str(k)\n'3'\n</code></pre></p> <pre><code>for l in \"ABCDEFGH\":\n    for k in range(1, 9):\n        print(l + str(k))\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_2_For/#serie-4-avec-pygame","title":"S\u00e9rie 4: avec Pygame","text":"<p>Consulter d'abord la page sur Pygame (Onglet Extras).</p> <p>Dans tous les exercices, votre code doit contenir au moins une boucle <code>for</code>.</p> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>L'objectif est d'obtenir un d\u00e9grad\u00e9 de gris:</p> <p> </p> <p>Pour rappel, un niveau de gris est un couleur RGB dont les trois composantes (entre 0 et 255) rouge, verte et bleue sont identiques.</p> <p>On prendra une fen\u00eatre de 256x100 pixels.</p> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <ol> <li> <p>L'objectif est d'obtenir dix lignes al\u00e9atoires, de couleur al\u00e9atoire et d'\u00e9paisseur 5, sur un canevas de 300x300 pixels.</p> <p>La fonction <code>randint(a, b)</code> permet d'obtenir un entier pseudo-al\u00e9atoire entre <code>a</code> et <code>b</code> <pre><code>&gt;&gt;&gt; from random import randint\n&gt;&gt;&gt; randint(0, 10)\n2\n</code></pre></p> <p> </p> </li> <li> <p>M\u00eame consigne avec les lignes qui \u00abs'encha\u00eenent\u00bb:</p> <p> </p> </li> </ol> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un programme qui trace un quadrillage (espacement de 20 pixels) sur un canevas de 300x300 pixels.</p> <p> </p> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un programme qui dessine une ligne de 20 carr\u00e9s de taille 50x50, dont la couleur sera al\u00e9atoire.</p> <p> </p> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>Animer le programme de l'exercice pr\u00e9c\u00e9dent en ins\u00e9rant les instructions de l'exercice pr\u00e9c\u00e9dent dans la boucle des \u00e9v\u00e9nements.</p> <p>Vous pouvez ralentir l'animation en utilisant l'instruction: <pre><code>pygame.time.delay(1000) # pause de 1000 millisecondes\n</code></pre></p> <p>Exercice  6</p> \u00c9nonc\u00e9Correction <p>Reprendre l'exercice 4, mais cette fois avec un carr\u00e9 de carr\u00e9s... (penser \u00e0 r\u00e9duire la taille de moiti\u00e9).</p> <p> </p> <p>Exercice  7</p> \u00c9nonc\u00e9IndicationsCorrection <p>Reproduire la figure suivante sur un canevas de 256x256 pixels.</p> <p> </p> <ul> <li>la composante bleue est toujours 0;</li> <li>faire varier les composantes rouge (abscisse) et verte (ordonn\u00e9e).</li> </ul> <p>Exercice  8</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un programme qui affiche al\u00e9atoirement 100 disques dans une fenetre 300x300, de diam\u00e8tre compris entre 10 et 50 et de couleur de remplissage al\u00e9atoire.</p> <p>Attention, les disques ne devront pas \u00eatre \u00abcoup\u00e9s\u00bb sur les bords de l'\u00e9cran.</p> <p> </p> <p>Exercice  9</p> \u00c9nonc\u00e9Correction <p>Construire des cercles concentriques, en alternant les couleurs.</p> <p> </p> <ol> <li> <p>un objet de type <code>list</code> est un type construit que nous \u00e9tudierons au th\u00e8me 2, qui s'\u00e9crit entre crochets, ses \u00e9l\u00e9ments \u00e9tant s\u00e9par\u00e9s par une virgule (comme dans cet exemple). On peut donc parcourir ses \u00e9l\u00e9ments.\u00a0\u21a9</p> </li> </ol>"},{"location":"T06_Python/T6.1_Python/T6.1_3_If/","title":"6.1.3 L'instruction conditionnelle <code>if</code>","text":"<p>L'instruction conditionnelle <code>if</code> permet de soumettre l'ex\u00e9cution d'instructions \u00e0 une condition donn\u00e9e. Cette condition sera une expression bool\u00e9enne, comme pour la boucle <code>while</code>.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_3_If/#1-premiers-exemples","title":"1. Premiers exemples","text":"<p>Testez les codes suivants (plusieurs fois en variant les valeurs) dans un IDE:</p> <p><code>if</code></p> <pre><code>n = int(input(\"Donne moi un nombre: \"))\nif n == 42:\n    print(\"C'est le sens de la vie\")\n</code></pre> <p><code>if else</code></p> <pre><code>n = int(input(\"Donne moi un nombre: \"))\nif n == 42:\n    print(\"C'est le sens de la vie\")\nelse:\n    print(\"Ce n'est pas le sens de la vie\")\n</code></pre> <p>imbriquer les <code>if</code></p> <pre><code>moyenne = 13\n\nif moyenne &lt; 8:\n    print(\"rat\u00e9\")\nelse:\n    if moyenne &lt; 10:\n        print(\"rep\u00eachage\")\n    else:\n        if moyenne &lt; 12:\n            print(\"admis\")\n        else:\n            if moyenne &lt; 14:\n                print(\"mention AB\")\n            else:\n                if moyenne &lt; 16:\n                    print(\"mention B\")\n                else:\n                    print(\"mention TB\")\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_3_If/#2-la-syntaxe","title":"2. La syntaxe","text":"<p>L'instruction <code>if</code></p> <p>Syntaxe g\u00e9n\u00e9rale: <pre><code>if expression:\n    *instructions \u00e0 effectuer si expression est vraie*\nelse:\n    *instructions \u00e0 effectuer si expression est fausse*\n</code></pre></p> <p>Remarques:</p> <ul> <li><code>expression</code> est \u00e9valu\u00e9e par Python \u00e0 l'ex\u00e9cution du programme : elle doit renvoyer une valeur bool\u00e9enne (<code>True</code> ou <code>False)</code>. En pratique, c'est souvent une \u00e9galit\u00e9, une comparaison, une appartenance ou une op\u00e9ration bool\u00e9enne (<code>and</code>, <code>or</code>) sur ce genre d'expressions ;</li> <li>il faut terminer la ligne commen\u00e7ant par <code>if</code> et <code>else</code> par <code>:</code> , comme pour le <code>for</code> ;</li> <li>les instructions \u00e0 effectuer selon l'\u00e9valuation d'<code>expression</code> doivent \u00eatre indent\u00e9es;</li> <li>le <code>else</code> est facultatif (comme au premier exemple);</li> <li>en cas d'emploi du <code>else</code>, aucune expression n'est attendue.</li> </ul> <p>Exemple incontournable</p> <p>Pour tester si un nombre <code>n</code> est divisible par un nombre <code>d</code>, on teste si le reste de la division euclidienne de <code>n</code> par <code>d</code> est \u00e9gal \u00e0 0 :</p> <pre><code>n = int(input(\"Donne moi un nombre: \"))\nif n % 2 == 0:\n    print(n, \"est un nombre pair\")\nelse:\n    print(n, \"est un nombre impair\")\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_3_If/#3-elif-et-les-cas-multiples","title":"3. <code>elif</code> et les cas multiples","text":"<p>Dans les situations o\u00f9 l'on veut effectuer des instructions diff\u00e9rentes selon les diff\u00e9rentes valeurs prises par une variable, comme dans le troisi\u00e8me exemple, on peut imbriquer les instructions <code>if</code> ... <code>else</code>.</p> <p>Mais cela est vite long et peu lisible, et les diff\u00e9rents niveaux d'indentation sont parfois pi\u00e9geux.</p> <p>Il existe alors une instruction qui contracte <code>else</code> et <code>if</code> : <code>elif</code> (sinon si).</p> <p>Le code du troisi\u00e8me exemple devient alors:</p> <pre><code>if moyenne &lt; 8:\n    print(\"rat\u00e9\")\nelif moyenne &lt; 10:\n    print(\"rep\u00eachage\")\nelif moyenne &lt; 12:\n    print(\"admis\")\nelif moyenne &lt; 14:\n    print(\"mention AB\")\nelif moyenne &lt; 16:\n    print(\"mention B\")\nelse:\n    print(\"mention TB\")\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_3_If/#4-exercices","title":"4. Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un programme qui demande deux nombres et qui affiche le plus grand des deux.</p> <p>Rappel: pour stocker dans une variable <code>n</code> un nombre tap\u00e9 au clavier par l'utilisateur, on utilise l'instruction:</p> <pre><code>n = int(input('Entrez un nombre'))\n</code></pre> <pre><code>a = int(input('Donnez moi un nombre: '))\nb = int(input('Donnez moi un autre nombre: '))\nif a &gt; b:\n    m = a\nelse:\n    m = b\nprint(f'le plus grand des deux est {m}')\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>Afficher tous les nombres entre 1 et 100 qui sont divisibles \u00e0 la fois par 2 et par 7. </p> <p>for k in range(1, 101):     if k % 2 == 0 and k % 7 == 0:         print(k)</p> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>On calcule l'IMC (Indice de Masse Corporelle) par la formule \\(I = M / T^2\\) o\u00f9 M est la masse (en kg) d'une personne et T sa taille (en m). Selon la classification de l'OMS, une personne est en \u00e9tat de maigreur si son IMC est inf\u00e9rieur \u00e0 18 et en surpoids si son IMC est sup\u00e9rieur \u00e0 25. </p> <ol> <li>\u00c9crire un programme qui demande la masse et la taille d'une personne, calcule son IMC et annonce si la personne est en \u00e9tat de maigreur.</li> <li>Modifier ensuite le programme pour qu'il annonce si la personne est en \u00e9tat de maigreur, en surpoids ou bien si son IMC est normal.</li> </ol> <pre><code>masse = int(input('Donnez moi votre masse (en kg): '))\ntaille = float(input('Donnez moi votre taille (en m): '))\nimc = masse / (taille ** 2)\nif imc &lt;= 18:\n    print('vous \u00eates en \u00e9tat de maigreur')\nelif imc &gt;= 25:\n    print('vous \u00eates en surpoids')\nelse:\n    print('votre imc est dans la norme')\n</code></pre> <p>Exercice  4</p> \u00c9nonc\u00e9Correction 1Correction 2 <p>Une ann\u00e9e est d\u00e9clar\u00e9e bissextile (et compte donc 366 jours au lieu de 365) dans l'un des deux cas :</p> <ul> <li>elle est divisible par 4 mais n'est pas divisible par 100 ;</li> <li>elle est divisible par 400.</li> </ul> <p>\u00c9crire un code qui d\u00e9termine si une ann\u00e9e est bissextile ou non.</p> <pre><code>annee = int(input('Ann\u00e9e ? '))\nif annee % 4 == 0 and annee % 100 !=0:\n    print('ann\u00e9e bissextile')\nelif annee % 400 == 0:\n    print('annee bissextile')\nelse:\n    print('annee non bissextile')\n</code></pre> <pre><code>annee = int(input('Ann\u00e9e ? '))\nif (annee % 4 == 0 and annee % 100 != 0) or annee % 400 == 0:\n    print('ann\u00e9e bissextile')\nelse:\n    print('annee non bissextile')\n</code></pre> <p>Exercice  5</p> \u00c9nonc\u00e9IndicationsCorrection <p>Compter le nombre de voyelles de la phrase <code>'cet exercice est prodigieusement ennuyeux'</code>.</p> <p>\u00c0 l'aide de la fonction <code>len</code> qui renvoie la longueur d'un iterable, donner ensuite le nombre de consonnes.</p> <ul> <li>Utiliser une chaine de caract\u00e8res contenant toutes les voyelles et tester l'appartenance de chaque lettre \u00e0 cette chaine;</li> <li>Utiliser une variable compteur.</li> </ul> <pre><code>phrase = 'cet exercice est prodigieusement ennuyeux'`\nvoyelles = 'aeiouy' # on peut aussi utiliser une liste, mais moins pratique, non?\nnb_voyelles = 0\nnb_espaces = 0\nfor lettre in phrase:\n    if lettre in voyelles:\n        nb_voyelles += 1\n    elif lettre == :\n        nb_espaces += 1\nnb_consonnes = len(phrase) - nb_voyelles - nb_espaces\nprint(f'il y a {nb_voyelles} et {nb_consonnes} consonnes dans cette phrase.')\n</code></pre> <p>Exercice  6</p> \u00c9nonc\u00e9Correction 1Correction 2 <p>Le jeu du FizzBuzz : il s'agit de compter \u00e0 partir de 1 en rempla\u00e7ant certains nombres par Fizz, Buzz ou Fizzbuzz :</p> <ul> <li>si le nombre est divisible par 3, on ne le dit pas et on le remplace par Fizz.</li> <li>si le nombre est divisible par 5, on ne le dit pas et on le remplace par Buzz.</li> <li>si le nombre est divisible par 3 et par 5, on ne le dit pas et on le remplace par FizzBuzz.</li> <li>dans tous les autres cas, on donne le nombre.</li> </ul> <p>Ainsi on doit obtenir : 1, 2, Fizz, 4, Buzz, Fizz, 7, 8, etc.</p> <p>\u00c9crire un code qui joue au FizzBuzz jusqu'\u00e0 50 (ou plus).</p> <pre><code>for nombre in range(1, 51):\n    if nombre%3 == 0 and nombre%5 == 0:\n        print('FizzBuzz')\n    elif nombre%3 == 0:\n        print('Fizz')\n    elif nombre%5 == 0:\n        print('Buzz')\n    else:\n        print(nombre)\n</code></pre> <p>Exercice  7</p> \u00c9nonc\u00e9Correction <p>R\u00e9aliser un damier (couleurs au choix) avec pygame:</p> <p> </p>"},{"location":"T06_Python/T6.1_Python/T6.1_4_While/","title":"6.1.4 La boucle <code>while</code>","text":"<p>La boucle <code>for</code> s'utilise lorsqu'on conna\u00eet \u00e0 l'avance le nombre de r\u00e9p\u00e9titions \u00e0 effectuer: soit un nombre entier, soit un ensemble de valeurs contenus dans un iterable dont le nombre de valeurs est fixe. On parle de boucle born\u00e9e.</p> <p>Mais il arrive fr\u00e9quemment qu'on doive r\u00e9p\u00e9ter des instructions un certain nombre de fois, qui n'est pas connu \u00e0 l'avance. On a donc besoin d'une boucle non born\u00e9e, <code>while</code> en Python,  qui s'\u00e9x\u00e9cutera tant qu'une condition est r\u00e9alis\u00e9e et qui stoppera d\u00e8s que cette condition ne le sera plus.</p> <p>Si jamais cela arrive...</p> <p> </p>"},{"location":"T06_Python/T6.1_Python/T6.1_4_While/#1-un-premier-exemple","title":"1. Un premier exemple","text":"<p>Combien de fois doit-on plier une feuille de papier pour que son \u00e9paisseur d\u00e9passe la hauteur de la Tour Eiffel (324 m)?</p> <p>Sous r\u00e9serve que cela soit techniquement possible, on va donc partir d'une feuille de papier classique, d'une \u00e9paisseur de 0,1 mm, puis on va plier, plier, plier... sachant que l'\u00e9paisseur va doubler \u00e0 chaque pliage.</p> <p>Il est donc n\u00e9cessaire d'utiliser une boucle pour r\u00e9p\u00e9ter ces pliages (c'est-\u00e0-dire les calculs successifs de l'\u00e9paisseur de papier). R\u00e9peter, d'accord, mais combien de fois? Justement, on ne le sait pas, puisque c'est la question !!!</p> <p>En revanche, on sait qu'on doit s'arr\u00eater de plier d\u00e8s que l'\u00e9paisseur de papier sera sup\u00e9rieure \u00e0 324 m. Autrement dit, on doit rep\u00e9ter tant que l'\u00e9paisseur est inf\u00e9rieure \u00e0 324 m.</p> <p>On obtient donc le code:</p> <pre><code>epaisseur = 0.0001\nnombre_pliages = 0\n\nwhile epaisseur &lt; 324:\n    epaisseur = 2 * epaisseur\n    nombre_pliages += 1\n\nprint(f\"Il faut {nombre_pliages} pliages.\")\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_4_While/#2-la-syntaxe","title":"2. La syntaxe","text":"<p>La boucle <code>while</code></p> <p>Syntaxe g\u00e9n\u00e9rale: <pre><code>while expression:\n    *instructions \u00e0 r\u00e9p\u00e9ter*\n</code></pre></p> <p>Remarques:</p> <ul> <li><code>expression</code> doit renvoyer une valeur bool\u00e9enne : une \u00e9galit\u00e9, comparaison, appartenance, etc. ;</li> <li><code>while</code> rep\u00e8te le bloc d'instructions \u00e0 r\u00e9p\u00e9ter tant que cette expression est \u00e9gale \u00e0 <code>True</code> ;</li> <li>il faut terminer la ligne commen\u00e7ant par <code>while</code> par <code>:</code> ;</li> <li>le bloc d'instructions \u00e0 r\u00e9p\u00e9ter (le corps de la boucle) doit \u00eatre indent\u00e9. </li> </ul>"},{"location":"T06_Python/T6.1_Python/T6.1_4_While/#3-les-dangers-de-la-boucle-while","title":"3. Les dangers de la boucle <code>while</code>","text":""},{"location":"T06_Python/T6.1_Python/T6.1_4_While/#31-ne-jamais-entrer-dans-la-boucle","title":"3.1 Ne JAMAIS ENTRER dans la boucle","text":"<p>No Entrance</p> <p>Le programme suivant ne va pas faire grand chose... \u00e0 part afficher <code>fini!</code>. Voyez-vous pourquoi? <pre><code>toto = 0\nwhile toto &gt;= 1:\n    toto = toto + 1\n    print(\"ce texte ne s'\u00e9crira jamais\")\nprint(\"fini!\")\n</code></pre></p>"},{"location":"T06_Python/T6.1_Python/T6.1_4_While/#32-ne-jamais-sortir-de-la-boucle","title":"3.2 Ne JAMAIS SORTIR de la boucle","text":"<p>Je vous rassure tout de suite, aucun programmeur professionnel n'est pass\u00e9 \u00e0 c\u00f4t\u00e9 de ce pi\u00e8ge...</p> <p>No Exit</p> <p>Que va faire le programme suivant?</p> <pre><code>toto = 1\nwhile toto &lt; 10:\n    toto = 2\n    print(\"ok\")\nprint(\"fini!\")\n</code></pre> <p>\u00c9viter une boucle infinie</p> <p>Il faut toujours s'assurer que le corps de la boucle contienne une instruction qui fera en sorte qu'\u00e0 un moment donn\u00e9 l'expression bool\u00e9enne prendra la valeur <code>False</code>.</p> <p> </p>"},{"location":"T06_Python/T6.1_Python/T6.1_4_While/#4-exercices","title":"4. Exercices","text":"<p>Exercice  1 : pyd\u00e9fi</p> \u00c9nonc\u00e9Correction <p>SW IV : On passe en vitesse lumi\u00e8re : https://pydefis.callicode.fr/defis/VitesseLumiere/txt </p> <p>Comment compter le nombre de passages dans la boucle?</p> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>Trouver le plus petit nombre entier \\(n\\) tel que \\(2^n\\) soit sup\u00e9rieur \u00e0 1 milliard.</p> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>Demander \u00e0 l'utilisateur de taper la lettre S (puis sur la touche Entr\u00e9e). Recommencer tant qu'il n'a pas ob\u00e9i.</p> <p>On utilisera la fonction <code>input</code> pour r\u00e9cup\u00e9rer une saisie clavier (voir ici).</p> <p>Exercice  4 : pyd\u00e9fi</p> \u00c9nonc\u00e9Correction <p>L'algorithme du professeur Guique : https://pydefis.callicode.fr/defis/Algorithme/txt </p> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re le code ci-dessous: <pre><code>for k in range(5):\n    print(\"Scooby-doo\")\n</code></pre></p> <p>R\u00e9-\u00e9crire ce code en utilisant une boucle <code>while</code>.</p> <p> </p> <p>Exercice  6</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un programme de \u00abr\u00e9vision\u00bb des tables de multiplication: on doit demander plusieurs fois le r\u00e9sultat d'une multiplication de deux nombres choisis al\u00e9atoirement et le programme doit s'arr\u00eater quand 10 bonnes r\u00e9ponses ont \u00e9t\u00e9 donn\u00e9es. Il faut \u00e9galement afficher le score (c'est-\u00e0-dire le nombre d'essais pour atteindre 10 bonnes r\u00e9ponses).</p> <p>Ouvertures possibles: en fin de test, demander si l'utilisateur veut recommencer, m\u00e9moriser le meilleur score, ...</p>"},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/","title":"6.1.5 Les fonctions","text":"<p>La notion de fonction est essentielle en programmation. Ces fonctions sont des blocs d'instructions auquels on donne un nom, et qui ont une t\u00e2che bien pr\u00e9cise. L'utilisation de fonctions permet de construire des programmes plus simples \u00e0 \u00e9crire, \u00e0 lire, \u00e0 v\u00e9rifier et \u00e0 modifier, en d\u00e9coupant le programme en sous-programmes. Autre avantage, on peut utiliser ces fonctions \u00e0 plusieurs endroits du programme et \u00e9viter une certaine lourdeur.</p> <p>Nous avons d\u00e9j\u00e0 rencontr\u00e9 des fonctions depuis le d\u00e9but de l'ann\u00e9e: par exemple <code>print</code>, <code>bin</code>, <code>len</code>. </p> <p>En Python, on peut d\u00e9finir une fonction avec le mot-cl\u00e9 <code>def</code>.</p>"},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/#1-schema-general-dune-fonction","title":"1. Sch\u00e9ma g\u00e9n\u00e9ral d'une fonction","text":"<p>En r\u00e8gle g\u00e9n\u00e9rale, une fonction s'applique \u00e0 un ou plusieurs param\u00e8tres, et renvoie (au moins) une valeur. </p> <p>Exemple</p> <p>La fonction  <code>bin</code> prend un nombre entier (type <code>int</code>) comme param\u00e8tre et renvoie son \u00e9criture binaire.</p> <pre><code>&gt;&gt;&gt; bin(42)\n'0b101010'\n</code></pre> <p>D\u00e9finir une fonction - syntaxe g\u00e9n\u00e9rale</p> <p>Pour d\u00e9finir une fonction, on utilise le mot-cl\u00e9 <code>def</code> suivi du nom de la fonction, avec le(s) param\u00e8tre(s) entre parenth\u00e8ses. Le bloc d'instructions constituant le corps de la fonction doit \u00eatre indent\u00e9.</p> <p>On renvoie une valeur avec le mot-cl\u00e9 <code>return</code>.</p> <pre><code>def ma_fonction(parametre):\n    *instructions*\n    return valeur_renvoyee\n</code></pre> <p>Reprenons par exemple un programme \u00e9crit en exercice sur la boucle <code>for</code> qui calcule la somme des entiers naturels jusqu'\u00e0 1000:</p> <pre><code>s = 0\nfor k in range(1, 1001):\n    s = s + k\nprint(s)\n</code></pre> <p>Transformons-le en une fonction. L'objectif est de pouvoir utiliser cette fonction quand on en aura besoin, et \u00e9ventuellement pour calculer la somme des entiers jusqu'\u00e0 n'importe quelle valeur, pas n\u00e9cessairement 1000. Cette valeur va \u00eatre le param\u00e8tre de la fonction. Et on ne veut plus afficher la somme, mais que cette somme soit renvoy\u00e9e par la fonction (pour l'affecter \u00e0 une variable, ou bien pour affichage).</p> <pre><code>def somme(n):\n    s = 0\n    for k in range(1, n+1):\n        s = s + k\n    return s\n</code></pre> <p>Ex\u00e9cutez ce code dans votre IDE. Que se passe-t-il? </p> <p>Lorsque l'interpr\u00e9teur Python parcourt cette fonction, rien ne s'affiche : la fonction est maintenant pr\u00eate \u00e0 \u00eatre appel\u00e9e, mais n'est pas ex\u00e9cut\u00e9e tant que l'utilisateur ne le demande pas explicitement.</p> <p>Ce sera le cas pour toutes les fonctions : elles doivent \u00eatre appel\u00e9es pour s'ex\u00e9cuter.</p> <p>Dans la console, faites un appel \u00e0 la fonction:</p> <pre><code>&gt;&gt;&gt; somme(42)\n903\n</code></pre> <p>Vocabulaire</p> <p>Dans cet exemple:</p> <ul> <li>la variable <code>n</code> est le param\u00e8tre de la fonction <code>somme</code>;</li> <li>on a appel\u00e9 la fonction <code>somme</code> en lui passant l'argument <code>42</code>;</li> <li>l'appel \u00e0 cette fonction a renvoy\u00e9 la valeur <code>903</code>.</li> </ul> <p>\u00ab\u00c9jection\u00bb du code avec <code>return</code></p> <p>L'emploi du mot-cl\u00e9 <code>return</code> provoque une \u00e9jection du code: tout ce qui suit l'instruction commen\u00e7ant par <code>return</code> ne sera pas ex\u00e9cut\u00e9.</p> <p>Obervez la fonction suivante en l'appelant en lui passant plusieurs arguments successivement.</p> <pre><code>def choix_cornelien(n):\n    if n%2 == 0:\n        print(\"ce texte est affich\u00e9 car\", n, \"est pair\")\n        return \"bon choix\"\n    else:\n        return \"mauvais choix\"\n    print(\"ce texte ne sera jamais affich\u00e9\")\n\nchoix = choix_cornelien(12)\nprint(choix)\n</code></pre> <p> </p> <p>Fonction \u00e0 plusieurs param\u00e8tres</p> <p>Fr\u00e9quemment, il arrive qu'on ait besoin d'\u00e9crire une fonction avec plusieurs param\u00e8tres: on les \u00e9crit s\u00e9par\u00e9s par des virgules lors de la d\u00e9claration de la fonction.</p> <p>Exemple:</p> <pre><code>def repete_lettres(chaine, nombre):\n    sortie = \"\"\n    for c in chaine:\n        sortie += nombre * c\n    return sortie\n</code></pre> <p>Il faut alors respecter l'ordre des param\u00e8tres lors de l'appel de la fonction:</p> <pre><code>&gt;&gt;&gt; repete_lettres(\"NSI\", 3)\n'NNNSSSIII'\n&gt;&gt;&gt; repete_lettres(3, \"NSI\")\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nFile \"\", line 3, in repete_lettres\n    for c in chaine:\nTypeError: 'int' object is not iterable\n&gt;&gt;&gt; \n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/#2-cas-particuliers","title":"2. Cas Particuliers","text":""},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/#21-fonction-sans-valeur-renvoyee","title":"2.1 Fonction sans valeur renvoy\u00e9e","text":"<p>Il n'est pas obligatoire qu'une fonction renvoie une valeur. Dans ce cas, on parle plut\u00f4t d'une proc\u00e9dure.</p> <p>Par exemple, la fonction bien connue <code>print</code> va afficher en console les arguments qu'on lui a pass\u00e9s, mais elle ne renvoie pas de valeur (ou plut\u00f4t une valeur particuli\u00e8re : <code>None</code>).</p> <p>Si on tente d'affecter \u00e0 une variable le r\u00e9sultat d'un <code>print</code> : <pre><code>&gt;&gt;&gt; a = print(\"hello world\")\n  hello world\n&gt;&gt;&gt; a\n&gt;&gt;&gt; \n</code></pre> Et vous pouvez v\u00e9rifier que dans l'inspecteur de variables, <code>a</code> contient <code>None</code>.</p> <p>Un autre exemple de fonction \u00e0 param\u00e8tre, mais qui ne renvoie rien:</p> <pre><code>def chat_penible(n):\n    for k in range(n):\n        print(\"meoww\")\n</code></pre> <pre><code>&gt;&gt;&gt; chat_penible(3)\n  meoww\n  meoww\n  meoww\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/#22-fonction-sans-parametre","title":"2.2 Fonction sans param\u00e8tre","text":"<p>Il n'est pas obligatoire non plus qu'une fonction ait de param\u00e8tre(s).</p> <p>La fonction suivante simule le tirage d'un d\u00e9 truqu\u00e9, avec la face 6 ayant une probabilit\u00e9 d'apparition de 0,5 et toutes les autres faces une probabilit\u00e9 de 0,1. <pre><code>from random import randint\n\ndef tirage_de_truque():\n    tirage = randint(1, 10)\n    if tirage &gt;= 6:\n        return 6\n    else:\n        return tirage\n</code></pre></p> <p>Parenth\u00e8ses</p> <p>Dans ce cas, les parenth\u00e8ses vides sont cependant indispensables, lors de la d\u00e9claration de la fonction comme dans son appel.</p> <pre><code>&gt;&gt;&gt; tirage_de_truque\n&lt;function tirage_de_truque at 0x7fe2ccd761f0&gt;\n&gt;&gt;&gt; tirage_de_truque()\n6\n&gt;&gt;&gt; \n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/#3-variables-et-fonctions","title":"3. Variables et fonctions","text":"<p>Variables locales</p> <p>Attention, les param\u00e8tres d'une fonction, ainsi que les variables d\u00e9clar\u00e9es \u00e0 l'int\u00e9rieur du corps de la fonction n'existent que dans le corps de cette fonction.</p> <p>Il n'est pas possible d'y faire r\u00e9f\u00e9rence depuis une autre instruction, et ce m\u00eame si la fonction a \u00e9t\u00e9 appel\u00e9e.</p> <pre><code>def aire_rectangle(longueur, largeur):\n    aire = longueur * largeur\n    return aire\n</code></pre> <pre><code>&gt;&gt;&gt; aire_rectangle(6, 3)\n18\n&gt;&gt;&gt; longueur\nNameError: name 'longueur' is not defined\n&gt;&gt;&gt; aire\nNameError: name 'aire' is not defined\n</code></pre> <p>Variables globales</p> <p>M\u00eame si c'est possible, il est fortement recommand\u00e9 de ne pas utiliser dans le corps d'une fonction des variables d\u00e9finies \u00e0 l'ext\u00e9rieur de cette fonction. En effet, si plusieurs fonctions agissent sur ces variables, le programme peut aboutir \u00e0 des valeurs ou des comportements non pr\u00e9vus. On parle alors d'effet de bord.</p> <p>Plut\u00f4t donc qu'utiliser des variables globales...</p> <p> </p> <p>On pr\u00e9f\u00e8rera utiliser davantage de param\u00e8tres, et on passera ces variables en arguments lors de l'appel de la fonction.</p> Pas bienBien <pre><code>a = 5\ndef fonction_idiote(n):\n    s = n + a\n    return s\n\nfonction_idiote(1)\n</code></pre> <pre><code>a = 5\ndef fonction_idiote(n, m):\n    s = n + m\n    return s\n\nfonction_idiote(1, a)\n</code></pre>"},{"location":"T06_Python/T6.1_Python/T6.1_5_Fonctions/#4-exercices","title":"4. Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>maximum</code> qui prend deux nombres en param\u00e8tres et qui renvoie le plus grand des deux.</p> <pre><code>def maximum(n1, n2):\n    if n1 &gt; n2:\n        return n1\n    else:\n        return n2\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction ex 4Correction ex 5 <p>Transformez les programmes des exercices 4 et 5 de la section 6.1.3 (if) en fonctions.</p> <ul> <li>Exercice 4 : la fonction prend un entier (l'ann\u00e9e) en param\u00e8tre et renvoie <code>True</code> ou <code>False</code> selon que l'ann\u00e9e est bissextile ou non.</li> <li>Exercice 5 : la fonction prend une chaine de caract\u00e8res en param\u00e8tre et renvoie le nombre de voyelles.</li> </ul> <pre><code>def is_leap(year):\n    if year%4 == 0 and year%100 != 0:\n        return True\n    elif year%400 == 0:\n        return True\n    else:\n        return False\n</code></pre> <pre><code>def compte_voyelles(phrase):\n    voyelles = 'aeiouy'\n    nb_voyelles = 0\n    for lettre in phrase:\n        if lettre in voyelles:\n            nb_voyelles += 1\n    return nb_voyelles\n</code></pre> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>leet_speak</code> qui prend en param\u00e8tre une chaine de caract\u00e8res (en minuscules) et qui renvoie sa traduction en \u00abLeet Speak\u00bb.</p> <p>C'est-\u00e0-dire la m\u00eame cha\u00eene de caract\u00e8res en ayant remplac\u00e9:</p> <ul> <li>les <code>a</code> par des <code>4</code>;</li> <li>les <code>e</code> par des <code>3</code>;</li> <li>les <code>s</code> par des <code>5</code>;</li> <li>les <code>i</code> par des <code>1</code>;</li> <li>les <code>o</code> par des <code>0</code>.</li> </ul> <p>Par exemple, votre fonction doit produire le r\u00e9sultat suivant: <pre><code>&gt;&gt;&gt; leat_speak('leet speak')\n l33t 5p34k\n</code></pre></p> <pre><code>def leet_speak(chaine):\n    traduction = \"\"\n    for caractere in chaine:\n        if caractere == 'a':\n            traduction += '4'\n        elif caractere == 'e':\n            traduction += '3'\n        elif caractere == 's':\n            traduction += '5'\n        elif caractere == 'i':\n            traduction += '1'\n        elif caractere == 'o':\n            traduction += '0'\n        else:\n            traduction += caractere\n    return traduction\n</code></pre> <p>Exercice  4</p> \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>diviseurs</code> qui prend un nombre entier en param\u00e8tre et qui affiche ses diviseurs (penser bien \u00e9videmment \u00e0 utiliser le reste de la division euclidienne).</p> <p>Version 1: Sans maths.</p> <p>On teste tous les nombres inf\u00e9rieurs ou \u00e9gaux au nombre en param\u00e8tre. <pre><code>def diviseurs(n):\n    for k in range(1, n+1):\n        if n % k == 0:\n            print(k)\n</code></pre></p> <p>Version 2: Avec maths.</p> <p>On teste tous les nombres inf\u00e9rieurs ou \u00e9gaux \u00e0 la racine carr\u00e9e du nombre en param\u00e8tre, ce qui va beaucoup plus vite. En effet, si un nombre \\(n\\) peut se d\u00e9composer en \\(n = d  imes q\\) alors n\u00e9cessairement soit \\(d\\) soit \\(q\\) est inf\u00e9rieur \u00e0 la racine carr\u00e9e de \\(n\\).</p> <pre><code>from math import sqrt\n\ndef diviseurs(n):\n    for k in range(1, int(sqrt(n))+1):\n        if n % k == 0:\n            print(k, n//k)\n</code></pre> <p>Exercice  5</p> \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>est_premier</code> qui prend un nombre entier en param\u00e8tre et qui renvoie un bool\u00e9en d\u00e9terminant si le nombre est premier ou non.</p> <p>Version 1: on compte les diviseurs plut\u00f4t que les afficher. S'il y en a exactement 2 (1 et lui-m\u00eame), alors le nombre est premier.</p> <pre><code>def diviseurs(n):\n    nb_diviseurs = 0\n    for k in range(1, n+1):\n        if n % k == 0:\n            nb_diviseurs += 1\n    if nb_diviseurs == 2:\n        return True\n    else:\n        return False\n</code></pre> <p>Remarque:</p> <p><pre><code>    if nb_diviseurs == 2:\n        return True\n    else:\n        return False\n</code></pre> est \u00e9quivalent \u00e0 </p> <pre><code>    return nb_diviseurs == 2\n</code></pre> <p>Version 2: on renvoie <code>False</code> d\u00e8s qu'on a trouv\u00e9 un diviseur du nombre autre que 1 et lui-m\u00eame. Si on n'en trouve pas, on renvoie <code>True</code>. <pre><code>from math import sqrt\n\ndef est_premier(n):\n    if n == 1:\n        return False\n    for k in range(2, n):  # on commence \u00e0 2 et on s'arr\u00eate \u00e0 n-1\n        if n % k == 0:\n            return False   # ici on utilise \u00e0 bon escient l'\u00e9jection du code caus\u00e9e par return\n    return True\n</code></pre></p>"},{"location":"T06_Python/T6.1_Python/TP/Convertisseur/","title":"Convertisseur binaire \u27f7 d\u00e9cimal","text":"<p>Objectif</p> <p>L'objectif de ce TP est de programmer un convertisseur d'\u00e9critures:</p> <ul> <li>d'un nombre d\u00e9cimal en binaire;</li> <li>d'un nombre binaire en d\u00e9cimal.</li> </ul> <p>On n'utilisera bien entendu pas les fonctions natives de Python pour effectuer ces conversions.</p> <p>Il faudra \u00e9crire des fonctions qui effectuent ces conversions.</p> D\u00e9cimal \u2192 BinaireBinaire \u2192 D\u00e9cimal <ul> <li>la fonction prendra en param\u00e8tre un nombre entier (type <code>int</code>);</li> <li>la fonction renverra sa conversion en binaire sous forme d'une cha\u00eene de caract\u00e8res (type <code>str</code>).</li> </ul> <p>Pour cela:</p> <ul> <li>utiliser l'algorithme des divisions successives;</li> <li>stocker les restes dans une cha\u00eene de caract\u00e8res (attention \u00e0 l'ordre)</li> </ul> <ul> <li>la fonction prendra en entr\u00e9e un nombre binaire sous forme d'une cha\u00eene de caract\u00e8res (type <code>str</code>);</li> <li>la fonction renverra sa conversion en d\u00e9cimal sous forme d'un nombre entier (type <code>int</code>).</li> </ul> <p>Pour cela:</p> <ul> <li>parcourir les caract\u00e8res du nombre binaire;</li> <li>incr\u00e9menter de la bonne puissance de deux un <code>int</code> selon les valeurs des caract\u00e8res (convertis en <code>int</code>).</li> </ul> <p>Ouverture</p> <p>R\u00e9aliser de m\u00eame un convertisseur hexad\u00e9cimal \u27f7 d\u00e9cimal.</p> <p>Proposition de correction</p> D\u00e9cimal \u2192 BinaireBinaire \u2192 D\u00e9cimal <pre><code>def decimal_vers_binaire(n: int) -&gt; str:\n    '''\n    Renvoie la conversion de l'entier n en mot binaire,\n    en utilisant l'algorithme des divisions successives.\n    - pr\u00e9condition: n doit \u00eatre un entier positif.\n    '''\n    assert n &gt;= 0\n    mot = ''\n    while n != 0:\n        mot = str(n%2) + mot\n        n = n // 2\n    return mot \n</code></pre> <pre><code>def binaire_vers_decimal(b: str) -&gt; int:\n    '''\n    Renvoie l'\u00e9criture d\u00e9cimale d'un nombre donn\u00e9 par son mot binaire,\n    en utilisant la d\u00e9finition de la base 2.\n    '''\n    exposant = len(b) - 1 \n    decimal = 0\n    for bit in b:\n        decimal = decimal + int(bit)*2**exposant\n        exposant -= 1\n    return decimal\n</code></pre>"},{"location":"T06_Python/T6.1_Python/TP/Cryptographie_I/","title":"FKLIIUH#GH#FHVDU","text":"<p>Objectif</p> <p>L'objectif de ce TP est de d\u00e9crypter la phrase suivante (ou le titre, ou ...):</p> <p><code>PRZRFFNTRARPBAGVRAGEVRAQVAGRERFFNAGZNVFVYRFGFHSSVFNZZRAGYBATCBHEARCNFYRQRPELCGRENYNZNVA</code></p> <p>Le principe est simple: chaque lettre de la phrase d'origine (le message clair) a \u00e9t\u00e9 d\u00e9cal\u00e9 d'un certain nombre de rangs dans l'alphabet, toujours le m\u00eame. Ce nombre est la cl\u00e9 de chiffrement.</p> <p>Comme il n'y a que 25 d\u00e9calages possibles, il vous faudra tous les tester un par un (m\u00e9thode par bruteforce) pour r\u00e9ussir le d\u00e9chiffrement.</p> <p>Pr\u00e9-requis</p> <p>En cryptographie, les m\u00e9thodes sont tr\u00e8s souvent num\u00e9riques. Plut\u00f4t que de manipuler les caract\u00e8res eux-m\u00eames, on pr\u00e9f\u00e8re manipuler leurs repr\u00e9sentations dans un encodage (on \u00e9tudiera cette question un peu plus tard dans l'ann\u00e9e).</p> <p>Avec Python, on peut r\u00e9cup\u00e9rer le code Unicode d'un caract\u00e8re avec la fonction <code>ord</code>:</p> <pre><code>&gt;&gt;&gt; ord('A')\n65\n</code></pre> <p>et le caract\u00e8re correspondant \u00e0 un code Unicode avec la fonction <code>chr</code>:</p> <pre><code>&gt;&gt;&gt; chr(65)\n'A'\n</code></pre> <p>Pour vous guider</p> 123 <p>D\u00e9finissez une fonction <code>decale(lettre)</code> qui d\u00e9cale de 3 rangs dans l'alphabet la lettre majuscule <code>lettre</code> pass\u00e9e en argument (apr\u00e8s Z, on recommencera \u00e0 A...)</p> <p>Rajoutez un param\u00e8tre <code>n</code> \u00e0 la fonction pr\u00e9c\u00e9dente pour pouvoir d\u00e9caler la lettre de <code>n</code> rangs.</p> <p>Utilisez la fonction pr\u00e9c\u00e9dente pour cr\u00e9er la fonction <code>decale_phrase(p, n)</code> qui d\u00e9cale toutes les lettres d'une phrase <code>p</code> de <code>n</code> rangs.</p> <p>Ouverture</p> <p>\u00c9crire une fonction qui crypte une chaine de caract\u00e8res avec au choix:</p> <ul> <li>le chiffre de Vigen\u00e8re;</li> <li>la m\u00e9thode du masque jetable;</li> </ul>"},{"location":"T06_Python/T6.1_Python/TP/Syracuse/","title":"La conjecture de Syracuse","text":"<p>Prenons un entier naturel \\(n\\). On construit la suite de Syracuse de \\(n\\) en appliquant le proc\u00e9d\u00e9 suivant:</p> <ul> <li>si \\(n\\) est pair, on le divise par 2;</li> <li>sinon on le multiplie par 3 et on ajoute 1;</li> <li>on recommence avec le nombre obtenu.</li> </ul> <p>On arr\u00eate le proc\u00e9d\u00e9 lorsqu'on finit par obtenir 1. </p> <p>Par exemple, si on choisit 13 comme nombre de d\u00e9part, on obtient la suite : 13, 40, 20, 10, 5, 16, 8, 4, 2, 1.</p> <p>La conjecture de Syracuse postule qu'on atteindra toujours 1 quel que soit le nombre \\(n\\) de d\u00e9part.</p> <p>Pour chaque suite de Syracuse, de terme de d\u00e9part \\(n\\), on d\u00e9finit:</p> <ul> <li>le temps de vol: c'est le nombre d'it\u00e9rations pour obtenir 1;</li> <li>le temps de vol en altitude: c'est le nombre d'it\u00e9rations avant de passer en dessous de \\(n\\) (pour la premi\u00e8re fois);</li> <li>l'altitude maximale: c'est la valeur maximale de la suite.</li> </ul> <p>Par exemple, pour la suite de Syracuse de 13, le temps de vol est 9, le temps de vol en altitude est 3 et l'altitude maximale est 40.</p> <p>Objectif</p> <p>L'objectif de ce TP est de construire un module contenant diff\u00e9rentes fonctions permettant d'\u00e9tudier ce suites.</p> <p>En particulier, le module contiendra a minima les fonctions suivantes:</p> <ul> <li><code>suivant</code> : renvoie le successeur d'un nombre entier dans le proc\u00e9d\u00e9 de Syracuse;</li> <li><code>syracuse</code> : renvoie la suite de Syracuse;</li> <li><code>temps_de_vol</code>, <code>altitude_max</code>, et <code>temps_vol_altitude</code> dont les noms sont j'esp\u00e8re assez parlants...</li> <li><code>affiche_syracuse</code>: qui doit afficher le graphique de la suite (utiliser pour cela le module <code>matplotlib.pyplot</code>).</li> </ul> <p>Partie I</p> <p>\u00c0 la main, \u00e9crire les suites de Syracuse de 15, 64, et 42. D\u00e9terminer pour chacune les temps de vol, temps de vol en altitude et altitude maximale.</p> <p>Ces exemples serviront plus tard de jeu de tests pour les fonctions \u00e0 \u00e9crire.</p> <p>Partie II</p> <ol> <li>Sp\u00e9cifier chacune des fonctions demand\u00e9es.</li> <li>\u00c9crire les jeux de tests pour chaque fonction (except\u00e9e <code>affiche_syracuse</code>).</li> </ol> <p>Partie III</p> <p>\u00c9crire les fonctions.</p> <p>Proposition de correction</p>"},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/","title":"6.1.\u221e Le module p5","text":""},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/#1-cest-quoi-le-module-p5","title":"1. C'est quoi, le module p5 ?","text":"<p>En Python, un module est un fichier constitu\u00e9 de code Python, qui contient en g\u00e9n\u00e9ral des fonctions d\u00e9di\u00e9es \u00e0 traiter un th\u00e8me bien pr\u00e9cis. Il en existe \u00e9norm\u00e9ment, ce qui participe \u00e0 la popularit\u00e9 de ce langage.</p> <p>Par exemple, vous avez certainement utilis\u00e9 en seconde<sup>1</sup> les modules <code>math</code> (qui contient en autres les fonctions math\u00e9matiques usuelles) et <code>random</code> (qui contient des fonctions de g\u00e9n\u00e9ration de nombres pseudo-al\u00e9atoires). Nous utiliserons bien d'autres modules au cours de l'ann\u00e9e, pour traiter des images, des donn\u00e9es csv, faire des requ\u00eates web, etc.</p> <p>Nous \u00e9tudierons ces modules dans un chapitre \u00e0 part un peu plus tard dans l'ann\u00e9e.</p> <p>Le module p5 de Python est un portage du langage Processing, qui est un outil de cr\u00e9ation multim\u00e9dia utilisant le code informatique. Simple de prise en main, il a \u00e9t\u00e9 cr\u00e9\u00e9 par des artistes pour des artistes.</p> <p>Nous l'utiliserons pour ajouter du graphisme \u00e0 nos cr\u00e9ations...</p> <p>Squelette de programme avec p5 (obligatoire!)</p> <pre><code>from p5 import *\n\ndef setup():\n    # corps de la fonction \u00e0 compl\u00e9ter \n\n\ndef draw():\n    # corps de la fonction \u00e0 compl\u00e9ter \n\nrun()\n</code></pre> Ligne 1la fonction <code>setup</code>la fonction <code>draw</code>la fonction <code>run</code> <p>On importe le module, c'est-\u00e0-dire qu'on charge en m\u00e9moire tout le contenu du fichier.</p> <p>Elle contient le param\u00e9trage initial du programme (taille de la fen\u00eatre, couleur de fond, etc).</p> <p>Le contenu de cette fonction est continuellement ex\u00e9cut\u00e9, \u00e0 raison de 60 images par seconde par d\u00e9faut. Sauf si la fonction <code>no_loop</code> est appel\u00e9e dans <code>setup</code>.</p> <p>Elle lance la fen\u00eatre d'ex\u00e9cution du programme.</p>"},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/#2-les-bases","title":"2. Les bases","text":""},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/#21-repere","title":"2.1 Rep\u00e8re","text":"<p>\u00c0 l'ex\u00e9cution de la fonction <code>run</code>, une fen\u00eatre s'affiche avec une zone de dessin qu'on appelle g\u00e9n\u00e9ralement canevas (canvas in english). Sa taille se d\u00e9finit \u00e0 l'aide de la fonction <code>size</code> \u00e0 l'int\u00e9rieur de la fonction <code>setup</code>. Par exemple, pour cr\u00e9er une zone de dessin de 300 pixels sur 200 pixels, on utilisera:</p> <pre><code>size(300, 200)\n</code></pre> <p>Chaque pixel de cette zone est rep\u00e9r\u00e9e par des coordonn\u00e9es dans le rep\u00e8re suivant, dont l'origine se situe en haut \u00e0 gauche et l'axe des ordonn\u00e9es est orient\u00e9 vers le bas.</p> <p> </p>"},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/#22-traces","title":"2.2 Trac\u00e9s","text":"<p>Trac\u00e9s de base</p> <ul> <li><code>point</code> : permet de dessiner un point (pixel). En param\u00e8tre, les coordonn\u00e9es du point.</li> <li><code>line</code>: permet de tracer une ligne entre deux points. En param\u00e8tres, les coordonn\u00e9es des deux points.</li> <li><code>rect</code>: permet de tracer un rectangle. En param\u00e8tres, les coordonn\u00e9es du sommet haut-gauche, puis la largeur et la hauteur du rectangle.</li> <li><code>ellipse</code>: permet de tracer une ellipse. En param\u00e8tres, les coordonn\u00e9es du centre, puis la largeur et la hauteur (mettre la m\u00eame valeur pour un cercle).</li> </ul> Exemples <p>Copier-coller le code suivant et faire varier les param\u00e8tres pour bien les comprendre.</p> <pre><code>from p5 import *\n\ndef setup():\n    size(200, 200)\n    no_loop()\n\ndef draw():\n    rect((90, 50), 20, 100)\n    ellipse((100, 70), 60, 60)\n    ellipse((81, 70), 16, 32)\n    point(81, 70)\n    ellipse((119, 70), 16, 32)\n    point(119, 70)\n    line((90, 150), (80, 160))\n    line((110, 150), (120, 160))\nrun()\n</code></pre>"},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/#23-couleurs","title":"2.3 Couleurs","text":"<p>Pinceau</p> <ul> <li><code>background</code>: permet de d\u00e9finir la couleur du fond de la zone de dessin. En param\u00e8tres, les trois composantes RGB de la couleur.</li> <li><code>stroke</code>: permet de d\u00e9finir la couleur du pinceau (noir par d\u00e9faut) pour le contour de la forme. En param\u00e8tres, les trois composantes RGB de la couleur.</li> <li><code>no_stroke()</code>: permet de dessiner une forme sans coutour (pas de param\u00e8tre).</li> <li><code>stroke_weight</code>: permet de d\u00e9finir la largeur du pinceau. En param\u00e8tre, le nombre de pixels.</li> <li><code>fill</code>: permet de d\u00e9finir la couleur de remplissage de la forme. En param\u00e8tres, les trois composantes RGB de la couleur.</li> </ul> Exemples <p>Copier-coller le code suivant et faire varier les param\u00e8tres pour bien les comprendre.</p> <pre><code>from p5 import *\n\ndef setup():\n    size(200, 200)\n    no_loop()\n\ndef draw():\n    background(12, 12, 12)\n    fill(255, 0, 0)\n    rect((90, 50), 20, 100)\n    no_stroke()\n    fill(244, 164, 96)\n    ellipse((100, 70), 60, 60)\n    stroke(1)\n    fill(255, 255, 255)\n    ellipse((81, 70), 16, 32)\n    point(81, 70)\n    ellipse((119, 70), 16, 32)\n    stroke_weight(5)\n    point(119, 70)\n    stroke_weight(2)\n    line((90, 150), (80, 160))\n    line((110, 150), (120, 160))\nrun()\n</code></pre>"},{"location":"T06_Python/T6.1_Python/p5/T6.1_inf_p5/#3-exercice","title":"3. Exercice","text":"<p>Exercice  1</p> <p>Dans un canevas de 300 x 200 pixels, dessiner successivement les drapeaux fran\u00e7ais, japonais puis tch\u00e8que.</p> <p>Consulter la documentation pour des triangles ou polygones.</p> <ol> <li> <p>bon ok, \u00e7a d\u00e9pend de quel prof vous avez eu l'an dernier...\u00a0\u21a9</p> </li> </ol>"},{"location":"T06_Python/T6.2_Bibliotheques/T6.2_Bibliotheques/","title":"T6.2 Utilisation de biblioth\u00e8ques","text":"<p>L'utilisation de fonctions (ou de proc\u00e9dures) permet dans l'\u00e9criture d'un programme de ne pas r\u00e9p\u00e9ter les m\u00eames portions de code, et de d\u00e9couper un programme en sous-programmes.</p> <p>Il arrive aussi fr\u00e9quemment que ces fonctions puissent \u00eatre utilis\u00e9es dans d'autres programmes : il est alors n\u00e9cessaire de les stocker ailleurs que dans le programme lui-m\u00eame.</p> <p>Ces fonctions sont souvent regroup\u00e9es par th\u00e8me dans des fichiers <code>.py</code> appel\u00e9s biblioth\u00e8ques (library in english) ou modules.</p> <p>Les objectifs de cette r\u00e9partition des fonctions en modules - on parle de conception modulaire - sont multiples:</p> <ul> <li>rendre un programme plus lisible;</li> <li>r\u00e9partir la programmation au sein d'une \u00e9quipe;</li> <li>faciliter les tests.</li> </ul> <p>Les modules peuvent donc \u00eatre vus comme des \u00abbo\u00eetes \u00e0 outils\u00bb dont on va se servir uniquement lorsqu'on en a besoin. Il en existe un tr\u00e8s grand nombre en Python, ce qui fait une des forces de ce langage.</p> <p> </p>"},{"location":"T06_Python/T6.2_Bibliotheques/T6.2_Bibliotheques/#621-importer-un-module","title":"6.2.1 Importer un module","text":"<p>L'interpr\u00e9teur Python propose quelques fonctions et types natifs qui sont toujours disponibles.</p> <p>L'installation de Python sur un ordinateur comporte \u00e9galement une biblioth\u00e8que standard qui contient les modules les plus utilis\u00e9s. </p> <p>Exemples</p> <p>Quelques exemples de modules tr\u00e8s fr\u00e9quemment utilis\u00e9s:</p> <ul> <li><code>math</code>: toutes les fonctions et constantes math\u00e9matiques;</li> <li><code>random</code>: fonctions permettant de g\u00e9n\u00e9rer des nombres pseudo-al\u00e9atoires;</li> <li><code>time</code>: fonctions qui donnent acc\u00e8s au... temps;</li> <li><code>os</code>: permet de manipuler les chemins d'acc\u00e8s aux dossiers et fichiers.</li> </ul> <p>Mais attention, ces modules ne sont pas disponibles dans un programme tant qu'on ne les a pas import\u00e9s, c'est-\u00e0-dire charg\u00e9s en m\u00e9moire de l'interpr\u00e9teur Python.</p> <p>Import de modules</p> <p>Pour importer un module, on utilise le mot-cl\u00e9 <code>import</code>. On importe les modules en d\u00e9but de programme.</p> <p>Par exemple, pour pouvoir utiliser le module <code>random</code> (et tout ce qu'il contient):</p> <pre><code>import random\n</code></pre>"},{"location":"T06_Python/T6.2_Bibliotheques/T6.2_Bibliotheques/#622-consulter-la-documentation-dun-module","title":"6.2.2 Consulter la documentation d'un module","text":"<p>Il suffit pour cela d'utiliser  (en console) la fonction <code>help</code> en passant le nom du module en argument. Par exemple, pour consulter la documentation du module <code>random</code> (faites-le !):</p> <pre><code>&gt;&gt;&gt; help(random)\n</code></pre> <p>On y trouve beaucoup de choses... en particulier ce qui nous int\u00e9resse pour l'instant: les fonctions disponibles.</p> <p>Par exemple, on y trouve la fonction <code>randint</code> que nous avons d\u00e9j\u00e0 utilis\u00e9 cette ann\u00e9e.</p> <pre><code>randint(a, b) method of random.Random instance\n    Return random integer in range [a, b], including both end points.\n</code></pre>"},{"location":"T06_Python/T6.2_Bibliotheques/T6.2_Bibliotheques/#623-utilisation-dune-fonction-dun-module","title":"6.2.3 Utilisation d'une fonction d'un module","text":"<p>Notation pr\u00e9fix\u00e9e</p> <p>Une fois le module import\u00e9, on peut acc\u00e9der aux fonctions (ou autres contenus) en pr\u00e9fixant les noms par celui du module. </p> <p><pre><code>&gt;&gt;&gt; import random\n&gt;&gt;&gt; random.randint(1, 6)\n4\n</code></pre> L'oubli du pr\u00e9fixe-nom du module provoquera une erreur de type <code>NameError</code>: <pre><code>&gt;&gt;&gt; import random\n&gt;&gt;&gt; randint(1, 6)\nTraceback (most recent call last):\nFile \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nNameError: name 'randint' is not defined\n</code></pre></p> <p>Si vous trouvez \u00e7a p\u00e9nible de devoir \u00e9crire \u00e0 chaque fois le nom du module en pr\u00e9fixe, il y a cependant un avantage criant : dans un programme cons\u00e9quent, on sera amen\u00e9s \u00e0 importer plusieurs modules, dont on ne peut conna\u00eetre toutes les fonctions... et il y en a peut-\u00eatre qui portent le m\u00eame nom... Il faut donc savoir dans quel module utiliser la bonne fonction!</p> <p>Documentation d'une fonction</p> <p>Comme vous l'avez remarqu\u00e9, on peut vite se perdre dans la documentation d'un module. Si on conna\u00eet le nom d'une fonction dont on veut la documentation (pour se rappeler par exemple de ses param\u00e8tres, du type de valeur renvoy\u00e9e), on peut utiliser la fonction <code>help</code> uniquement sur la fonction elle-m\u00eame:</p> <pre><code>&gt;&gt;&gt; help(random.choice)\nHelp on method choice in module random:\n\nchoice(seq) method of random.Random instance\n    Choose a random element from a non-empty sequence.\n\n&gt;&gt;&gt; random.choice([\"C-3PO\", \"R2D2\", \"BB-8\", \"K-2SO\"])\n'BB-8'\n</code></pre>"},{"location":"T06_Python/T6.2_Bibliotheques/T6.2_Bibliotheques/#624-autres-imports","title":"6.2.4 Autres imports","text":"<p>Import sans pr\u00e9fixe</p> <p>On peut \u00e9galement importer uniquement une fonction d'un module si on sait qu'on n'aura besoin que de cette fonction. Pour les raisons \u00e9voqu\u00e9es plus haut, on \u00e9vitera le plus possible cette utilisation.</p> <p>La syntaxe est la suivante, et elle permet de ne plus pr\u00e9fixer le nom de la fonction:</p> <pre><code>&gt;&gt;&gt; from random import randint\n&gt;&gt;&gt; randint(1, 6)\n2\n</code></pre> <p>Alias</p> <p>Un moyen de ne pas rendre l'utilisation de noms de fonctions trop verbeux (par exemple le module de trac\u00e9 de courbes <code>matplotlib.pyplot</code>), on peut renommer le module pour lui donner un nom plus court (alias) \u00e0 l'aide du mot-cl\u00e9 <code>as</code>.</p> <p>Exemple avec le module <code>random</code> :</p> <pre><code>&gt;&gt;&gt; import random as rd\n&gt;&gt;&gt; rd.randint(1, 6)\n6\n</code></pre> <p>Exemple avec le module <code>matplotlib.pyplot</code> :</p> <p>La documentation est disponible ici.</p> <pre><code>import matplotlib.pyplot as plt\n\nabscisses = [0, 1, 2, 5, 8, 10, 15]\nordonnees = [0, 1, 4, 25, 64, 100, 225]\n\nplt.plot(abscisses, ordonnees, \"-o\") \nplt.show()\n</code></pre> <p>Ce programme donne le graphique:</p> <p> </p>"},{"location":"T06_Python/T6.2_Bibliotheques/T6.2_Bibliotheques/#625-exercices","title":"6.2.5 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>En console:</p> <ol> <li>calculer la racine carr\u00e9e de 25, puis de 2;</li> <li>calculer \\(\\pi^2\\).</li> </ol> <p>La fonction racine carr\u00e9e (square root in english) se trouve dans le module <code>math</code>. La chercher dans ce module, qu'il faudra importer. Regarder \u00e0 la fin de la documentation les constantes...</p> <p>Exercice  2</p> \u00c9nonc\u00e9IndicationCorrection <p>Dans le module marvel \u00e0 t\u00e9l\u00e9charger, il y a une liste nomm\u00e9e <code>personnages</code> contenant les noms (type <code>str</code>) de tous les personnages de l'Univers Marvel.</p> <p>Combien de personnages contiennent la chaine de caract\u00e8res <code>\"Black\"</code> ?</p> <p>On pourra s'aider du code \u00e0 compl\u00e9ter donn\u00e9 en Indication.</p> <pre><code>import \n\ndef compte_perso(liste_persos, chaine):\n\n    for perso in liste_persos:\n        if ... in ...:\n            c += 1\n    return \n</code></pre> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>Reprendre et ex\u00e9cuter le code d'exemple du module <code>matplotlib.pyplot</code>.</p> <p>Remplacer l'argument <code>\"-o\"</code> \u00e0 la ligne 6 successivement par:</p> <ol> <li><code>\"o\"</code></li> <li><code>\"-\"</code></li> <li><code>\"--x\"</code></li> <li><code>\":sg\"</code></li> <li><code>\":+r\"</code></li> </ol> <p>Exercice  4</p> <p>L'objectif de cet exercice est de mesurer le temps d'ex\u00e9cution d'un programme. On va pour cela utiliser le module <code>time</code>.</p> Partie 1Partie 2Correction <p>En console:</p> <ol> <li>Importer le module <code>time</code>.</li> <li>Consulter la documentation de ce module. Rep\u00e9rer dans la description les deux fa\u00e7ons de repr\u00e9senter le temps. Nous utiliserons la premi\u00e8re.</li> <li>Noter la date correspondante \u00e0 \"the Epoch\".</li> <li> <p>Trouver<sup>1</sup> dans les fonctions celle qui permet de r\u00e9cup\u00e9rer le temps courant en secondes depuis the Epoch. </p> </li> <li> <p>Maintenant qu'on dispose d'une telle fonction, qui renvoie donc le temps courant au moment o\u00f9 on l'appelle dans le programme, comment l'utiliser pour mesurer le temps d'ex\u00e9cution d'un programme?</p> </li> </ol> <p>On va maintenant utiliser la fonction <code>time.time</code> pour mesurer le temps d'ex\u00e9cution du programme (tr\u00e8s inutile) suivant:</p> <p><pre><code>for k in range(1000000):\n    pass\n</code></pre> Dans un \u00e9diteur:</p> <ol> <li>Importer le module <code>time</code>.</li> <li>Copier-coller le code ci-dessus.</li> <li>Affecter \u00e0 une variable <code>t0</code> le temps courant avant la boucle <code>for</code>.</li> <li>Affecter \u00e0 une variable <code>t1</code> le temps courant apr\u00e8s la boucle <code>for</code>.</li> <li>Ajouter une instruction pour afficher le temps d'ex\u00e9cution du programme.</li> </ol> <p>Pour indication, j'obtiens un temps de l'ordre de 0.3 secondes sur Basthon/Capytale et de 0.03 secondes sur ma machine personnelle.</p> <ol> <li> <p>Indice en bas de votre \u00e9cran: c'est l'ant\u00e9p\u00e9nulti\u00e8me.\u00a0\u21a9</p> </li> </ol>"},{"location":"T06_Python/T6.3_Tests/T6.3_Tests/","title":"T6.3 Tester une fonction","text":"<p>Normalement, la premi\u00e8re chose qu'on fait apr\u00e8s avoir \u00e9crit une fonction, c'est la tester. Pour cela, on passe des arguments \u00e0 la fonction pour lesquels on conna\u00eet le r\u00e9sultat attendu.</p> <p>Par exemple, reprenons la fonction <code>maximum</code> \u00e9crite au chapitre 6.1.5:</p> <p><pre><code>def maximum(n1, n2):\n    if n1 &gt; n2:\n        return n1\n    else:\n        return n2\n</code></pre> Ensuite, en console, on la teste en passant des arguments simples:</p> <p><pre><code>&gt;&gt;&gt; maximum(2, 5)\n5\n&gt;&gt;&gt; maximum(10, 3)\n10\n</code></pre> Dans la vraie vie des programmeurs, c'est le contraire. On \u00e9crit d'abord les tests. Puis la fonction. Et enfin on effectue les tests.</p>"},{"location":"T06_Python/T6.3_Tests/T6.3_Tests/#631-assert","title":"6.3.1 Assert","text":"<p>Ces tests reposent sur le mot-cl\u00e9 <code>assert</code>, qui va lever une erreur lorsqu'il est suivi d'une expression \u00e9valu\u00e9e \u00e0 <code>False</code>:</p> <pre><code>&gt;&gt;&gt; assert 2 == 3\nTraceback (most recent call last):\n  File \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nAssertionError\n&gt;&gt;&gt; assert 2 &lt;= 3\n&gt;&gt;&gt;\n</code></pre> <p>Avant d'\u00e9crire cette fonction <code>maximum</code>, on \u00e9crirait alors: <pre><code>assert maximum(2, 5) == 5\nassert maximum(10, 3) == 10\nassert maximum(4, 4) == 4\n</code></pre></p> <p>Ce jeu de tests peut se regouper dans une fonction pour v\u00e9rifier qu'elle a bien le comportement d\u00e9sir\u00e9.</p> <pre><code>def test_maximum():\n    assert maximum(2, 5) == 5\n    assert maximum(10, 3) == 10\n    assert maximum(4, 4) == 4\n    print(\"tests ok\") # cette ligne ne s'\u00e9xecutera que si aucune erreur n'est lev\u00e9e par assert\n</code></pre> <p>Un autre exemple</p> <p>Toujours au chapitre 6.1.5, je vous ai demand\u00e9 d'\u00e9crire une fonction <code>est_bissextile</code> permettant de d\u00e9terminer si une ann\u00e9e est bissextile ou non (en renvoyant un bool\u00e9en).</p> <p>Comme on sait (?) que 2000 \u00e9tait bissextile, que 2020 \u00e9galement, mais ni 1900 ni 2021 ne le sont, on aurait pu commencer par \u00e9crire notre fonction de jeu de tests ainsi:</p> <pre><code>def test_est_bissextile():\n    assert est_bissextile(2000) == True\n    assert est_bissextile(2020) == True\n    assert est_bissextile(1900) == False\n    assert est_bissextile(2021) == False\n    print(\"tests ok\")\n</code></pre> <p>Jeu de tests couvrant ?</p> <p>Il faut v\u00e9rifier que les tests couvrent toutes les situations possibles, mais ce n'est pas toujours facile !</p> <p> </p>"},{"location":"T06_Python/T6.3_Tests/T6.3_Tests/#632-exercices","title":"6.3.2 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un jeu de tests pour la fonction <code>compte_voyelles</code> de l'exercice 2 du chapitre 6.1.5.</p> <pre><code>def test_compte_voyelles():\n    assert compte_voyelles('toto') == 2\n    assert compte_voyelles('oiseau') == 5\n    assert compte_voyelles('kjhtfgrvcbnszqwp') == 0\n    assert compte_voyelles('') == 0\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <ol> <li>\u00c9crire un jeu de tests pour une fonction <code>fizzbuzz</code> qui prend un entier en param\u00e8tre et renvoie ... vous savez quoi (cf. ex 6 de 6.1.4).</li> <li>\u00c9crire la fonction <code>fizzbuzz</code> et la tester.</li> </ol> <ol> <li>Le jeu de tests doit comporter au moins 4 cas, un pour chaque retour possible de la fonction. <pre><code>def test_fizzbuzz():\n    assert fizzbuzz(3) == 'Fizz'\n    assert fizzbuzz(5) == 'Buzz'\n    assert fizzbuzz(15) == 'FizzBuzz'\n    assert fizzbuzz(2) == 2\n</code></pre> 2. <pre><code>def fizzbuzz(nombre):\n    if nombre%3 == 0 and nombre%5 == 0:\n        return 'FizzBuzz'\n    elif nombre%3 == 0:\n        return 'Fizz'\n    elif nombre%5 == 0:\n        return 'Buzz'\n    else:\n        return nombre\n</code></pre></li> </ol>"},{"location":"T06_Python/T6.4_Specification/T6.4_Specification/","title":"T6.4 Sp\u00e9cification","text":"<p>Commen\u00e7ons par une devinette: que fait la fonction suivante?</p> <pre><code>def doublon(l, c):\n    n = 0\n    for e in c:\n        if e == l:\n            n += 1\n    return n &gt; 1\n</code></pre> <p> </p> <p>Mieux (?)</p> <pre><code>def verifie_doublon(l: str, c: str) -&gt; bool:\n    '''\n    V\u00e9rifie si la cha\u00eene c contient au moins deux occurences\n    de la cha\u00eene l.\n\n    &gt;&gt;&gt; verifie_doublon('n', 'nsi')\n      False\n    &gt;&gt;&gt; verifie_doublon('t', 'toto')\n      True\n    '''\n    nb_occurences = 0\n    for element in c:\n        if element == l:\n            nb_occurences += 1\n    return nb_occurences &gt; 1\n</code></pre>"},{"location":"T06_Python/T6.4_Specification/T6.4_Specification/#641-specifier-et-documenter","title":"6.4.1 Sp\u00e9cifier et documenter","text":"<p>Sp\u00e9cification</p> <p>De mani\u00e8re g\u00e9n\u00e9rale la sp\u00e9cification est un ensemble d\u2019exigences \u00e0 satisfaire par un produit ou un service.</p> <p>En programmation, sp\u00e9cifier un programme/une fonction revient \u00e0 d\u00e9crire explicitement ce qu\u2019il/elle doit faire et dans quelles conditions.</p> <p>Pour cela:</p> <ul> <li>on d\u00e9crit ce que fait la fonction dans une documentation appel\u00e9e docstring, plac\u00e9e au d\u00e9but du corps de la fonction, \u00e9crite sur plusieurs lignes entre triple quotes;</li> <li>on utilise des noms de variables explicites (voir T6.1.1);</li> <li>on pr\u00e9cise le type de(s) param\u00e8tre(s), et \u00e9ventuellement les conditions d'utilisations de la fonction: on parle de pr\u00e9conditions;</li> <li>on pr\u00e9cise le type de la valeur renvoy\u00e9e par la fonction: on parle de postconditions;</li> <li>ces types apparaissent dans la docstring ou en annotations de types (depuis Python 3.5) comme dans l'exemple ci-dessus;</li> <li>on int\u00e8gre \u00e9ventuellement des exemples d'utilisation qui peuvent servir de tests.</li> </ul> <p>La docstring est alors disponible en utilisant la fonction <code>help</code>:</p> <pre><code>&gt;&gt;&gt; help(verifie_doublon)\nHelp on function verifie_doublon in module __main__:\n\nverifie_doublon(l: str, c: str) -&gt; bool\n    V\u00e9rifie si la cha\u00eene c contient au moins deux occurences\n    de la cha\u00eene l\n\n&gt;&gt;&gt; \n</code></pre> <p>Int\u00e9r\u00eat</p> <ul> <li>programmer : documenter avant d\u2019\u00e9crire le code donne un objectif clair;</li> <li>relire : les programmes complexes sont difficiles \u00e0 comprendre. La documentation simplifie cette \u00e9tape;</li> <li>collaborer : travailler \u00e0 plusieurs demande de l\u2019organisation et une documentation claire est indispensable.</li> </ul> <p>PEP8 &amp; Zen</p> <p>Pour une meilleure lecture du code et une meilleure communication entre les diff\u00e9rents collaborateurs d'un projet, il est donc n\u00e9cessaire de prendre de bonnes habitudes de programmation et de respecter des conventions d'\u00e9criture:</p> <ul> <li>La PEP8  (Python Enhancement Proposal 8) regroupe les bons usages</li> <li>Le Zen Python :</li> </ul> <pre><code>&gt;&gt;&gt; import this\n</code></pre>"},{"location":"T06_Python/T6.4_Specification/T6.4_Specification/#642-exemples","title":"6.4.2 Exemples","text":"<p>Exemple sans tests</p> <p>La fonction <code>maximum</code> vue aux chapitres pr\u00e9c\u00e9dentes:</p> <p><pre><code>def maximum(n1, n2):\n    if n1 &gt; n2:\n        return n1\n    else:\n        return n2\n</code></pre> devient:</p> <pre><code>def maximum(n1: int, n2: int) -&gt; int:\n    '''\n    Renvoie l'entier maximum entre n1 et n2\n    n1 et n2 : deux entiers\n    '''\n    if n1 &gt; n2:\n        return n1\n    else:\n        return n2\n</code></pre> <p>Exemple avec tests</p> <p>Voici la fonction <code>bissextile</code> sp\u00e9cifi\u00e9e et document\u00e9e. On peut y ajouter des exemples/tests.</p> <pre><code>def is_leap(year: int) -&gt; bool:\n    '''\n    Renvoie True si l'entier year correspond \u00e0 une ann\u00e9e bissextile\n    et False sinon.\n    &gt;&gt;&gt; is_leap(2021)\n    False\n    &gt;&gt;&gt; is_leap(2020)\n    True\n    &gt;&gt;&gt; is_leap(2000)\n    True\n    &gt;&gt;&gt; is_leap(1900)\n    False\n    '''\n    if year%4 == 0 and year%100 != 0:\n        return True\n    elif year%400 == 0:\n        return True\n    else:\n        return False\n</code></pre> <p>On peut ensuite lancer les tests \u00e0 l'aide du module <code>doctest</code>:</p> <pre><code>&gt;&gt;&gt; import doctest\n&gt;&gt;&gt; doctest.testmod()\nTestResults(failed=0, attempted=4)\n&gt;&gt;&gt;\n</code></pre> <p>Testez cette fonction comme ci-dessus, puis en passant en argument <code>verbose=True</code> \u00e0 la fonction <code>testmod</code>.</p>"},{"location":"T06_Python/T6.4_Specification/T6.4_Specification/#643-exercices","title":"6.4.3 Exercices","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Documenter les fonctions <code>compte_voyelles</code> et <code>fizzbuzz</code> des chapitres pr\u00e9c\u00e9dents.</p>"},{"location":"T07_Algorithmes/accueil/","title":"Algorithmique","text":"<p>Histoire de l'informatique</p> <p> </p> <p></p> <p>Al Hwarizmi (~780-850) est un math\u00e9maticien persan membre de la Maison de la sagesse de Bagdad. Ses travaux d'alg\u00e8bre sur les m\u00e9thodes de r\u00e9solution des \u00e9quations ont donn\u00e9, par d\u00e9formation de son nom latinis\u00e9, au mot algorithme.</p> <p>Alan Turing  (1912-1954) est un math\u00e9maticien britannique, connu pour avoir d\u00e9crypt\u00e9 la machine Enigma pendant la deuxi\u00e8me guerre mondiale. Ses travaux sur les liens entre algorithme et raisonnement math\u00e9matique l'ont conduit \u00e0 imaginer un proc\u00e9d\u00e9 de calcul universel, la machine de Turing, \u00e0 l'origine de la conception des ordinateurs.</p> <p>Tout comme les plus grands chefs con\u00e7oivent leurs recettes \u00e0 partir de recettes de base classiques, on retrouve dans les algorithmes les plus complexes des r\u00e9solutions de probl\u00e8mes simples et r\u00e9currents: parcourir une liste, trier...</p> <p> </p>"},{"location":"T07_Algorithmes/T7.1_Dichotomie/T7.1_Dichotomie/","title":"T7.1 Recherche par dichotomie","text":""},{"location":"T07_Algorithmes/T7.1_Dichotomie/T7.1_Dichotomie/#711-preambule","title":"7.1.1 Pr\u00e9ambule","text":"<p>Il s'agit dans ce chapitre d'\u00e9tudier une bonne fa\u00e7on de rechercher une valeur (un entier pour ce qui nous concerne) dans un tableau/une liste tri\u00e9.e. </p> <p>La strat\u00e9gie de recherche vue dans le DL0010 consiste \u00e0 restreindre de moiti\u00e9 l'intervalle d'\u00e9tude \u00e0 chaque \u00e9tape. On appelle cela une m\u00e9thode par dichotomie, du grec ancien \u03b4\u03b9\u03c7\u03bf\u03c4\u03bf\u03bc\u03af\u03b1, dikhotomia (\u00ab division en deux parties \u00bb).</p> <p>La m\u00e9thode de dichotomie fait partie des m\u00e9thodes dites \u00abdiviser pour (mieux) r\u00e9gner \u00bb, cat\u00e9gorie d'algorithmes que nous \u00e9tudierons plus en d\u00e9tail en Terminale.</p>"},{"location":"T07_Algorithmes/T7.1_Dichotomie/T7.1_Dichotomie/#712-une-premiere-methode","title":"7.1.2 Une premi\u00e8re m\u00e9thode","text":"<p>Recherche s\u00e9quentielle (par balayage)</p> <p>C'est la m\u00e9thode la plus intuitive : on essaie toutes les valeurs (par exemple, dans l'ordre croissant) jusqu'\u00e0 trouver la bonne.</p> <p>\u00c9crire une fonction <code>trouve</code> qui prend en param\u00e8tre une liste et une valeur, et qui renvoie l'indice de la valeur dans la liste si elle y figure, et <code>None</code> sinon.</p> <pre><code>&gt;&gt;&gt; lst = [2, 3, 6, 7, 11, 14, 18, 19, 24]\n&gt;&gt;&gt; trouve(lst, 14)\n5\n&gt;&gt;&gt; trouve(lst, 42)\nNone\n</code></pre> Correction <p>Terminaison et complexit\u00e9 de la m\u00e9thode</p> <ul> <li>On est s\u00fbr que cet algorithme s'arr\u00eate (boucle <code>for</code>).</li> <li>Le nombre (maximal) d'op\u00e9rations n\u00e9cessaires est proportionnel \u00e0 la taille de la liste \u00e0 \u00e9tudier. Si on appelle \\(n\\) la longueur de la liste, on dit que cet algorithme est d'ordre \\(n\\), ou lin\u00e9aire, ou en \\(O(n)\\).</li> </ul>"},{"location":"T07_Algorithmes/T7.1_Dichotomie/T7.1_Dichotomie/#713-la-methode-par-dichotomie","title":"7.1.3 La m\u00e9thode par dichotomie","text":"<p>Recherche dichotomique</p> <p>Principe de l'algorithme:</p> <ul> <li>on se place au milieu de la liste;</li> <li>on compare la valeur cherch\u00e9e \u00e0 celle du milieu;</li> <li>si la valeur cherch\u00e9e est inf\u00e9rieure, on ne garde que la premi\u00e8re moiti\u00e9 (\u00e0 gauche) de la liste, sinon on ne garde que la deuxi\u00e8me moiti\u00e9 (\u00e0 droite);</li> <li>on recommence avec la bonne moiti\u00e9 de la liste jusqu'\u00e0 trouver la valeur cherch\u00e9e.</li> </ul> ExempleIllustrationProgrammation de l'algorithme <p>Cherchons la valeur 14 dans la liste suivante:</p> <p> </p> <p>La fl\u00e8che rouge indique la valeur centrale, d'indice <code>indice_centre</code>, les fl\u00e8ches bleues les valeurs du d\u00e9but et de fin de la liste \u00e0 traiter, d'indices respectifs <code>indice_debut</code> et <code>indice_fin</code>.</p> <p> </p> <ul> <li>\u00e9tape 1 : toute la liste est \u00e0 traiter. On se place sur l'\u00e9l\u00e9ment central. Ici il y a 9 \u00e9l\u00e9ments, donc on se place sur le 4\u00e8me, qui est 11.</li> <li>\u00e9tape 2 : on compare 11 \u00e0 la valeur cherch\u00e9e (14). Il faut donc garder tout ce qui est sup\u00e9rieur \u00e0 11.</li> <li>\u00e9tape 3 : on se place au milieu de la liste des valeurs qu'il reste \u00e0 traiter. Ici il y a 4 valeurs, donc il n'y a pas de valeur centrale. On va donc se positionner sur la 2\u00e8me valeur, qui est 18.</li> <li>\u00e9tape 4 : on compare la valeur 18 \u00e0 la valeur cherch\u00e9e : 14. Elle est sup\u00e9rieure, donc on garde ce qui est \u00e0 gauche. Il n'y a plus qu'une valeur.</li> <li>\u00e9tape 5 : on se place sur la valeur 14 et on compare avec 14. La valeur est trouv\u00e9e.</li> </ul> M\u00e9thode de recherche par dichotomie (\u00e0 compl\u00e9ter)<pre><code>def trouve_dicho(tab: list, valeur: int) :\n    '''\n    Renvoie l'indice de 'valeur' si 'valeur' est trouv\u00e9e dans la liste 'tab', et None sinon.\n\n    'tab' doit \u00eatre une liste tri\u00e9e dans l'ordre croissant.\n    '''\n    indice_debut = ...\n    indice_fin = ...\n    while indice_debut &lt;= indice_fin :\n        indice_centre = (... + ...) // 2     # on prend l'indice central\n        valeur_centrale = ...                # on prend la valeur centrale \n        if valeur_centrale == ... :          # si la valeur centrale est la valeur cherch\u00e9e...\n            return ...\n        elif valeur_centrale &lt; ... :         # si la valeur centrale est trop petite...\n            indice_debut = ...\n        else :\n            indice_fin = ...\n    return ...\n\nlst = [2, 3, 6, 7, 11, 14, 18, 19, 24]\n\nassert trouve_dicho(lst, 14) == 5\nassert trouve_dicho(lst, 3) == 1\nassert trouve_dicho(lst, 5) == None\nassert trouve_dicho(lst, 0) == None\nassert trouve_dicho(lst, 42) == None\n</code></pre> <p>Terminaison et complexit\u00e9 de la m\u00e9thode</p> TerminaisonComplexit\u00e9 <p>Contrairement \u00e0 la premi\u00e8re m\u00e9thode, l'algorithme de recherche par dichotomie contient une boucle <code>while</code> : il faut s'assurer que cette boucle s'arr\u00eate.</p> Variant de boucle <p>Dans la boucle <code>while</code>,  la valeur <code>indice_fin - indice_debut</code> est un variant de boucle: c'est un nombre entier positif qui va d\u00e9cro\u00eetre strictement \u00e0 chaque passage dans la boucle, ce qui assure la terminaison.</p> <p>En effet, dans la boucle: </p> <ul> <li>soit la valeur est trouv\u00e9e, et le <code>return</code> assure la sortie de la boucle;</li> <li>soit indice_debut augmente d'au moins 1, et donc <code>indice_fin - indice_debut</code> diminue strictement;</li> <li>soit indice_fin diminue d'au moins 1, et donc <code>indice_fin - indice_debut</code> diminue strictement.</li> </ul> <p>Dans le pire des cas (la valeur cherch\u00e9e n'est pas dans la liste), combien d'it\u00e9rations de la boucle sont n\u00e9cessaires pour une liste de taille N ?</p> <p>Sachant qu'\u00e0 chaque it\u00e9ration de la boucle on divise le tableau en 2, cela revient donc \u00e0 se demander combien de fois faut-il diviser le tableau en 2 pour  obtenir, \u00e0 la fin, un tableau comportant un seul entier ? Autrement dit, combien de fois faut-il diviser N par 2 pour obtenir 1 ?</p> taille de la liste 1 2 4 8 16 64 256 4096 nombre d'\u00e9tapes <p>Logarithme</p> <p>La fonction math\u00e9matique logarithme de base 2 permet de trouver le nombre de puissances de que contient un nombre N. On note \\(\\log_2(N)\\) .</p> <p>La complexit\u00e9 de l'algorithme de dichotomie est donc logarithmique, en \\(O(\\log_2(n))\\).</p> <p> </p> <p>Exercice : mesure du temps d'ex\u00e9cution</p> \u00c9nonc\u00e9Correction <ol> <li>Utiliser la fonction suivante pour mesurer les temps d'ex\u00e9cution des deux fonctions <code>trouve</code> et <code>trouve_dicho</code> sur 100 appels en cherchant la plus grande valeur de la liste <code>tab_alea</code> fournie. <pre><code>import random\nimport time\n\ndef temps_moyen(f, tab: list, valeur: int, n:int) -&gt; float:\n    '''\n    Renvoie le temps moyen d'ex\u00e9cution sur 'n' it\u00e9rations de la fonction de recherche 'f',\n    appel\u00e9e sur une recherche de 'valeur' dans la liste 'tab'.\n    '''\n    t_moy = 0\n    for k in range(n):\n        t0 = time.time()\n        f(tab, valeur)\n        t1 = time.time()\n        t_moy += t1 - t0\n    return t_moy / n\n\ntab_alea=sorted([random.randint(1, 1000000) for _ in range(100000)])\n</code></pre></li> <li>Recommencer en augmentant la taille de <code>tab_alea</code> (x 10) et comparer les temps d'ex\u00e9cution.</li> </ol>"},{"location":"T07_Algorithmes/T7.2_Tri_selection/T7.2_Tri_selection/","title":"T7.2 Tri par s\u00e9lection","text":""},{"location":"T07_Algorithmes/T7.2_Tri_selection/T7.2_Tri_selection/#721-pourquoi-etudier-des-algorithmes-de-tri","title":"7.2.1 Pourquoi \u00e9tudier des algorithmes de tri ?","text":"<p>Autant ne pas le cacher, ces algorithmes sont d\u00e9j\u00e0 impl\u00e9ment\u00e9s (quelque soit le langage) dans des fonctions tr\u00e8s performantes.  </p> <p>En Python, on utilise la fonction <code>sort()</code>:</p> <pre><code>&gt;&gt;&gt; tab = [4, 8, 1, 2, 6]\n&gt;&gt;&gt; tab.sort()\n&gt;&gt;&gt; tab\n[1, 2, 4, 6, 8]\n</code></pre> <p></p> <p>Le meilleur de nos futurs algorithmes de tri sera moins efficace que celui de cette fonction <code>sort()</code>... Malgr\u00e9 cela, il est essentiel de se confronter \u00e0 l'\u00e9laboration manuelle d'un algorithme de tri: </p> <ul> <li>besoin pratique de trier;</li> <li>tri comme sous-programmes;</li> <li>utilisation de toutes les techniques informatiques.</li> </ul> <p>Le tri par s\u00e9lection est le premier des deux algorithmes de tri que nous allons \u00e9tudier (nous \u00e9tudierons aussi le tri par insertion). Ces deux algorithmes ont pour particularit\u00e9 de :</p> <ul> <li>ne pas n\u00e9cessiter la cr\u00e9ation d'une nouvelle liste. Ils modifient la liste \u00e0 trier sur place.</li> <li>ne pas faire intervenir de fonctions complexes.</li> </ul>"},{"location":"T07_Algorithmes/T7.2_Tri_selection/T7.2_Tri_selection/#722-principe-du-tri","title":"7.2.2 Principe du tri","text":"<p>On cherche \u00e0 trier un tableau de \\(n\\) valeurs diff\u00e9rentes, en g\u00e9n\u00e9ral les entiers de \\(0\\) \u00e0 \\(n-1\\).</p> <ul> <li>En partant de l'indice 0, on cherche l'indice du plus petit \u00e9l\u00e9ment en parcourant le tableau;</li> <li>on l'\u00e9change avec l'\u00e9l\u00e9ment d'indice 0;</li> <li>On recommence en partant de l'indice 1, puis 2, etc. jusqu'\u00e0 ce que le tableau soit tri\u00e9.</li> </ul> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>On veut \u00e9crire une fonction <code>tri_selection</code> qui prend en param\u00e8tre une liste et qui trie cette liste par l'algorithme du tri par s\u00e9lection.</p> <ol> <li>\u00c9crire un jeu de tests pour cette fonction.</li> <li>Compl\u00e9ter puis tester la fonction ci-dessous. </li> </ol> <pre><code>def tri_selection(tab: list) -&gt; None:\n    n = len(tab)\n    for i in range(...):\n        indice_min = \n        for j in range( , ):\n            if tab[j] &lt; tab[indice_min]:\n                ...\n        #il reste \u00e0 \u00e9changer les valeurs d'indice i et indice_min\n        ...\n        ...\n        ...       \n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On va s'int\u00e9resser au temps d'\u00e9x\u00e9cution de ce tri, et plus particuli\u00e8rement au lien entre la taille de la liste donn\u00e9e en entr\u00e9e et ce temps d'\u00e9x\u00e9cution.</p> <p>On d\u00e9finit donc :</p> <ul> <li>une fonction <code>alea</code> qui renvoie une liste de taille <code>n</code> cr\u00e9\u00e9e al\u00e9atoirement;</li> <li>une fonction <code>chrono</code> qui prend en param\u00e8tre un entier <code>n</code> et qui renvoie le temps d'\u00e9x\u00e9cution de la fonction <code>tri_selection</code> pour la liste construite \u00e0 partir de la fonction <code>alea</code>.</li> </ul> <p></p> <ol> <li>Compl\u00e9ter les fonctions dont les extraits sont fournis ci-dessous.</li> <li>Construire une liste (en compr\u00e9hension si possible) des temps obtenus pour les valeurs de <code>n</code> suivantes : 10, 100, 1000, 10000.</li> <li>Quel semble \u00eatre le lien entre <code>n</code> et le temps d'\u00e9x\u00e9cution?</li> </ol> <pre><code>import time\nimport random as rd\n\ndef alea(n):\n    lst_alea = list(range(n))\n    rd.shuffle(lst_alea)\n    return lst_alea\n\ndef chrono(n):\n    t0 = time.time()\n    tri_selection(...)\n    t1 = time.time()\n    return \n\ntailles = [10, 100, 1000, 10000]\ntemps = [...]\n</code></pre> <ol> <li>On va visualiser tout \u00e7a...</li> </ol> <pre><code>import matplotlib.pyplot as plt\n\nplt.plot(tailles, temps)\nplt.show()\n</code></pre>"},{"location":"T07_Algorithmes/T7.3_Tri_insertion/T7.3_Tri_insertion/","title":"T7.3 Tri par insertion","text":"<p>Apr\u00e8s le tri par s\u00e9lection, nous allons \u00e9tudier un deuxi\u00e8me algorithme de tri: le tri par insertion. C'est le \u00abtri du joueur de cartes\u00bb.</p> <p>Il consiste \u00e0 choisir un \u00e9l\u00e9ment et de l'ins\u00e9rer \u00e0 la bonne position en faisant \u00abremonter\u00bb les \u00e9l\u00e9ments plus grands que lui.</p> <p> </p> <p>Quelques remarques:</p> <ul> <li>on commence \u00e0 l'indice 1;</li> <li>pour chaque indice de travail <code>i</code>, on appelle cl\u00e9 l'\u00e9l\u00e9ment de la liste d'indice <code>i</code>;</li> <li>on examine ensuite les \u00e9l\u00e9ments \u00e0 gauche, c'est-\u00e0-dire les \u00e9lements d'indice <code>j &lt; i</code>;</li> <li>tant que l'\u00e9l\u00e9ment d'indice <code>j</code> est sup\u00e9rieur \u00e0 la cl\u00e9, on le d\u00e9cale d'une position vers la droite;</li> <li>une fois que ce n'est plus possible, on ins\u00e8re la cl\u00e9.</li> </ul> <p>Exercice  1</p> \u00c9nonc\u00e9IndicationCorrection <p>Impl\u00e9menter l'algorithme du tri par insertion sous la forme d'une fonction:</p> <pre><code>def tri_insertion(tab: list) -&gt; None:\n    '''\n    Trie en place le tableau tab donn\u00e9 en param\u00e8tre\n    '''\n</code></pre> <pre><code>def tri_insertion(tab: list) -&gt; None:\n    '''\n    Trie en place le tableau tab donn\u00e9 en param\u00e8tre\n    '''\n    for i in range():\n        cle = \n        j = \n        while  and :\n            tab[ ] = tab[ ]\n            j =\n        tab[]\u00a0= \n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>Il s'agit d'\u00e9tudier la complexit\u00e9 de cet algorithme de fa\u00e7on exp\u00e9rimentale.</p> <p>Pour cela:</p> <ol> <li>Reprendre les fonctions <code>chrono</code> et <code>pire_cas</code> de l'exercice 2 sur le tri par s\u00e9lection et afficher le graphique des temps d'ex\u00e9cution.</li> <li>Faire de m\u00eame avec une liste d\u00e9j\u00e0 tri\u00e9e. Que remarquez-vous?</li> </ol> <p>\u00c0 voir</p> <p>https://www.toptal.com/developers/sorting-algorithms </p>"},{"location":"T07_Algorithmes/T7.4_Algos_gloutons/T7.4_Gloutons/","title":"T7.4 Algorithmes gloutons","text":""},{"location":"T07_Algorithmes/T7.4_Algos_gloutons/T7.4_Gloutons/#741-strategie-gloutonne","title":"7.4.1 Strat\u00e9gie gloutonne","text":"<p>Un probl\u00e8me de remplissage</p> <p>On souhaite remplir un rectangle avec des carr\u00e9s, avec le nombre minimum de carr\u00e9s possible.</p> Rectangle 13 \u00d7 8Rectangle 13 \u00d7 11 FigureSolution <p> </p> FigureSolution <p> </p> <p>Algorithme glouton (greedy algorithm)</p> <p>Un algorithme est appel\u00e9 glouton lorsqu'il fait le meilleur choix local \u00e0 chaque \u00e9tape en esp\u00e9rant obtenir le meilleur choix global.</p> <p>Autrement dit, lorsqu'on d\u00e9compose un probl\u00e8me en sous-probl\u00e8mes, plut\u00f4t que de tous les explorer, on ne choisit que celui qui para\u00eet optimal.</p> <p>Si ce choix est toujours correct, on obtiendra bien la solution optimale au probl\u00e8me de d\u00e9part, de mani\u00e8re particuli\u00e8rement efficace. Si ce choix n\u2019est pas trop mauvais on obtiendra une bonne approximation de la solution.</p> <p>Les algorithmes gloutons peuvent donc \u00eatre parfois exacts, ou parfois approch\u00e9s. Mais ils sont g\u00e9n\u00e9ralement extr\u00eamement efficaces.</p>"},{"location":"T07_Algorithmes/T7.4_Algos_gloutons/T7.4_Gloutons/#742-le-probleme-du-rendu-de-monnaie","title":"7.4.2 Le probl\u00e8me du rendu de monnaie","text":"<p>Le probl\u00e8me du rendu de monnaie consiste \u00e0 d\u00e9terminer comment faire une somme (par exemple 27) avec le nombre minimum de pi\u00e8ces et de billets \u00e0 disposition (par exemple 200, 100, 50, 20, 10, 5, 2, 1).</p> <p>On peut bien entendu faire 27 = 10 + 10 + 5 + 1 + 1, mais ce n'est pas la solution optimale, qui est bien entendu (?) 27 = 20 + 5 + 2.</p> <p>Premi\u00e8re strat\u00e9gie: la force brute (bruteforce)</p> <p>On pourrait envisager toutes les fa\u00e7ons de d\u00e9composer une somme donn\u00e9e avec les valeurs \u00e0 disposition. Cette m\u00e9thode permet \u00e0 coup s\u00fbr de trouver la solution optimale globale au probl\u00e8me, mais le nombre de possibilit\u00e9s augmente tr\u00e8s vite (76 d\u00e9compositions pour 27), et n\u00e9cessite un temps de calcul trop important.</p> <p>Nous verrons en Terminale des m\u00e9thodes de programmation relativement efficaces pour explorer toutes les d\u00e9compositions possibles, pour une entr\u00e9e de probl\u00e8me raisonnable...</p> <p>Strat\u00e9gie gloutonne</p> Vers un algorithmeAlgorithmeImpl\u00e9mentationUne solution optimale ? <p>En quoi consiste cette strat\u00e9gie dans le probl\u00e8me du rendu de monnaie?</p> <p>R\u00e9fl\u00e9chir \u00e0 un algorithme en langage naturel avec des valeurs de pi\u00e8ces d\u00e9croissantes (et distinctes) qui donne la liste des pi\u00e8ces n\u00e9cessaires pour une somme donn\u00e9e en entr\u00e9e.</p> <p>La solution qui suit est celle qu\u2019on emploie intuitivement, \u00e0 juste titre, avec les syst\u00e8mes de monnaie en vigueur : essayer de faire la somme en prenant d\u2019abord les plus grosses pi\u00e8ces (le cas o\u00f9 on cherche \u00e0 se d\u00e9barrasser des pi\u00e8ces rouges en achetant du pain n\u2019est pas trait\u00e9).</p> <p>Donn\u00e9es: une liste <code>pieces</code> et une <code>somme</code></p> <p>Initialisation:</p> <ul> <li>un entier <code>i</code> \u00e0 0 (indice de la plus grande pi\u00e8ce) dans la liste <code>pieces</code>;</li> <li>une liste vide <code>monnaie</code> </li> </ul> <p>Algorithme:</p> <ul> <li>tant que <code>somme</code> est strictement positive:<ul> <li>si la pi\u00e8ce \u00e0 l'indice <code>i</code> est inf\u00e9rieure \u00e0 <code>somme</code>, ajouter la pi\u00e8ce \u00e0 <code>monnaie</code> et actualiser <code>somme</code></li> <li>sinon incr\u00e9menter <code>i</code></li> </ul> </li> <li>renvoyer <code>monnaie</code></li> </ul> <p><code>rendu(27, [200, 100, 50, 20, 10, 5, 2, 1])</code> doit renvoyer <code>[20, 5, 2]</code> .</p> <p>Que se passe-t-il si le syst\u00e8me de monnaie est un peu plus exotique, comme 1, 4, 5, 10 et qu'on souhaite faire 28 ? Ou si des pi\u00e8ces, par exemple 5 et 10, ne sont plus disponibles et qu'on souhaite obtenir 63?</p> Moralit\u00e9 <p>La strat\u00e9gie gloutonne ne donne pas syst\u00e9matiquement la solution optimale au probl\u00e8me du rendu de monnaie.</p> <p>Lorsqu'elle le fait, on dit que le syst\u00e8me de monnaie est canonique, ce qui est compliqu\u00e9 \u00e0 d\u00e9terminer math\u00e9matiquement.</p>"},{"location":"T07_Algorithmes/T7.4_Algos_gloutons/T7.4_Gloutons/#743-le-probleme-du-sac-a-dos","title":"7.4.3 Le probl\u00e8me du sac \u00e0 dos","text":"<p>Le probl\u00e8me du sac \u00e0 dos (Knapsack problem ou KP) est un probl\u00e8me majeur d'optimisation. On dispose d\u2019une collection d'objets ayant un poids et une valeur. On souhaite les mettre dans un sac \u00e0 dos qui peut contenir un poids maximum M.</p> <p>Quels sont les objets qu\u2019il faut placer dans le sac \u00e0 dos pour maximiser sa valeur ?</p> <p> </p> <p>Actuellement :</p> <ul> <li>On sait trouver LA meilleure solution, mais en explorant toutes les combinaisons une par une. Cette m\u00e9thode par force brute est inapplicable si beaucoup d'objets sont en jeu.</li> <li>On sait facilement trouver une bonne solution, mais pas forc\u00e9ment la meilleure, par exemple en adoptant une strat\u00e9gie gloutonne.</li> <li>On ne sait pas trouver facilement (en temps polynomial) la meilleure solution. Si vous y arrivez, 1 Million de $ sont pour vous (voir aussi la vid\u00e9o de la page d'accueil du th\u00e8me ).</li> </ul> <p>Force brute</p> <p>Pour chaque sous-ensemble d'objets, on s\u00e9lectionne ceux dont le poids est inf\u00e9rieur \u00e0 M puis parmi ceux-l\u00e0, celui dont la valeur totale est maximale.</p> <p>Pour explorer efficacement tous les sous-ensembles possibles, on remarque d'abord qu'ils sont au nombre de \\(2^n\\) (o\u00f9 \\(n\\) est le nombre total d'objets) : pour chaque objet, soit on le prend, soit on ne le prend pas, c'est-\u00e0-dire 2 choix pour chaque objet.</p> <p>Ces sous-ensembles correspondent aux \u00e9critures binaires d'un nombres \u00e0 \\(n\\) bits. Par exemple, avec 3 objets A, B et C:</p> binaire choix sous-ensemble 000 . . . { } 001 . . C {C} 010 . B . {B} 011 . B C {B, C} 100 A . . {A} 101 A . C {A, C} 110 A B . {A, B} 111 A B C {A, B, C} <p>Donc pour chaque nombre allant de 0 \u00e0 \\(2^n-1\\), on transforme son \u00e9criture binaire sur \\(n\\) bits en liste, et on extrait de la liste des objets ceux qui correspondent aux bits 1 de cette liste.</p> Fonctions ultra-pythoniennes, \u00e0 m\u00e9diter<pre><code>def liste_bits(i:int, n:int) -&gt; list:\n    '''\n    renvoie l'\u00e9criture binaire sur n bits d'un entier sous forme de liste.\n    Par exemple:\n    &gt;&gt;&gt; liste_bits(6, 8)\n    [0, 0, 0, 0, 0, 1, 1, 0]\n    '''\n    return list(map(int, list(bin(i)[2:].rjust(n, '0'))))\n\ndef sous_ens(liste:list, k:int) -&gt; list:\n    '''\n    renvoie le k-ieme sous-ensemble de la liste.\n    Exemple:\n    &gt;&gt;&gt; sous_ens(['A', 'B', 'C'], 5)\n    ['A', 'C']\n    '''\n    choix = liste_bits(k, len(liste))\n    return [l for l, c in zip(liste, choix) if c == 1]\n</code></pre> <p>Compl\u00e9ter le code ci_dessous, en utilisant les fonctions pr\u00e9c\u00e9dentes:</p> Code \u00e0 compl\u00e9terCorrection Exploration syst\u00e9matique<pre><code>def sacados_bf(poids: list, valeurs: list, M: int) -&gt; list:\n    '''\n    Renvoie la s\u00e9lection (liste de 0 et 1) des objets qui\n    permettent d'emporter la plus grande valeur\n    '''\n    meilleure_selection = None\n    meilleure_valeur = 0\n    n = len(poids)\n    for k in range(...):\n        poids_selection = sum(...)\n        valeur_selection = ...\n        if ... and ...:\n            meilleure_valeur = ...\n            meilleure_selection = ...\n    return meilleure_selection\n</code></pre> Exploration syst\u00e9matique<pre><code>def sacados_bf(poids: list, valeurs: list, M: int) -&gt; list:\n    '''\n    Renvoie la s\u00e9lection (liste de 0 et 1) des objets qui\n    permettent d'emporter la plus grande valeur\n    '''\n    meilleure_selection = None\n    meilleure_valeur = 0\n    n = len(poids)\n    for k in range(2**n):\n        poids_selection = sum(sous_ens(poids, k))\n        valeur_selection = sum(sous_ens(valeurs, k))\n        if poids_selection &lt;= M and valeur_selection &gt; meilleure_valeur:\n            meilleure_valeur = valeur_selection\n            meilleure_selection = liste_bits(k, n)\n    return meilleure_selection\n</code></pre> <p>Strat\u00e9gie gloutonne</p> ExemplePrincipe de l'algorithmeImpl\u00e9mentationCorrection <p>Pour d\u00e9finir une strat\u00e9gie gloutonne, il faut r\u00e9pondre \u00e0 cette question: \u00abQu'est-ce qui constitue le meilleur choix local ?\u00bb</p> <p>Prenons un exemple, avec un sac de 40 kg et les objets suivants:</p> objet A B C D E F masse 13 12 8 10 14 18 valeur 700 500 200 300 600 800 <p>Il est assez rapide de voir que par exemple l'objet E est moins int\u00e9ressant que le A, car il est plus lourd et sa valeur est moindre. Mais qu'il est plus int\u00e9ressant que le D, puis qu'il vaut deux fois plus, mais n'est pas deux fois plus lourd...</p> <p>Il faut donc consid\u00e9rer le \u00abprix au kg\u00bb, c'est-\u00e0-dire le rapport valeur/masse.</p> <p>\u00c0 chaque \u00e9tape, on choisit l'objet ayant le plus grand ratio parmi ceux dont la masse est inf\u00e9rieure \u00e0 la masse restante dans le sac.</p> objet A B C D E F masse 13 12 8 10 14 18 valeur 700 500 200 300 600 800 ratio 53.8 41.7 25 30 42.9 44.4 <p>On choisit donc:</p> <ul> <li>l'objet A, il reste 27 kg disponibles dans le sac;</li> <li>l'objet F, il reste 9  kg disponibles dans le sac;</li> <li>l'objet C, puisque c'est le seul dont la masse est inf\u00e9rieure \u00e0 9 kg.</li> </ul> <p>On consid\u00e8re chaque objet comme une liste <code>[masse, valeur]</code> et donc l'ensemble des objets est:</p> <pre><code>objets  = [[13, 700], [12, 500], [8, 200], [10, 300], [14, 600], [18, 800]]\n</code></pre> <p>Indications:</p> <ul> <li>\u00e9crire une fonction <code>ratio</code> qui prend un objet en param\u00e8tre et renvoie son ratio;</li> <li>trier la liste <code>objets</code> avec cette fonction <code>ratio</code> comme cl\u00e9 de tri, dans l'ordre d\u00e9croissant (voir ici pour un rappel des fonctions <code>sort</code> et <code>sorted</code>);</li> <li>parcourir enfin la liste <code>objets</code> en s\u00e9lectionnant l'objet si sa masse le permet.</li> </ul> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>\u00c9x\u00e9cuter la m\u00e9thode par force brute sur l'exemple pr\u00e9c\u00e9dent.</p> <p>Quel algorithme donne la meilleure r\u00e9ponse?</p>"},{"location":"T07_Algorithmes/T7.4_Algos_gloutons/T7.4_Gloutons/#bilan","title":"Bilan","text":"<p>La strat\u00e9gie gloutonne donne tr\u00e8s rapidement des solutions satisfaisantes mais pas forc\u00e9ment optimales. Pour beaucoup de probl\u00e8mes (dont le probl\u00e8me du sac \u00e0 dos), la recherche d'une solution optimale sans passer par la force brute semble impossible (mais n'est pas d\u00e9montr\u00e9e). Dans ce cas-l\u00e0, la strat\u00e9gie gloutonne peut \u00eatre employ\u00e9e pour avoir vite et bien une solution convenable, m\u00eame si peut-\u00eatre non optimale. On dit que la strat\u00e9gie gloutonne est une heuristique de r\u00e9solution. On sait que ce n'est pas forc\u00e9ment optimal, mais faute de mieux, on s'en contente...</p>"},{"location":"T07_Algorithmes/T7.5_KNN/T7.5_KNN/","title":"T7.5 Algorithme des k plus proches voisins","text":"<p>L'algorithme KNN (k-nearest neighbors) est un algorithme d'apprentissage supervis\u00e9 (Machine Learning en anglais... et bien souvent en fran\u00e7ais) qui permet de r\u00e9soudre des probl\u00e8mes de classification:</p> <ul> <li>on dispose d'un jeu de donn\u00e9es (d'entra\u00eenement ou d'apprentissage) pour lesquelles on conna\u00eet la classe de chaque donn\u00e9e;</li> <li>on introduit une nouvelle donn\u00e9e et on cherche \u00e0 quelle classe elle appartient, en comparant au jeu d'apprentissage.</li> </ul> <p> </p> <p>Ces probl\u00e8mes de classification sont au centre de l'intelligence artificelle:</p> <ul> <li>la cam\u00e9ra d'une voiture autonome per\u00e7oit un panneau, mais quel est ce panneau ?</li> <li>un grain de beaut\u00e9 est pris en photo par un dermatologue, ce grain de beaut\u00e9 est-il canc\u00e9reux ?</li> <li>etc.</li> </ul> <p>Exemple-type: jeu de donn\u00e9es IRIS</p> <p>Le jeu de donn\u00e9es Iris contient des mesures de largeur et longueur de s\u00e9pales et p\u00e9tales de 150 exemples d\u2019iris appartenant \u00e0 3 esp\u00e8ces particuli\u00e8res : Iris-Setosa (0), Iris-Versicolour (1) et Iris-Virginica (2). Il y a 50 exemples par esp\u00e8ce.</p> <p>Si on ne s'int\u00e9resse qu'aux p\u00e9tales, on peut construire (c'est un bon exercice) le graphique suivant:</p> 3 esp\u00e8ces2 nouveaux irisZoomVerdict <p> </p> <p> </p> <p> </p> <p> </p> <p>Principe de l'algorithme KNN</p> <p>Chaque donn\u00e9e est d\u00e9crite par des caract\u00e9ristiques num\u00e9riques (appel\u00e9es features). On peut donc \u00e9tablir une distance entre deux donn\u00e9es.</p> <p>Avec une table de donn\u00e9es dont on conna\u00eet la classe de chaque \u00e9l\u00e9ment, et une donn\u00e9e cible \u00e0 classifier:</p> <ul> <li>On trie la table selon la distance avec la cible;</li> <li>On consid\u00e8re les k premiers \u00e9l\u00e9ments (les k plus proches voisins);</li> <li>On retourne la classe majoritaire parmi ces k \u00e9l\u00e9ments.</li> </ul> <p>Remarque: le choix de la distance n'est pas anodin. Bien qu'il en existe plusieurs, on utilisera la distance \u00abnaturelle\u00bb, c'est-\u00e0-dire la distance euclidienne: \\(d((x_1,y_1), (x_2,y_2)) = \\sqrt{(x_1-x_2)^2 + (y_1-y_2)^2}\\)</p> <p>Impl\u00e9mentation en Python</p> <ol> <li>\u00c9crire une fonction <code>distance</code>.</li> <li>\u00c9crire une fonction <code>knn</code>, qui prendra en param\u00e8tres une valeur de <code>k</code>, une table de donn\u00e9es et une donn\u00e9e cible et qui renvoie la classe majoritaire parmi les <code>k</code> plus proches voisins.</li> <li>Tester la fonction sur le jeu issu du fichier IRIS.</li> </ol>"},{"location":"T08_Extras/accueil/","title":"Extras","text":"<p>Vous trouverez ici 4 espaces:</p> Exercices suppl\u00e9mentairesProjetsPygameDivers <p>Pour s'exercer et progresser en programmation.</p> <p> </p> <p>Des projets plus ou moins guid\u00e9s.</p> <p> </p> <p></p> <p>Pygame est un package de Python facilitant la cr\u00e9ation de jeux bas\u00e9s une interface graphique.</p> <p>Cette section traite de points qui ne sont pas au programme mais qui peuvent vous simplifier la vie.</p> <p> </p>"},{"location":"T08_Extras/1Exercices/Exercices/","title":"Exercices suppl\u00e9mentaires","text":"<p>Fiches d'exercices sur Capytale</p> <ul> <li> <p>Fiche d'exercices 1 ou code de partage : <code>b154-1046119</code>.</p> </li> <li> <p>Fiche d'exercices 2 ou code de partage : <code>5d12-1084132</code>.</p> </li> <li> <p>Fiche d'exercices 3 ou code de partage : <code>a8b4-1629612</code>.</p> </li> </ul> <p>La majorit\u00e9 des exercices propos\u00e9s sont issus du site https://pydefis.callicode.fr qui recense tous les d\u00e9fis des diff\u00e9rentes \u00e9ditions du concours <code>c0d1ng UP</code>.</p> <p> </p> <p>L'affiche au format PDF , plus pratique pour d\u00e9chiffrer le message cach\u00e9 ...</p> <p>Vous pouvez vous y cr\u00e9er un compte, pour valider les d\u00e9fis et progresser au Hall of Fame... mais ce n'est absolument pas oblig\u00e9.</p> <p>D\u00e9samor\u00e7age d'un explosif (I)</p> \u00c9nonc\u00e9IndicationCorrection <p>https://pydefis.callicode.fr/defis/Desamorcage01/txt </p> <p>Le d\u00e9coupage de nombres selon un certain nombre de chiffres est quelque chose de courant en programmation.</p> <p>Pour cela, l'astuce r\u00e9side en l'utilisation de la division euclidienne, par la bonne puissance de 10.</p> <p>Par exemple, si on veut r\u00e9cup\u00e9rer le chiffre des unit\u00e9s d'un nombre, il suffit de prendre le reste de la division euclidienne (op\u00e9rateur <code>%</code> en Python) du nombre par 10. Les autres chiffres seront donn\u00e9s par le quotient (op\u00e9rateur <code>//</code> en Python).</p> <pre><code>&gt;&gt;&gt; 3748 % 10\n8\n&gt;&gt;&gt; 3748 // 10\n374\n</code></pre> <p>Pour les deux derniers chiffres, on effectuera une division euclidienne par 100, pour les trois derniers par 1000, etc.</p> <pre><code>&gt;&gt;&gt; entree = 317010\n&gt;&gt;&gt; entree % 1000\n10\n&gt;&gt;&gt; entree // 1000\n317\n</code></pre> <p>SW IV : Il a mis son mot de passe sur un post-it !</p> \u00c9nonc\u00e9IndicationCorrection <p>https://pydefis.callicode.fr/defis/LunetteAstro/txt </p> <p>Encore la division euclidienne...</p> <p>Toc Boum</p> \u00c9nonc\u00e9IndicationCorrection : version basiqueCorrection : version \u00e9volu\u00e9e <p>https://pydefis.callicode.fr/defis/TocBoum/txt </p> <p>Utiliser la \u00abbrute-force\u00bb (il s'agit de tester, une \u00e0 une, toutes les combinaisons possibles...) !</p> <p>O\u00f9 l'on affiche tous les couples possibles, et on trouve le bon en les passant en revue \u00ab\u00e0 la main\u00bb.</p> <p>On va m\u00e9moriser le meilleur couple, c'est-\u00e0-dire celui dont la diff\u00e9rence est la plus petite. J'appelle <code>best_a</code> et <code>best_b</code> ces deux valeurs, que j'initialise \u00e0 des valeurs volontairement \u00e9loign\u00e9es.</p> <p>Puis \u00e0 chaque couple trouv\u00e9 (comme dans la version basique), je compare la diff\u00e9rence des deux nombres \u00e0 celle des meilleurs. Si elle est plus petite, je remplace par les nouvelles valeurs de <code>a</code> et de <code>b</code></p> <p>Pour faire la diff\u00e9rence entre deux valeurs, peu importe le signe: on utilisera la valeur absolue, <code>abs</code> en Python.</p> <p>Le message pour Queulorior</p> \u00c9nonc\u00e9IndicationsCorrection <p>https://pydefis.callicode.fr/defis/Queulorior/txt </p> <p>En utilisant <code>pygame</code>.</p> Rappel du code minimal pour Pygame<pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((640, 480)) # taille de la fen\u00eatre \u00e0 \u00e9ventuellement modifier...\nfenetre.fill([255, 255, 255]) # on peut choisir une autre couleur de fond que du blanc...\n\n# D\u00e9but des instructions\nmessage = '''NNEESOOESEENNEEOOSEOSEEENNESENSSENNEESSOOEEENNEEOOSEOSEEENEENOOEESOOSEEEEEEENONSESENNSSENNEESSOOEEENNSSEENNSSEEENOONEEOOSEESEEEENNEESSOOEEENNEESOOEESENNESENSSEEENOONEEOOSEESEEEENNSSEEENNEESOOEESEEEENNEEOOSEOSEEENNEESSOOEEENNEESOOESEENNEEOOSEOSEEEENNOEEOSSEEEEENNEESOOEESOOEEENNEESOOESEENNSSEENNSSENNESNESSENNEEOOSEOSEEENNSSEENNSSEEENOONEEOOSEESENNEEOOSEOSEEEEEENNEESSOOEEENNEEOOSEOSEEENNESNESSENNEESOOEESENNSSENNESENSS'''\n\n\n\n\n# Fin des instructions\n\npygame.display.flip()\n\n# Boucle des \u00e9v\u00e9nements\ncontinuer = True\nwhile continuer:\n    for evenement in pygame.event.get():    #Attente des \u00e9v\u00e9nements\n        if evenement.type == QUIT:\n            continuer = False\n\n# Sortie\npygame.quit()\n</code></pre> <p>Pour r\u00e9soudre ce pyd\u00e9fi, il va valloir tracer un segment pour chaque pas en direction de N, S, O, E. Commen\u00e7ons par choisir une taille pour chaque pas, par exemple 10 pixels: <pre><code>pas = 10\n</code></pre></p> <p>Ensuite il faut savoir tracer un segment </p> <pre><code>pygame.draw.line(fenetre, [0, 0, 0], [0, 0], [50, 30], 2)\n</code></pre> <p>L'instruction pr\u00e9c\u00e9dente trace un segment (a line) d'\u00e9paisseur <code>2</code> pixels, en noir (<code>[0, 0, 0]</code>) entre les points de coordonn\u00e9es <code>[0, 0]</code> et <code>[50, 30]</code>.</p> <p>Enfin il faut mod\u00e9liser correctement le probl\u00e8me, c'est-\u00e0-dire identifier les grandeurs dont on va avoir besoin et avec quels types de variables on va les repr\u00e9senter...</p> <p>On a besoin \u00e0 chaque \u00e9tape:</p> <ul> <li>d'un point de d\u00e9part et d'un point d'arriv\u00e9e (se rappeler de l'exercice 2.2 de la s\u00e9rie 3 avec pygame ici) dont il faut calculer les coordonn\u00e9es en fonction de la lettre lue (N, S, E, O);</li> <li>d'un d\u00e9placement entre les deux, c'est-\u00e0-dire tracer une ligne.</li> </ul> <p>Cerb\u00e8re</p> \u00c9nonc\u00e9IndicationCorrection <p>https://pydefis.callicode.fr/defis/Herculito12Cerbere/txt </p> <p>Brute-forcez: tester toutes les longueurs enti\u00e8res possibles...</p> <p>SW I: \u00e0 l'assaut de Gunray</p> \u00c9nonc\u00e9IndicationCorrection <p>https://pydefis.callicode.fr/defis/PorteBlindeeSabre/txt </p> <p>Utilisez des accumulateurs.</p> <p>Les pouvoirs psychiques de Psystigri </p> \u00c9nonc\u00e9Correction <p>https://pydefis.callicode.fr/defis/PsystigriPsy/txt </p> <pre><code>objets = [-98, -66, 74, -85, 97, 38, 34, -14, 29, -58, 21, 2, 1, 35, 32, 50, -52, 3, -73, -13, -99, 86, -71, -86, 50, 8, -78, 89, -41, 77, 34, -59, -57, 49, 43, 100, 25, 14, -80, -17, 42, -73, -81, 19, -77, -85, -100, 3, 17, 72, 9, 34, 11, 1, 60, 96, 40, 54, 76, -77, -52, 19, -54, -92, -92, 27, 48, -43, 59, 94, 72, -17, -88, 18, 2, -77, 86, 66, -67, 51, 14, 79, -58, -1, -21, 76, 60, 51, -26, -91, 32, 79, 36, 11, -9, 34, -95, -92, -89, -76, 55, 69, -21, -1, 51, 85, 28, 15, -70, 15, 4, -72, 70, -86, 57, -22, -53, -64, 9, 63, 26, 30, -71, -67, -94, 9, 53, -80, 55, -52, -30, 55, 11, 99, 51, -48, 46, -56, -64, 50, -38, 34, 64, 71, -92, 79, -53, -2, 88, -8, 96, 14, 14, -89, -90, -19, -26, 17, 97, 70, 62, 83, 28, 96, -55, -72, -37, 20, -12, -49, 65, 28, -11, -40, 61, -67, 7, -32, 13, -81, -53, -92, 43, -92, -3, 1, -15, -72, 64, -53, -16, 90, -47, -91, 68, 78, -67, 15, -68, -92, -97, -18, -6, 10, -37, -47, 60, -17, -2, -51, -46, 65, 81, 46, 33, -15, 82, 96, 28, -21, -41, -87, -52, -68, 55, -75, 57, -94, -16, -1, -28, 67, 35, 81, 78, -47, 93, -1, 52, -53, 14, 2, -15, 14, -82, 43, -48, -53, 52, -7, -27, -89, 80, 22, 90, -29, -53, -22, -42, 35, -9, 36, 29, -85, 19, -20, 33, -93, 50, 36, -37, -28, -94, -61, -32, -53, -30, -97, -4, -100, -88, -44, 68, 29, -2, 53, -62, -81, -89, 74, 80, 80, 88, -13, -90, 15, 1, -45, 3, 4, 81, 55, -94, -91, -62, -60, -52, 45, -52, 77, 10, -63, 43, -36, -90, 58, 26, -76, -2, -76, -51, 60, 64, 5, 32, 14, 22, 1, -80, -52, -33, 39, 74, -60, 32, 42, -83, -62, 0, -43, -61, 77, -96, -63, -60, 92, 68, -53, -53, 5, 39, -4, 51, 72, -23, 86, 31, 70, 77, 38, -51, 25, -51, 33, -94, -17, 20, -47, 93, 60, 61, 80, -54, -54, -88, -75, 34, 11, 53, 7, -2, 2, -55, -78, 23, -78, -31, -7, 10, 85, 41, 20, -93, -7, -31, 55, -62, -54, -35, -66, -70, -98, -13, 98, -15, 70, 78, 21, -87, -79, -67, 22, 89, 84, -49, 96, 63, 94, 74, 46, 82, -34, 73, 42, 70, 26, -2, 68, -48, -63, -86, 55, 42, 16, -32, -98, 14, 70, -68, -88, -21, 75, 45, 18, 10, 71, 93, 99, -58, 42, 14]\nenergie = 78\nindice_zero = 0\n\n\n##\u00a0Sol 1\n\nfor objet in objets:\n    if energie &gt; 0:\n        indice_zero += 1\n    if energie &gt;= abs(objet):\n        energie -= 1\n\nprint(indice_zero)\n\n## Sol 2\n\nfor i in range(len(objets)):\n    if energie &gt;= abs(objets[i]):\n        energie -= 1\n        if energie == 0:\n            indice_zero = i + 1\n\nprint(indice_zero)\n\n## Sol 3\n\ni = 1\nwhile energie &gt; 0:\n    if energie &gt;= abs(objets[i]):\n        energie -= 1\n    i += 1\nprint(i)\n\n\n## SOl 4\n\ndef indice_zero(tab, e):\n    for i in range(len(tab)):\n        if e &gt;= abs(tab[i]):\n            e -= 1\n            if e == 0:\n                return i + 1\n\nprint(indice_zero(objets, energie))\n</code></pre>"},{"location":"T08_Extras/2Projets/Projet1/","title":"Projet n\u00b01 - Jeu de tableau","text":"<p>Sujets</p> <p>Dans ce premier projet, je vous propose de programmer un jeu \u00absimple\u00bb.</p> Tic-Tac-Toe (morpion)Puissance 4MemoryGASPLights Out <p>Est-il vraiment n\u00e9cessaire de pr\u00e9senter ce jeu?</p> <p> </p> <p>Options du programme:</p> <ol> <li>Le programme doit afficher quel joueur doit jouer, puis le joueur doit saisir dans quelle case il joue</li> <li>la saisie du joueur devra \u00eatre v\u00e9rifi\u00e9e</li> <li>Le programme s'arr\u00eate d\u00e8s qu'un joueur parvient \u00e0 aligner 3 symboles, ou en cas de match nul</li> <li>En fin de partie, le choix \"r ou R\" relance une nouvelle partie, le choix \"q ou Q\" permet de quitter le jeu</li> </ol> Conseils - aides <p>Trop facile...</p> <p>Est-il vraiment n\u00e9cessaire de pr\u00e9senter ce jeu?</p> <p> </p> <p>Options du programme:</p> <ol> <li>Le programme doit afficher quel joueur doit jouer, puis le joueur doit saisir dans quelle colonne il place un pion</li> <li>la saisie du joueur devra \u00eatre v\u00e9rifi\u00e9e</li> <li>Le programme s'arr\u00eate d\u00e8s qu'un joueur parvient \u00e0 aligner 4 pions, ou en cas de match nul</li> <li>En fin de partie, le choix \"r ou R\" relance une nouvelle partie, le choix \"q ou Q\" permet de quitter le jeu</li> </ol> Conseils - aides <ul> <li>R\u00e9p\u00e9rer le joueur par son symbole (<code>'X'</code> ou <code>'O'</code>).</li> <li> <p>Pr\u00e9voir une variable (de type <code>list</code>) stockant les indices (de ligne) o\u00f9 on peut placer un pion (au d\u00e9part du jeu tous ces indices sont \u00e0 5). Cela permet de rapidement placer un pion dans la grille, de v\u00e9rifier qu'un coup est valable (on peut jouer dans une colonne sauf si l'indice est <code>-1</code>) et de v\u00e9rifier le match nul.</p> </li> <li> <p>Fonctions \u00e0 pr\u00e9voir (\u00e0 mon avis), \u00e0 vous de r\u00e9fl\u00e9chir aux \u00e9ventuels param\u00e8tres et \u00e9ventuelles valeurs renvoy\u00e9es.</p> <ul> <li>afficher_grille()</li> <li>saisir_coup()</li> <li>verifier_coup()</li> <li>actualiser_grille()</li> <li>alignement_horizontal()</li> <li>alignement_vertical()</li> <li>alignement_diagonal_droite()</li> <li>alignement_diagonal_gauche()</li> <li>victoire()</li> </ul> </li> <li> <p>La fonction victoire() utilisera les 4 fonctions d'alignement.</p> </li> <li>Pour l'alignement horizontal, ne tester que la ligne dans laquelle un joueur vient de jouer. Idem pour l'alignement vertical, une seule colonne \u00e0 tester.</li> <li>Pour les alignements diagonaux, rep\u00e9rer (au brouillon) de quelles cases il peut y avoir une diagonale d'au moins 4 cases qui part vers le bas \u00e0 droite (et vers le bas \u00e0 gauche). Il n'y en a pas tant que \u00e7a.</li> <li>Pour tester les alignements, le plus simple est de transformer une ligne (ou une colonne, ou une diagonale) de la grille en cha\u00eene de caract\u00e8res, puis de faire un simple test par <code>if 'XXXX' in ...</code> ou <code>if 'OOOO' in ...</code> en fonction du joueur qui vient de jouer.</li> </ul> <p>Le memory des nombres est un jeu pour enfants o\u00f9 des paires de cartes sont m\u00e9lang\u00e9es et retourn\u00e9es. Il s'agit de retrouver ces paires en retournant deux cartes. Si c'est une paire, on la supprime. Sinon on retourne les cartes et on recommence.</p> <p> </p> <p>On mettra au point une version \u00absolo\u00bb avec un d\u00e9compte du nombre de tentatives avant \u00e9ventuellement de mettre au point une version \u00abduo\u00bb.</p> <p>Options du programme:</p> <ol> <li>le joueur devra saisir les cases \u00e0 d\u00e9voiler</li> <li>la saisie du joueur devra \u00eatre v\u00e9rifi\u00e9e</li> <li>Le programme indiquera le nombre de coups jou\u00e9s \u00e0 chaque tour</li> <li>Le choix \"r ou R\" r\u00e9initialise le jeu (et le compteur)</li> <li>Le choix \"q ou Q\" permet de quitter le jeu</li> </ol> Conseils - aides <ul> <li>Pr\u00e9voir deux grilles de m\u00eame dimensions: une qui contient les cartes/nombres, une qui contient l'information carte cach\u00e9e/d\u00e9voil\u00e9e.</li> <li>Pr\u00e9voir une variable qui compte le nombres de paires d\u00e9j\u00e0 d\u00e9voil\u00e9es pour pr\u00e9voir l'arr\u00eat du jeu.</li> <li> <p>Fonctions \u00e0 pr\u00e9voir (\u00e0 mon avis), \u00e0 vous de r\u00e9fl\u00e9chir aux \u00e9ventuels param\u00e8tres et \u00e9ventuelles valeurs renvoy\u00e9es.</p> <ul> <li>generer_grille_depart()</li> <li>saisir_choix()</li> <li>verifier_choix()</li> <li>actualiser()</li> <li>afficher()</li> </ul> </li> <li> <p>Pour g\u00e9n\u00e9rer la grille, je vous conseille de:</p> <ul> <li>cr\u00e9er une liste avec toutes les valeurs en double, par exemple <code>[1, 1, 2, 2, 3, 3, ..., 10, 10]</code> </li> <li>m\u00e9langer al\u00e9atoirement cette liste avec la m\u00e9thode <code>shuffle()</code> du module <code>random</code> </li> <li>parcourir la grille et y placer les valeurs issues de cette liste (utiliser la m\u00e9thode <code>pop()</code> sur la liste pour r\u00e9cup\u00e9rer la derni\u00e8re valeur et l'enlever).</li> </ul> </li> </ul> <p>Le Gasp est un casse-t\u00eate apparu dans la revue Jeux &amp; Strat\u00e9gie n\u00b038 (avril/mai 1986). Sur un damier, on place des pions bicolores. Au d\u00e9part, tous les pions sont noirs. Le but est de retourner ces pions pour qu'ils deviennent tous blancs.</p> <p>Pour retourner des pions, on d\u00e9signe une case. Ses voisines changent de couleur (mais pas la case d\u00e9sign\u00e9e).</p> <p>Le sch\u00e9ma ci-dessous, tir\u00e9 de Jeux &amp; Strat\u00e9gie, montre un d\u00e9but de partie.</p> <p> </p> <p>Options du programme:</p> <ol> <li>le programme demandera tout d'abord de choisir la taille de l'aire de jeu entre 2 et 12 (valeurs paires uniquement)</li> <li>le joueur devra saisir la case \u00e0 modifier</li> <li>la saisie du joueur devra \u00eatre v\u00e9rifi\u00e9e</li> <li>Le programme indiquera le nombre de coups jou\u00e9s \u00e0 chaque tour</li> <li>Le choix \"r ou R\" r\u00e9initialise le jeu (et le compteur)</li> <li>Le choix \"q ou Q\" permet de quitter le jeu</li> </ol> <p>Issu de Wikipedia :</p> <p>Lights Out est un jeu \u00e9lectronique commercialis\u00e9 par Tiger Electronics en 1995. Le jeu est compos\u00e9 d\u2019une grille de cinq par cinq lumi\u00e8res. Quand le jeu commence, un nombre al\u00e9atoire ou un motif enregistr\u00e9 de ces lumi\u00e8res s\u2019allument. Appuyer sur l\u2019une des lumi\u00e8res basculera la position des lumi\u00e8res adjacentes \u00e0 celle-ci (haut, bas, gauche, droite, mais pas en diagonale). Le but du jeu est d\u2019\u00e9teindre toutes les lumi\u00e8res, de pr\u00e9f\u00e9rence avec le moins de coups possible.</p> <p> </p> <p>Options du programme:</p> <ol> <li>le joueur devra saisir la case \u00e0 modifier</li> <li>la saisie du joueur devra \u00eatre v\u00e9rifi\u00e9e</li> <li>Le programme indiquera le nombre de coups jou\u00e9s \u00e0 chaque tour</li> <li>Le choix \"r ou R\" r\u00e9initialise le jeu (et le compteur)</li> <li>Le choix \"q ou Q\" permet de quitter le jeu</li> </ol> Conseils - aides <ul> <li>La position de d\u00e9part doit \u00eatre construite en choisissant al\u00e9atoirement quelques (3 ou 4?) cases et en effectuant les allumages correspondants.</li> <li>Faire attention \u00e0 la gestion des bords.</li> </ul> <p>Contraintes</p> <ul> <li>Nombre de participant\u00b7e\u00b7s : 2 ou 3;</li> <li>Nombre de s\u00e9ances: 5;</li> <li>Programmation fonctionnelle: le programme doit \u00eatre structur\u00e9 \u00e0 partir de fonctions (sp\u00e9cifi\u00e9es compl\u00e8tement);</li> <li>Affichage en console.</li> </ul> <p>D\u00e9roul\u00e9 du projet</p> <ul> <li>S\u00e9ance 1 (11/12/2024) : conception du projet ( programmation )<ul> <li>choix du sujet;</li> <li>r\u00e9flexion autour des variables n\u00e9cessaires, du choix des structures de donn\u00e9es pour repr\u00e9senter les diff\u00e9rentes composantes du jeu;</li> <li>d\u00e9coupage du programme en fonctions (raisonner par verbes d'action, ne pas se pr\u00e9occuper du code \u00e0 cette \u00e9tape);</li> <li>attribution des fonctions aux membres du groupe.</li> </ul> </li> <li>S\u00e9ances 2 (16/12/2024) et 3 (18/12/2024)<ul> <li>\u00e9criture des fonctions;</li> <li>tests des fonctions;</li> </ul> </li> <li>S\u00e9ance 4 (06/01/2025)<ul> <li>assemblage des fonctions dans le fichier principal;</li> <li>d\u00e9buggage.</li> </ul> </li> <li>S\u00e9ance 5 (08/01/2025)<ul> <li>finalisation/am\u00e9liorations du programme;</li> <li>rendu du travail.</li> </ul> </li> </ul> <p>Apports techniques</p> AffichagesGestion d'un flagVariables globalesUtilisation de la consoleStructure d'un programmeUtilisation d'une fonction <code>main()</code> <p>Votre projet comportera au moins une fonction qui se chargera de l'affichage du jeu en console. Cette fonction, ou plut\u00f4t proc\u00e9dure ne renverra aucune valeur, elle contiendra uniquement des instructions <code>print()</code>.</p> <p>Pensez \u00e0 utiliser les espaces, et les caract\u00e8res <code>- _ |</code> . Utilisez \u00e9galement des f-string pour construire vos affichages en fonction du contenu de vos variables.</p> <p>La m\u00e9thode <code>join</code> permet de fusionner les \u00e9l\u00e9ments d'une liste contenant des cha\u00eenes de caract\u00e8res avec un (ou plusieurs) caract\u00e8re(s) s\u00e9parateur(s):</p> <pre><code>&gt;&gt;&gt; \" | \".join(['.', 'X', '.', '.'])\n'. | X | . | .'\n</code></pre> <p>Enfin, le caract\u00e8re <code>\"\\n\"</code> provoque un retour \u00e0 la ligne.</p> <pre><code>&gt;&gt;&gt; print(\"La NSI, \\n c'est de l'eau.\")\nLa NSI, \n c'est de l'eau.\n</code></pre> <p>Pour aller plus loin, sur les caract\u00e8res sp\u00e9ciaux permettant de faire de beaux affichages de tableaux : https://en.wikipedia.org/wiki/Box-drawing_characters.</p> <p>En programmation, un flag (drapeau) est une variable le plus souvent de type <code>bool</code> qui va indiquer si dans un programme une boucle <code>while</code> doit continuer \u00e0 tourner ou doit s'arr\u00eater.</p> <p>On l'initialise \u00e0 <code>True</code> et dans la boucle, une condition d'arr\u00eat doit pouvoir la faire passer  \u00e0 la valeur <code>False</code>.</p> <p>Par exemple, dans le programme suivant la boucle s'arr\u00eate d\u00e8s qu'on appuie sur la touche q ou Q (peu importe la casse, c'est l'inter\u00eat de la fonction <code>lower()</code>) et continue si on appuie sur une autre touche.</p> <pre><code>go = True\n\nwhile go:\n    touche = input(\"Appuie sur la touche Q pour arr\u00eater la boucle\")\n    if touche.lower() == 'q':\n        go = False\n</code></pre> <p>Si certaines de vos fonctions font appel \u00e0 des variables globales (c'est-\u00e0-dire d\u00e9finies en dehors des fonctions, vous devez les d\u00e9clarer en d\u00e9but de fonction apr\u00e8s le mot-cl\u00e9 <code>global</code>. Ce n'est pas la peine pour celles de type <code>list</code>.</p> <p>Par exemple:</p> <pre><code>toto = 2\n\ndef machin(n:int):\n    global toto\n    return toto * n\n</code></pre> <p>Pour lancer le programme, ouvrir un terminal dans le dossier contenant votre fichier (ou vos fichiers), puis taper :</p> <pre><code>python3 nom_fichier.py\n</code></pre> <p>Pour effacer la console (au d\u00e9but du jeu, entre deux coups, apr\u00e8s une nouvelle partie...), importer le module <code>os</code> et utiliser l'instruction:</p> <pre><code>os.system('clear')\n</code></pre> <p>Un programme bien structur\u00e9 doit comporter les parties suivantes:</p> <ul> <li>Une docstring de pr\u00e9sentation/signature</li> <li>Une zone d'import des modules (si besoin)</li> <li>Une zone d'initialisation des variables globales</li> <li>Une zone des fonctions</li> <li>Le programme principal</li> </ul> <p>Utilisez les <code>#</code> pour bien d\u00e9limiter les diff\u00e9rentes zones. Par exemple:</p> <pre><code># *********************************\n# Projet NSI : JEU DU PUISSANCE 4\n# Date: ...........\n# Auteurs: .............\n# *********************************\n\n\n#\u00a0====================\n#\u00a0  INITIALISATION\n#\u00a0====================\n</code></pre> <p>Dans un fichier Python, le code qui suit l'instruction:</p> <pre><code>if __name__ == '__main__':\n</code></pre> <p>ne sera ex\u00e9cut\u00e9 que si le fichier est lanc\u00e9 comme fichier principal (dans l'\u00e9diteur ou en console), mais pas en tant que module.</p> <p>On peut donc:</p> <ul> <li>dans un module, \u00e9crire les tests du module</li> <li>dans le fichier principal, lancer une fonction <code>main()</code> qui contiendra le programme principal.</li> </ul> <p>Par exemple, tester le code suivant en l'ex\u00e9cutant en tant que programme principal, puis en l'important dans une autre fichier.</p> <pre><code>def main():\n    print(\"Hello from\", __name__)\n\nif __name__ == '__main__':\n    print(\"Je s'appelle\", __name__)\n    main()\n</code></pre> <p>Grille d'\u00e9valuation</p> Item Contenu Points Conception Les variables et leurs types sont clairement identifi\u00e9s. Le d\u00e9coupage en fonction est pertinent et efficace. 6 Travail de groupe Les t\u00e2ches sont clairement d\u00e9finies et r\u00e9parties au sein du groupe. 4 Respect du cahier des charges Le programme r\u00e9pond aux consignes. 3 Projet abouti Le projet tourne sans erreur. 3 Qualit\u00e9 du code Code a\u00e9r\u00e9, sp\u00e9cifi\u00e9, lisible, noms de variables pertinents... 4 Total 20 Bonus Code en  2 Malus Code r\u00e9cup\u00e9r\u00e9 sur le web (ChatGPT, forums, github, etc) -50, Game Over"},{"location":"T08_Extras/2Projets/DiamantCarre/DiamantCarre/","title":"Cr\u00e9er une map de jeu vid\u00e9o","text":"<p>L'algorithme diamant-carr\u00e9 est un algorithme de g\u00e9n\u00e9ration proc\u00e9durale qui permet de cr\u00e9er al\u00e9atoirement une carte en relief.</p> <p>Partie 1</p> <p>On impl\u00e9mentera les fonctions n\u00e9cessaires \u00e0 l'algorithme diamant-carr\u00e9, et on visualisera en 2D.</p> <p> </p> <p>Partie 2</p> <p>On adapte la visualisation en 3D \u00e0 l'aide du module <code>matplotlib</code>.</p> <p> </p>"},{"location":"T08_Extras/2Projets/Image/Image/","title":"Image num\u00e9rique","text":""},{"location":"T08_Extras/2Projets/Image/Image/#le-mini-projet-creation-deffets","title":"Le mini-projet : Cr\u00e9ation d'effets","text":"<p>Dans ce mini-projet, vous devez cr\u00e9er des effets que des logiciels de retouche d'image (GIMP, Photoshop, ...) proposent.</p> <p>On travaillera (par exemple) sur l'image ci-dessous:</p> <p> </p> <p>Effets</p> <p>Les 6 premiers effets sont obligatoires, les deux derniers (pixellisation et floutage) sont facultatifs.</p> Filtre rougeN\u00e9gatifNiveaux de grisFlipPhotomatonPop-artPixellisationFloutage <p>Pour cr\u00e9er un filtre rouge il suffit de conserver la composante rouge et de remplacer les autres composantes par 0.</p> <p>Si vous n'aimez pas le rouge, faites un filtre vert. Ou bleu. Ou les trois.</p> <p> </p> Correction <p>Pour obtenir le n\u00e9gatif d'une image, il faut remplacer chaque composante RGB par son compl\u00e9mentaire \u00e0 255.</p> <p>Par exemple, si une composante vaut 42, il faut la remplacer par 213 (= 255 - 42).</p> <p> </p> Correction <p>Dans sa norme 709, la Commission Internationale de l\u2019\u00c9clairage propose de remplacer les 3 composantes d'un pixel (r, g, b) par la valeur suivante :</p> <p>\\(m = 0.2126 \\times r + 0.7152 \\times g + 0.0722 \\times b\\)</p> <p> </p> Correction <p>On retourne l'image horizontalement.</p> <p> </p> Correction <p>C'est une transformation r\u00e9versible, puisqu'on envoie un pixel sur quatre dans chaque carr\u00e9...</p> <p> </p> Correction <p>Le principe est, pour chaque pixel, d'appuyer sur la composante majoritaire: on r\u00e9cup\u00e8re la composante maximale et on l'augmente d'une certaine valeur (par exemple 50 sur l'image ci-dessous) sans d\u00e9passer 255 bien entendu.</p> <p> </p> Correction <p>Je vous laisse deviner...</p> <p> </p> Correction <p>Je vous laisse deviner...</p> <p> </p> Correction <p>Grille d'\u00e9valuation</p> <p>Sur ce projet, vous serez \u00e9valu\u00e9s sur la grille suivante:</p> Contenu Points Filtre correctement r\u00e9alis\u00e9 (2 pts \u00d7 6) 12 Utilisation de fonctions pour les filtres 3 Un seul fichier 1 Code a\u00e9r\u00e9, sp\u00e9cifi\u00e9, lisible, noms de variables pertinents... 2 \u00abP'tit truc en plus\u00bb : filtre suppl\u00e9mentaire, interface utilisateur (console ou graphique avec Pygame) 2 Total 20"},{"location":"T08_Extras/2Projets/Jeux/Jeux/","title":"Jeux","text":"<p>Morpion</p> <p>Il s'agit de coder un jeu de morpion. Le jeu doit d'abord tourner en console avant de penser \u00e0 l'aspect graphique.</p> <p> </p> <p>Snake</p> <p>Il s'agit de coder un jeu de Snake.</p> <p> </p>"},{"location":"T08_Extras/2Projets/Maze/Maze/","title":"Get out of the maze...","text":""},{"location":"T08_Extras/2Projets/Maze/Maze/#partie-1-en-console","title":"Partie 1 : en console","text":"<p>Objectif</p> <p>\u00c0 partir d'un labyrinthe donn\u00e9 (comme celui de l'exercice 3 de la section 2.1.9) et d'un chemin connu entre l'entr\u00e9e et la sortie, on souhaite afficher successivement les \u00e9tapes du chemin dans le labyrinthe (repr\u00e9sent\u00e9es par un <code>4</code> dans l'exemple suivant.</p> <p> </p> <p>On peut \u00e9galement indiquer uniquement la position actuelle et \u00abeffacer\u00bb les traces.</p>"},{"location":"T08_Extras/2Projets/Maze/Maze/#partie-2-avec-pygame","title":"Partie 2 : avec Pygame","text":"<p>Objectif</p> <p>On souhaite maintenant avoir un rendu graphique. En s'appuyant sur le programme pr\u00e9c\u00e9dent, on change uniquement l'affichage pour dessiner le labyrinthe (le choix des couleurs vous appartient...)</p> <p> </p> <p>Variante: plut\u00f4t que laisser l'ordinateur suivre le chemin tout seul, on peut piloter le d\u00e9placement avec les touches directionnelles du clavier, en \u00e9vitant de traverser les murs...</p>"},{"location":"T08_Extras/2Projets/Maze/Maze/#partie-3","title":"Partie 3","text":"<p>Objectif</p> <p>Des \u00abennemis\u00bb peuvent appara\u00eetre dans le labyrinthe, il faut les \u00e9viter...</p>"},{"location":"T08_Extras/2Projets/Perseverance/Perseverance/","title":"Le parachute de Perseverance","text":"<p>Activit\u00e9 d\u00e9branch\u00e9e!</p> <p>Lors de sa descente vers la plan\u00e8te Mars le 18/02/2021 (voir la section Liens), le rover Perseverance de la Nasa a frein\u00e9 sa chute gr\u00e2ce \u00e0 un parachute qui a intrigu\u00e9 quelques internautes du forum Reddit.</p> <p> </p> Vid\u00e9o du d\u00e9ploiement du parachute <p><p> </p></p> <p>Les zones blanches et rouges se d\u00e9composent comme ceci, sur 4 couronnes:</p> <p> </p> <p>Apr\u00e8s quelques essais infructueux, ils ont remarqu\u00e9 que les 80 \u00e9lements de chaque couronne pouvaient se d\u00e9composer en 8 groupes de 10 \u00e9l\u00e9ments , chacun d\u00e9butant par 3 \u00e9l\u00e9ments blancs.</p> <p>En voici les deux premiers groupes mis en relief:</p> <p> </p> <p>D\u00e9codez le message cach\u00e9!</p> <ul> <li>Le tout premier secteur doit correpondre \u00e0 la lettre D: \u00e0 vous de comprendre le codage utilis\u00e9...</li> <li>Le message secret s'obtiendra en tournant en spirale depuis ce secteur, dans le sens horaire, sur les trois premi\u00e8res couronnes.</li> <li>La derni\u00e8re couronne (la plus \u00e0 l'ext\u00e9rieur) est un peu particuli\u00e8re, mais n'en disons pas plus...</li> </ul> <p>Faites votre propre parachute:</p> <p>https://sjwarner.github.io/perseverance-parachute-generator/ </p>"},{"location":"T08_Extras/2Projets/Plus_ou_Moins/Plus_ou_Moins/","title":"Le jeu du + ou -","text":"<p>Alice: \u00ab Je pense \u00e0 un nombre entre 1 et 100. Bob, essaie de le deviner ! \u00bb</p> <p>Bob: \u00ab Ok. 50 ? \u00bb</p> <p>Alice: \u00ab C'est moins! \u00bb</p> <p>Bob: \u00ab 20 ? \u00bb</p> <p>Alice: \u00ab C'est plus! \u00bb</p> <p>Bob: \u00ab 40 ? \u00bb</p> <p>Alice: \u00ab C'est plus! \u00bb</p> <p>Bob: \u00ab 45? \u00bb</p> <p>Alice: \u00ab C'est moins! \u00bb</p> <p>Bob: \u00ab 42? \u00bb</p> <p>Alice: \u00ab Bravo! Tu as devin\u00e9! \u00bb</p> <p>Objectif</p> <p>Programmer ce jeu.</p> Version de baseAm\u00e9liorations possibles <ul> <li>Dans un premier temps, le nombre \u00e0 deviner est fix\u00e9. </li> <li>On saisira les propositions de l'utilisateur (Bob) avec la fonction <code>input</code> (voir ici ).</li> <li>Le programme s'arr\u00eate quand l'utilisateur donne la bonne r\u00e9ponse, et sinon affiche \u00ab C'est plus! \u00bb ou \u00ab C'est moins! \u00bb selon les cas.</li> </ul> <ul> <li>Le nombre \u00e0 deviner est choisi de fa\u00e7on al\u00e9atoire. Voir T6.2 Biblioth\u00e8ques pour la fonction <code>randint</code> du module <code>random</code>.</li> <li>Le programme affiche le nombre de tentatives pour trouver.</li> <li>Le programme joue seul, de fa\u00e7on intelligente.</li> </ul>"},{"location":"T08_Extras/2Projets/Projet_Arts/Sommaire_projet/","title":"DE TEMPS EN TEMPS","text":"**Intervention artistique en milieu scolaire**  **Arts Plastiques + Num\u00e9rique et Sciences Informatiques**  ![](images/logo_methotapes.png){: .center width=30%}   **Collectif Meth.O.tapes**  <p>Pr\u00e9sentation du projet</p> <p>Gauthier Platevoet et Marc-\u00c9tienne Guibert du collectif Meth.O.tapes nous ont propos\u00e9 un projet artistique m\u00ealant arts plastiques et num\u00e9rique, autour du th\u00e8me du \u00ab temps qui passe\u00bb et  de la m\u00e9t\u00e9orologie.</p> <p>En r\u00e9sum\u00e9, l'objectif est de r\u00e9aliser un GIF anim\u00e9 dont les images sont cr\u00e9\u00e9es \u00e0 partir des caract\u00e9ristiques de relev\u00e9s sous diff\u00e9rents formats (photos, vid\u00e9os, enregistrement sonores, palette de couleurs, pression atmosph\u00e9rique, temp\u00e9rature ressentie).</p> <ul> <li> <p>les \u00e9l\u00e8ves suivant la sp\u00e9cialit\u00e9 Arts Plastiques r\u00e9alisent les relev\u00e9s et \u00e9laborent une image plastique synth\u00e9tisant ces relev\u00e9s.</p> </li> <li> <p>les \u00e9l\u00e8ves suivant la sp\u00e9cialit\u00e9 NSI r\u00e9cup\u00e8rent ces images ainsi que les donn\u00e9es brutes et \u00e9laborent un GIF anim\u00e9 selon le protocole communiqu\u00e9 par les artistes.</p> </li> </ul> <p> </p> <p>La banque des rel\u00e9v\u00e9s des \u00e9l\u00e8ves d'Arts Plastiques est visible ici: https://methotapes.com/BILANS_CLIMATIQUES/qg.html  et t\u00e9l\u00e9chargeable l\u00e0 : https://methotapes.com/BILANS_CLIMATIQUES/uploads/ </p> <p>Protocole de g\u00e9n\u00e9ration du GIF</p> <ul> <li>Le GIF doit comporter 25 images de d\u00e9finition 500 \u00d7 500.</li> <li>Chaque image est une zone extraite de l'image fournie par les \u00e9l\u00e8ves d'Arts Plastiques, \u00e0 laquelle on applique un filtre color\u00e9.</li> <li>La taille de la zone extraite ainsi que les coordonn\u00e9es du coin haut-gauche de la zone d\u00e9pendent de l'enregistrement sonore (\u00e0 chaque 1/25e du temps), du son de la vid\u00e9o (\u00e0 chaque 1/25e du temps) ainsi que de la couleur dominante de la vid\u00e9o (\u00e0 chaque 1/25e du temps).</li> <li>Le filtre color\u00e9 d\u00e9pend de la couleur dominante de la vid\u00e9o (\u00e0 chaque 1/25e du temps).</li> </ul> Couleur dominanteEnregistrements sonoresZone \u00e0 extraire <p> </p> <p>Apr\u00e8s avoir divis\u00e9 la dur\u00e9e de la vid\u00e9o par 25, on extrait une image de la vid\u00e9o, puis on extrait la couleur dominante au format HSL (H \u2192 teinte, S \u2192 saturation, L \u2192 luminosit\u00e9). On passe la saturation \u00e0 100 pour obtenir la couleur du filtre, ici pour la 20e image du GIF.</p> <p> </p> <p>De la m\u00eame fa\u00e7on, on r\u00e9cup\u00e8re un intervalle de l'enregistrement sonore de 1/25e de sa dur\u00e9e, dont on calcule le volume minimum (en dbA), not\u00e9 \\(V_{son}\\). On extrait l'audio de la vid\u00e9o et on fait la m\u00eame chose pour obtenir  \\(V_{video}\\).</p> <p> </p> <ul> <li>La largeur W de la zone \u00e0 extraire d\u00e9pend de la saturation S de la couleur dominante.</li> <li>Les coordonn\u00e9es x et y du coin haut-gauche de la zone \u00e0 extraire d\u00e9pendent des volumes \\(V_{son}\\) et \\(V_{video}\\).</li> </ul>"},{"location":"T08_Extras/2Projets/Projet_Arts/01Image/image/","title":"Travail sur l'image (et la vid\u00e9o)","text":""},{"location":"T08_Extras/2Projets/Projet_Arts/01Image/image/#conversion-rgb-hsl","title":"Conversion RGB \u27f7 HSL","text":"<p>Codage HSL</p> <p>Le codage informatique des couleurs que nous connaissons est le codage RGB qui est le plus proche du mat\u00e9riel, et le plus r\u00e9pandu. C'est celui utilis\u00e9 par les modules Python de traitement d'image, comme <code>imageio</code> que nous utilisons, ou <code>PIL</code>.</p> <p>Un autre codage des couleurs - celui manipul\u00e9 dans ce projet - est le codage HSL, pour Hue (teinte), Saturation (saturation), Lightness (luminosit\u00e9). Il est plut\u00f4t utilis\u00e9 dans les logiciels de dessin assist\u00e9 par ordinateur ou de retouche d'images.</p> <p>Le proc\u00e9d\u00e9 de conversion des 3 valeurs RGB vers les 3 valeurs HSL est expliqu\u00e9 sur la page Wikip\u00e9dia correspondate.</p> <p>Test de la fonction</p> <p>Pour tester vos conversions, vous pouvez utiliser un convertisseur en ligne, comme celui-ci par exemple o\u00f9 vous trouverez \u00e9galement les formules de conversion.</p>"},{"location":"T08_Extras/2Projets/Projet_Arts/01Image/image/#recherche-de-la-couleur-dominante","title":"Recherche de la couleur dominante","text":"<p>Extraction d'une frame de la vid\u00e9o</p> <p>Une image est compos\u00e9e de frames, c'est-\u00e0-dire d'images qui d\u00e9filent \u00e0 une certaine fr\u00e9quence (FPS), en g\u00e9n\u00e9ral 24 images par seconde.</p> <p>Pour extraire une image d'une vid\u00e9o, on utilise le module <code>imageio</code>.</p> <p><pre><code>import imageio\nvideo = imageio.get_reader('video.mp4') \nframe = video.get_data(472) \n</code></pre> Dans le code pr\u00e9c\u00e9dent, l'image n\u00b0472 est extraite dans la variable <code>frame</code>. On peut ensuite la manipuler ou la sauvegarder. Pour conna\u00eetre le nombre de frames dans la variable <code>video</code>, on utilise <code>video.count_frames()</code>.</p> <p>Test de la fonction</p> <p>Sur l'image ci-dessous, vous devriez obtenir une couleur dominante de <code>(61, 134, 210)</code> en RGB soit <code>(210, 62, 53)</code> en HSL.</p> <p> </p> <p>Indication</p> <p>Le programme doit parcourir l'image, pixel par pixel, et construire un dictionnaire dont les cl\u00e9s sont les pixels (des tuples) et les valeurs le nombre d'occurences dans l'image.</p> <p>Grosso modo, c'est la m\u00eame chose que dans l'exercice 2 sur les dictionnaires.</p> <p>Ensuite, il s'agit de parcourir le dictionnaire et de chercher la valeur maximale, en m\u00e9morisant le pixel correspondant.</p> <p>Grosso modo, c'est la m\u00eame chose que dans l'exercice 3 sur les dictionnaires.</p> <p>Code \u00e0 compl\u00e9ter:</p> <pre><code>def couleur_dominante(img: list) -&gt; tuple:\n    '''\n    Cherche le pixel de l'image img qui revient le plus grand nombre de fois dans img.\n    '''\n    pixels = {}\n    # parcours de l'image:\n    for i in \n        for j in \n            if img[i][j] in pixels:\n\n            else:\n\n    # recherche du pixel ayant la plus grande occurence\n    nmax = \n    for pixel, occ in pixels.items():\n\n    return \n</code></pre>"},{"location":"T08_Extras/2Projets/Projet_Arts/01Image/image/#extraction-de-la-zone","title":"Extraction de la zone","text":"<p>Extraction de la zone</p> <p>Il faudra cr\u00e9er une image vide aux bonnes dimensions, puis affecter pixel par pixel ceux de la zone de l'image initiale d\u00e9finie par les valeurs de x, y et W.</p> <p>Indications</p> <p>La fonction \u00e0 \u00e9crire doit prendre en param\u00e8tres les valeurs qui permettent de calculer x, y et W, c'est-\u00e0-dire S, Vson et Vvideo. Apr\u00e8s avoir calcul\u00e9 ces valeurs, on cr\u00e9e une image vide (constitu\u00e9e en 0 en fait) aux bonnes dimensions puis on lui affecte les valeurs de l'image de base en d\u00e9calant les lignes et colonnes des valeurs x et y.</p> <p>Code \u00e0 compl\u00e9ter:</p> <pre><code>def extraction_zone(img: list, S: int, Vson: float, Vvideo: float) -&gt; list:\n    '''\n    Renvoie une image constitu\u00e9e des pixels de l'image img, de taille W avec le d\u00e9calage x, y\n    donn\u00e9s par les param\u00e8tres S, Vson et Vvideo.\n    '''\n    W = \n    x = \n    y = \n    zone = numpy.zeros(( , , ), dtype=np.uint8)\n    for i in range(W):\n        for j in range(W):\n            zone[i][j] = \n    return \n</code></pre>"},{"location":"T08_Extras/2Projets/Projet_Arts/01Image/image/#application-du-filtre","title":"Application du filtre","text":"<p>Overlay blending mode</p> <p>I'm sorry, but I didn't succeed to find a french source for this.</p> <p>So you will have to translate this page to find how to apply a colored filter to a picture.</p> <p>Testing your function</p> <p>Apply an overlay filter with HSL color <code>(210, 53, 58)</code> on the first image below should give the second one.</p> <p> </p> <p>Indications</p> <p>Pour chaque pixel de l'image de d\u00e9part, on applique \u00e0 chaque composante la fonction  overlay avec la composante de la couleur du filtre.</p> <p>Par exemple, si le pixel de l'image est <code>(120, 35, 214)</code> et la couleur du filtre <code>(210, 53, 58)</code>, le pixel de l'image filtr\u00e9e sera <code>(f(120, 210), f(35, 53), f(214, 58))</code>.</p> <p>Il faut donc commencer par \u00e9crire la fonction <code>f</code> qui prend deux entiers comme param\u00e8tres, puis une fonction <code>filtre</code> qui prend en param\u00e8tre une image et la couleur du filtre, qui commencera par cr\u00e9er une image vide aux m\u00eames dimensions que l'image donn\u00e9e en param\u00e8tre, puis la qui modifiera pixel par pixel en parcourant l'image donn\u00e9e en param\u00e8tre.</p> <p>Code \u00e0 compl\u00e9ter:</p> <pre><code>def f(a, b):\n    if \n        return\n    else:\n        return\n\ndef filtre(img: list, couleur: tuple) -&gt; image:\n    '''\n    Renvoie une nouvelle image, donn\u00e9e par l'application d'une filtre color\u00e9 \u00e0 l'image de d\u00e9part img.\n    '''\n    img_filtree = numpy.zeros(( , , ), dtype=np.uint8)\n    for i in range():\n        for j in range():\n            img_filtree[i][j] = \n\n    return \n</code></pre>"},{"location":"T08_Extras/2Projets/Projet_Arts/01Image/image/#realisation-du-gif","title":"R\u00e9alisation du GIF","text":"<p>RTFM</p> <p>https://imageio.readthedocs.io/en/stable/examples.html#optimizing-a-gif-using-pygifsicle </p> <p>Indications</p> <ol> <li> <p>Les images cr\u00e9es avec l'application du filtre devront \u00eatre cr\u00e9es avec un nom de fichier num\u00e9rot\u00e9. Par exemple avec l'instruction: <pre><code>imaegio.imsave(f'image_gif{k}.png', img)\n</code></pre> o\u00f9 <code>img</code> est l'image renvoy\u00e9e par la fonction <code>filtre</code> et <code>k</code> la variable de boucle correspondant \u00e0 la k-i\u00e8me image sur 25.</p> </li> <li> <p>Une fois les 25 images du GIF cr\u00e9\u00e9es, on utilisera le code suivant, o\u00f9 il faudra pr\u00e9ciser un nom de fichier pour le GIF et adapter \u00e9ventuellement le code aux noms de fichier image: <pre><code>with imageio.get_writer('nom_du_gif.gif', mode='I') as writer:\n    for k in range(25):\n        filename = f'image_gif{k}.png'\n        image = imageio.imread(filename)\n        writer.append_data(image)\n</code></pre></p> </li> </ol>"},{"location":"T08_Extras/2Projets/Projet_Arts/02Son/son/","title":"Travail sur le son","text":""},{"location":"T08_Extras/2Projets/Projet_Arts/02Son/son/#preambule","title":"Pr\u00e9ambule","text":"<p>Extraction de l'audio d'une vid\u00e9o</p> <p>Cela se fait tr\u00e8s facilement en ligne de commande dans le terminal.</p> <p>On utilise pour cela le logiciel de lecture et d'encodage vid\u00e9o ffmpeg.</p> <p>Pour l'installer:</p> <pre><code>$ sudo apt install ffmpeg\n</code></pre> <p>Pour l'utiliser, lire par exemple ici. Penser \u00e0 extraire l'audio au format <code>wav</code>.</p>"},{"location":"T08_Extras/2Projets/Projet_Arts/02Son/son/#lecture-dun-son-numerique","title":"Lecture d'un son num\u00e9rique","text":"<p>R\u00e9cup\u00e9ration des donn\u00e9es</p> <p>Pour lire un fichier son au format <code>wav</code>, on utilisera le module: <pre><code>import scipy.io.wavfile as wave\n</code></pre></p> <p>La fonction <code>read</code> du module <code>wave</code> permet de r\u00e9cup\u00e9rer la fr\u00e9quence d'\u00e9chantillonnage (nomm\u00e9e <code>rate</code> dans l'exemple suivant) ainsi que l'\u00e9chantillon des valeurs du signal repr\u00e9sentant le son sur 16 bits.</p> <pre><code>rate, echantillon = wave.read('son.wav')\n</code></pre> <p>On r\u00e9cup\u00e8re dans <code>echantillon</code> un tableau d'\u00e9l\u00e9ments <code>[cg, cd]</code> o\u00f9 <code>cg</code> est la valeur du canal gauche et <code>cd</code> celle du canal droit. Le signal d'un canal est repr\u00e9sent\u00e9 ci-dessous.</p> <p> </p>"},{"location":"T08_Extras/2Projets/Projet_Arts/02Son/son/#calcul-du-volume-en-dba","title":"Calcul du volume en dBA","text":"<p>Spectre</p> <p>Le volume, en dbA, s'obtient par un traitement du signal pour obtenir le spectre du son:</p> <p> </p> <p>Ce traitement s'effectue par la fonction donn\u00e9e ci-dessous qui n\u00e9cessite l'utilisation du module <code>numpy</code> ainsi que du module <code>math</code>:</p> <pre><code>import math\nimport numpy as np\n\ndef spectre(data: list, rate: int, debut: float, duree: float) -&gt; list:\n    '''\n    Renvoie le spectre correspondant \u00e0 un intervalle du signal.\n\n    data: le signal d'un canal\n    rate: la fr\u00e9quence d'\u00e9chantillonnage\n    debut: le d\u00e9but de l'intervalle \u00e0 \u00e9tudier (en secondes)\n    duree: la dur\u00e9e de l'intervalle \u00e0 \u00e9tudier (en secondes)\n    '''\n    start = int(debut * rate)\n    stop = int((debut+duree) * rate)\n    s = np.absolute(np.fft.fft(data[start:stop]))\n    s = s / s.max()\n    return [math.log10(i) for i in s if i != 0]\n</code></pre> <p>Donn\u00e9e \u00e0 extraire</p> <ul> <li>Pour chaque intervalle de dur\u00e9e 1/25e de la dur\u00e9e totale du son, vous devez calculer le volume minimal de la liste fournie par la fonction <code>spectre</code>. Cela vous donne une liste de 25 valeurs.</li> <li>Dans cette liste, vous extrayez le minimum et le maximum, puis vous exprimez chaque valaur en pourcentage de la plage min-max.</li> </ul> <p>Exemple: Pour un son donn\u00e9, on obtient les 25 volumes minimaux suivants:  </p> <p>Le minimum de la liste est <code>-7.24</code> et le maximum  est <code>-5.28</code>. Le volume d'indice 2 est <code>-5.96</code>, il est situ\u00e9 \u00e0 65% de l'intervalle [-7.24, -5.28].</p> <ul> <li>C'est ce pourcentage (65%) qui est la valeur \u00e0 extraire pour chaque intervalle du son (\\(V_{son}\\) ou \\(V_{video}\\)).</li> </ul>"},{"location":"T08_Extras/2Projets/Projet_Arts/03Main/main/","title":"Programme principal","text":"<p>Il s'agit maintenant d'articuler toutes les \u00abbriques\u00bb de notre programme.</p> <p>\u00c9tapes-cl\u00e9s</p> <ol> <li> <p>Chaque groupe doit disposer:</p> <ul> <li>d'une image de base (disponibles sur Moodle);</li> <li>d'un enregistrement sonore (disponibles sur Moodle);</li> <li>d'une vid\u00e9o et de l'audio extrait de cette vid\u00e9o (disponibles sur https://methotapes.com/BILANS_CLIMATIQUES/uploads/video/);</li> </ul> </li> <li> <p>On commencera par cr\u00e9er 4 variables contenant les noms de ces fichiers.</p> </li> <li> <p>Le protocole de cr\u00e9ation du GIF comporte 25 it\u00e9rations du m\u00eame proc\u00e9d\u00e9:</p> <ul> <li>extraire une image de la vid\u00e9o, puis sa couleur dominante;</li> <li>extraire les donn\u00e9es du son de l'enregistrement et du son de la vid\u00e9o (qui en fait se font au pr\u00e9alable);</li> <li>extraire la zone de l'image de base;</li> <li>lui appliquer le filtre</li> <li>enregistrer l'image</li> </ul> </li> <li> <p>Une fois les 25 images cr\u00e9\u00e9es, lancer la cr\u00e9ation du GIF:</p> <ul> <li>redimensionner les 25 images \u00e0 la bonne taille 500x500;</li> <li>cr\u00e9er le GIF !</li> </ul> </li> </ol> <p>Redimensionnement des images</p> <p>Le logiciel (Open-source) ImageMagick permet de faire \u00e0 peu pr\u00e8s tout ce qu'on veut comme retouche d'images... en ligne de commande dans un terminal.</p> <p>Par exemple, pour redimensionner une image <code>monimage.png</code> en cr\u00e9ant une nouvelle image: <pre><code>convert -resize 500x500 monimage.png monimageredimensionnee.png\n</code></pre></p> <p>Ou bien en \u00e9crasant l'image: <pre><code>mogrify -resize 500x500 monimage.png \n</code></pre></p> <p>Shell et Python</p> <p>En Python, on peut ex\u00e9cuter une ligne de commande du shell depuis un programme. Pour cela il faut utiliser le module <code>os</code> et la fonction <code>system</code>: <pre><code>import os\nos.system('la commande en chaine de caract\u00e8res')\n</code></pre></p> <p>On s'en servira pour:</p> <ul> <li>extraire l'audio de la vid\u00e9o avec le logiciel <code>ffmpeg</code></li> <li>redimensionner avec <code>ImageMagick</code> les images g\u00e9n\u00e9r\u00e9es en 500x500 pixels pour ensuite les ajouter au GIF.</li> </ul> Module code \u00e9l\u00e8ves <p>Voici le fichier/module compos\u00e9 de vos fonctions qu'il faudra importer dans le programme principal.</p> moduleprojet.py<pre><code>import scipy.io.wavfile as wave\nimport math\nimport numpy\nimport imageio\n\n### 1. Traitement du son #######################################################\n\ndef spectre(data: list, rate: int, debut: float, duree: float) -&gt; list:\n    '''\n    Renvoie le spectre correspondant \u00e0 un intervalle du signal.\n\n    data: le signal d'un canal\n    rate: la fr\u00e9quence d'\u00e9chantillonnage\n    debut: le d\u00e9but de l'intervalle \u00e0 \u00e9tudier (en secondes)\n    duree: la dur\u00e9e de l'intervalle \u00e0 \u00e9tudier (en secondes)\n    '''\n    start = int(debut * rate)\n    stop = int((debut+duree) * rate)\n    s = numpy.absolute(numpy.fft.fft(data[start:stop]))\n    s = s / s.max()\n    return [math.log10(i) for i in s if i != 0]\n\n\ndef volumes_min(son)-&gt;list: #M\u00e9lodie\n    '''\n    Prend en param\u00e8tre un son qui correspond\n    et renvoie une liste de 25 valeurs qui\n    correspondent aux volume minimaux de\n    chaque 1/25eme de la dur\u00e9e totale du son.\n    '''\n    rate, echantillon = wave.read(son)\n    cd = [elt[1] for elt in echantillon]\n    duree = len(echantillon)/rate\n    duree_intervalle = duree//25\n    depart = 0.0\n    volumes_mini = []\n    for k in range (25):\n        s = spectre(cd, rate, depart, duree_intervalle)\n        volumes_mini.append(min(s))\n        depart += duree_intervalle\n    return volumes_mini\n\ndef pourcentage (lst:list)-&gt; list: #M\u00e9lodie\n    '''\n    Prends en param\u00e8tre la liste des volumes minimaux\n    et renvoie la liste contenant les pourcentages de\n    chaque point dans l'intervalle minimal-maximal de\n    la liste de volumes minimaux.\n    '''\n    lst_pourcentage = []\n    maxi = max(lst)\n    mini = min(lst)\n    for elt in lst :\n        p = ((elt-mini)/(maxi-mini))*100\n        lst_pourcentage.append(int(p))\n    return lst_pourcentage\n\n\n### 2. Traitement de l'image ###################################################\n\n# Extraction de la zone\n\ndef extraction_zone(img: list, S: int, Vson: float, Vvideo: float) -&gt; list: #Manon\n    '''\n    Renvoie une image constitu\u00e9e des pixels de l'image img, de taille W avec le d\u00e9calage x, y\n    donn\u00e9s par les param\u00e8tres S, Vson et Vvideo.\n    '''\n    W = int(500 * S/100)\n    x = int((500-W) * Vson)\n    y = int((500-W) * Vvideo)\n    #On cr\u00e9ait une image vide pour pouvoir y placer la zone extraite\n    zone = numpy.zeros((W, W, img.shape[2]), dtype=numpy.uint8)\n    for i in range(W):\n        for j in range(W):\n            zone[i][j] = img[i+y][j+x]\n    return zone\n\ndef extraction(image_AP: list, S: int, Vson: float, Vvideo: float) -&gt; list: #Jules\n\n    '''\n    Cr\u00e9er une image vide, s\u00e9lectionne une zone dans l'image\n    en param\u00e8tre et copie les pixels de la zone dans l'image vide.\n    '''\n\n    W = int(500 * S/100)\n    x = int((500-W) * Vson)\n    y = int((500-W) * Vvideo)\n\n    zone = numpy.zeros([W,W,3], dtype=numpy.uint8)\n\n    for i in range(W):\n        for j in range(W):\n            zone[i][j] = image_AP[y+i][x+j]\n\n    imageio.imsave(\"monimage.jpg\", zone)\n    return zone\n\n# Recherche de la couleur dominante\n\ndef color_dom(image): #Yanis\n\n    # Cherche le pixel de l'image img qui revient le plus grand nombre de fois dans img.\n    hauteur = image.shape[0]\n    largeur = image.shape[1]\n    pixels = {}\n    for i in range(hauteur):\n        for j in range(largeur):\n            if tuple(image[i][j]) in pixels:\n                pixels[tuple(image[i][j])] += 1     \n            else:\n                pixels[tuple(image[i][j])]  = 1\n\n    # recherche du pixel ayant la plus grande occurence\n    grand = ''\n    nmax = 0\n    for k, v in pixels.items():\n        if v &gt; nmax:\n            grand = k\n            nmax = v\n    return grand \n\ndef couleur_dominante(image) -&gt; tuple: # Manon\n    # On parcous l'image pour savoir combien de fois les couleurs appara\u00eessent dans le tableu.\n    dico_RGB = {}\n    for i in range(img_test.shape[0]):\n        for j in range(img_test.shape[1]):\n    # On utilise un tuple pour qu'il soit possible de parcourir l'image.\n            t = tuple(img_test[i][j])\n            if t in dico_RGB:\n                dico_RGB[t] += 1\n            else:\n                dico_RGB[t] = 1\n\n    # On recherche la couleur qui revient le plus.\n    clr_max_apparition = 0\n    for clr, n in dico_RGB.items():\n        if n &gt; clr_max_apparition:\n            clr_max_apparition = n\n            couleur = clr\n\n    return couleur\n\n# Application du filtre\n\n'''\nla fonction f permet de superposer une teinte sur une couche\n'''\ndef f(a,b): #Florette\n    a=a/255\n    b=b/255\n    if a&lt;0.5 :\n        r= 2*a*b\n    else:\n        r= 1-2*(1-a)*(1-b)\n    return int(r*255)\n\n    '''\n    Renvoie une nouvelle image, donn\u00e9e par l'application d'une filtre color\u00e9 \u00e0 l'image de d\u00e9part img.\n    '''\ndef filtre(img : list, couleur: tuple): #Florette\n    img_filtree = numpy.zeros((img.shape[0],img.shape[1],3), dtype=numpy.uint8)\n    for i in range(img.shape[0]):\n        for j in range(img.shape[1]):\n            r=img[i][j][0]\n            g=img[i][j][1]\n            b=img[i][j][2]\n            img_filtree[i][j] = (f(r,couleur[0]), f(g,couleur[1]), f(b,couleur[2]))\n    imageio.imsave(\"imageavecfiltre.jpg\", img_filtree)\n    return img_filtree\n\ndef f(a, b): #Dawson\n    a = a / 255\n    b = b / 255\n    if   a &lt; 0.5:\n        r = 2 * a * b\n    else:\n        r = 1-2*(1-a)*(1-b)\n    return int(r*255) \n\n\ndef filtre(img: list, couleur: tuple): #Dawson\n    '''\n    Renvoie une nouvelle image, donn\u00e9e par l'application d'une filtre color\u00e9 \u00e0 l'image de d\u00e9part img.\n    '''\n    img_filtree = numpy.zeros((img.shape[0], img.shape[1],3), dtype=numpy.uint8)\n    for i in range(img.shape[0]):\n        for j in range(img.shape[1]):\n            r = img[i][j][0]\n            g = img[i][j][1]\n            b = img [i][j][2]\n            img_filtree[i][j]=[f(r,couleur[0]), f(g,couleur[1]), f(b,couleur[2])]\n    return img_filtree\n\n\n# Conversion RGB -&gt; HSL\n\ndef convertisseur (r,g,b :int)-&gt; int: #Safia\n    '''\n    Convertit la couleur RGB en HSL\n    '''\n    r, g, b = r/255, g/255, b/255\n    Cmax=max(r,g,b)\n    Cmin=min(r,g,b)\n    Cdiff=Cmax-Cmin\n    if Cmax==0:\n        T=0\n    elif Cmax == r:\n        T=(((g-b)/Cdiff)) % 6\n    elif Cmax == g:\n        T = (((b-r)/Cdiff) + 2) % 6\n    elif Cmax == b:\n        T = (((r-g)/Cdiff) + 4) % 6\n    if Cmax == 0:\n        T = 0\n    t=60*T\n    L=1/2*(Cmax+Cmin)\n    if L==1:\n        S=0\n    else:\n        S=Cdiff/(1-abs(2*L-1))\n    return t,S*100,L*100\n</code></pre> Squelette du code <pre><code># Import des modules\n\n\n#\u00a0Chargement des fichiers de donn\u00e9es\n\nvideo = 'data/video_station1_groupe5.mp4'\nson = 'son_station1_groupe5.wav'\nimage = imageio.imread('images/Gr5_Sp1_Florette2.jpg')\naudio = 'audio.wav'\n\n#\u00a0Extraction du son de la video\n\nos.system('ffmpeg -i ' +  + ' ' + )\n\n# Extraction des volumes du son et de l'audio\n\nv_son = \nv_video = \n\n# Cr\u00e9ation du reader de la vid\u00e9o\n\nreader = imageio.get_reader(video)\n\n# Boucle principale\n\nfor k in range(25):\n    # extraction de l'image de la video\n\n    # extraction de la couleur dominante, convertie en hsl\n\n    # extraction de la zone\n\n    # application du filtre\n\n    # enregistrement de l'image\n\n\n# Cr\u00e9ation du GIF\nwith imageio.get_writer('GIF_ultime.gif', mode='I') as writer:\n    for k in range(25):\n        #redimensionnement de l'image en ligne de commande\n\n        #lecture de la k-i\u00e8me image du gif\n\n        # ajout de l'image au writer\n</code></pre>"},{"location":"T08_Extras/2Projets/Projet_Arts/04Code_final/Final/","title":"Code final du projet","text":""},{"location":"T08_Extras/2Projets/Projet_Arts/04Code_final/Final/#correction-du-bug-audio","title":"Correction du \u00abbug audio\u00bb","text":"<p>Une erreur que beaucoup d'entre vous ont rencontr\u00e9, c'est que pour certaines vid\u00e9os, le son est en mono alors que la fonction <code>extraction_volumes</code> \u00e9tait con\u00e7ue pour un son en st\u00e9r\u00e9o (pas bien, mauvaise conception).</p> <p>L'explication du patch \u00e0 appliquer pour corriger le bug en vid\u00e9o:</p> <p> </p>"},{"location":"T08_Extras/2Projets/Projet_Arts/04Code_final/Final/#le-module","title":"Le module","text":"moduleprojet.py<pre><code>################################################################################\n# Module contenant les fonctions n\u00e9cessaires au traitement de l'image et du son#\n################################################################################\n\n# Import des modules\nimport math\nimport numpy\nimport imageio\nimport scipy.io.wavfile as wave\n\n# Partie 1 : image #############################################################\n\n# Conversions RGB &lt;-&gt; HSL\n\ndef hsl(pix: tuple) -&gt; tuple:\n    '''\n    Prend en param\u00e8tre un tuple (r, g, b) correspond \u00e0 une couleur cod\u00e9e en RGB,\n    avec:\n    r, g et b 3 entiers compris entre 0 et 255,\n    et renvoie sa conversion (h, s, l) en HSL, avec\n    h: la teinte, compris entre 0 et 360 degr\u00e9s\n    s: la saturation, entier compris entre 0 et 100\n    l: la luminosit\u00e9, entier compris entre 0 et 100\n    '''\n    r = pix[0]/255\n    g = pix[1]/255\n    b = pix[2]/255\n\n    M, m = max(r, g, b), min(r, g, b)\n    C = M - m\n    print(C)\n    if C == 0:\n        h = 0\n        print('h=0')\n    elif M == r:\n        h = ((g - b)/C ) % 6\n    elif M == g:\n        h = ((b - r)/C + 2) % 6\n    else:\n        h = ((r - g)/C + 4) % 6\n    h = 60 * h\n    l = 0.5 * (M+m)\n    if l == 1 or l == 0:\n        s = 0\n    else:\n        s = C / (1- abs(2*l-1))\n    return (int(h), int(100*s), int(100*l))\n\ndef rgb(pix: tuple) -&gt; tuple:\n    '''\n    Prend en param\u00e8tre un tuple (h, s, l) correspond \u00e0 une couleur cod\u00e9e en HSL,\n    avec:\n    h: la teinte, compris entre 0 et 360 degr\u00e9s\n    s: la saturation, entier compris entre 0 et 100\n    l: la luminosit\u00e9, entier compris entre 0 et 100\n    et renvoie sa conversion (h, s, l) en HSL, avec r, g et b 3 entiers compris\n    entre 0 et 255.\n    '''\n    h = pix[0]\n    s = pix[1]/100\n    l = pix[2]/100\n\n    C = (1 - abs(2*l-1)) * s\n    h = h / 60\n    X = C * (1-abs(h%2 - 1))\n    m = l - 0.5*C\n    if h == 0:\n        r, g, b = 0, 0, 0\n    elif h &lt; 1:\n        r, g, b = C, X, 0\n    elif h &lt; 2:\n        r, g, b = X, C, 0\n    elif h &lt; 3:\n        r, g, b = 0, C, X\n    elif h &lt; 4:\n        r, g, b = 0, X, C\n    elif h &lt; 5:\n        r, g, b = X, 0, C\n    else:\n        r, g, b = C, 0, X\n    return (int(255* (r+m)), int(255* (g+m)), int(255* (b+m)))\n\n# Extraction de la couleur dominante\n\ndef extraction_couleur(im: list) -&gt; tuple:\n    '''\n    Renvoie le pixel majoritaire dans une image im.\n    On cr\u00e9e un dictionnaire dont les cl\u00e9s sont les pixels et les valeurs\n    leur nombre d'occurences dans im, puis on parcourt le dictionnaire\n    pour rechercher et le pixel majoritaire (en RGB)\n    '''\n    couleurs = {}\n    for i in range(im.shape[0]):\n        for j in range(im.shape[1]):\n            c = tuple(im[i][j])\n            if c in couleurs:\n                couleurs[c] += 1\n            else:\n                couleurs[c] = 1\n    c_max = 0\n    for c, n in couleurs.items():\n        if n &gt; c_max:\n            c_max = n\n            dominante = c\n    return dominante\n\n# Extraction de la zone de l'image\n\ndef extraction_zone(im: list, sat: int, V_son: float, V_video: float) -&gt; list:\n    w = max(10, int(500 * sat / 100))\n    x = int((500-w) * V_son)\n    y = int((500-w) * V_video)\n    zone = numpy.zeros((w, w, im.shape[2]), dtype=numpy.uint8)\n    for i in range(w):\n        for j in range(w):\n            zone[i][j] = im[y+i][x+j]\n    return zone\n\n#\u00a0Application du filtre\n\ndef f(a: int, b: int) -&gt; int:\n    '''\n    Fonction d'overlay \u00e0 appliquer sur chaque composante d'un pixel.\n    a est la composante de l'image de base.\n    b est la composante du filtre \u00e0 appliquer.\n    '''\n    a = a/255\n    b = b/255\n    if a &lt; 0.5:\n        return int(255*2*a*b)\n    else:\n        return int(255*(1-2*(1-a)*(1-b)))\n\ndef filtre(img: list, couleur: tuple) -&gt; None:\n    '''\n    Cr\u00e9e et renvoie une image compos\u00e9e du filtre de couleur couleur appliqu\u00e9\n    \u00e0 l'image img.\n    '''\n    img_filtree = numpy.zeros((img.shape[0], img.shape[1], 3), dtype=numpy.uint8)\n    for i in range(img.shape[0]):\n        for j in range(img.shape[1]):\n            for c in range(3):\n                img_filtree[i][j][c] = f(img[i][j][c], couleur[c])\n    return img_filtree\n\n# Partie 2 : son ###############################################################\n\n# R\u00e9cup\u00e9ration du spectre\n\ndef spectre(data: list, rate: int, debut: float, duree: float) -&gt; list:\n    '''\n    Renvoie le spectre correspondant \u00e0 un intervalle du signal.\n\n    data: le signal d'un canal\n    rate: la fr\u00e9quence d'\u00e9chantillonnage\n    debut: le d\u00e9but de l'intervalle \u00e0 \u00e9tudier (en secondes)\n    duree: la dur\u00e9e de l'intervalle \u00e0 \u00e9tudier (en secondes)\n    '''\n    start = int(debut * rate)\n    stop = int((debut+duree) * rate)\n    s = numpy.absolute(numpy.fft.fft(data[start:stop]))\n    s = s / s.max()\n    return [math.log10(i) for i in s if i != 0]\n\ndef extraction_volumes(filename: str) -&gt; list:\n    '''\n    D\u00e9coupe un fichier son en 25 intervalles, r\u00e9cup\u00e8re le volume minimal (en dbA)\n    du spectre de chaque intervalle et renvoie ces volumes en pourcentage de la\n    plage [vmin, vmax].\n    '''\n    rate, echantillon = wave.read(filename)\n    if type(echantillon[0]) is numpy.ndarray:\n        data = [e[0] for e in echantillon] # on choisit un seul canal, ici le gauche\n    else:\n        data = echantillon\n    duree = len(data) / rate\n    volumes = []\n    for k in range(25):\n        sp = spectre(data, rate, k*duree/25, duree/25)\n        volumes.append(min(sp))\n    vmin, vmax = min(volumes), max(volumes)\n    pourcentages = [(v-vmin) / (vmax-vmin) for v in volumes]\n    return pourcentages\n</code></pre>"},{"location":"T08_Extras/2Projets/Projet_Arts/04Code_final/Final/#le-programme-principal","title":"Le programme principal","text":"main.py<pre><code>import moduleprojet as mp\nimport imageio\nimport os\n\n#\u00a0Chargement des fichiers de donn\u00e9es\nvideo = 'videos/video_gr4_st2.mp4'\nson = 'sons/son_gr4_st2.wav'\nimage = imageio.imread('images/image_gr4_el1.jpg')\naudio = 'audio.wav'\n\n#\u00a0Extraction du son de la video\nos.system('rm audio.wav') # sinon ffmpeg plante...\nos.system('ffmpeg -i ' + video + ' ' + audio)\n\n# Extraction des volumes du son et de l'audio\nv_son = mp.extraction_volumes(son)\nv_video = mp.extraction_volumes(audio)\n\n# Cr\u00e9ation du reader de la vid\u00e9o\nreader = imageio.get_reader(video)\n\n# Boucle principale\nfor k in range(25):\n    # extraction de l'image de la video\n    frame = reader.get_data(k * reader.count_frames() // 25)\n\n    # extraction de la couleur dominante, convertie en hsl\n    dominante = mp.hsl(mp.extraction_couleur(frame))\n\n    # extraction de la zone\n    zone = mp.extraction_zone(image, dominante[1], v_son[k], v_video[k])\n\n    # application du filtre\n    couleur_filtre = mp.rgb((dominante[0], 100, dominante[2]))\n    zone_filtree = mp.filtre(zone, couleur_filtre)\n\n    # enregistrement de l'image\n    imageio.imsave(f'images/image_gif{k}.png', zone_filtree)\n\n    #\u00a0redimensionnement des images\n    os.system(f'mogrify -resize 500x images/image_gif{k}.png')  \n\n# Cr\u00e9ation du GIF\nwith imageio.get_writer('GIF_ultime.gif', mode='I') as writer:\n    for k in range(25):\n        image = imageio.imread(f'images/image_gif{k}.png')\n        writer.append_data(image)\n</code></pre>"},{"location":"T08_Extras/2Projets/Projet_Arts/05Productions/Productions/","title":"Productions","text":""},{"location":"T08_Extras/2Projets/Zombies/Zombies/","title":"Walking Dead","text":"<p>L'objectif de ce projet est de simuler une attaque de zombies dans une population saine.</p> <p>En d\u00e9finissant des r\u00e8gles de combat entre humain et zombie, en en choisissant un ratio  de population de d\u00e9part entre humains et zombies, qui survivra?</p>"},{"location":"T08_Extras/3Pygame/01-Pygame_intro/","title":"Introduction \u00e0 Pygame","text":"<p>Ressources</p> <p>La documentation officielle de Pygame : https://www.pygame.org/docs/ </p> <p>Lancement de Pygame et cr\u00e9ation de fen\u00eatre</p> <pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nfenetre = pygame.display.set_mode((640, 480))\npygame.display.set_caption(\"Mon super programme\")\nfenetre.fill([10,186,181])\n\npygame.display.flip()\n\n# Boucle des \u00e9v\u00e9nements\ncontinuer = True\nwhile continuer:\n    for evenement in pygame.event.get():    #Attente des \u00e9v\u00e9nements\n        if evenement.type == QUIT:\n            continuer = False\n\n# Sortie\npygame.quit()\n</code></pre> <p>Explication du code</p> Lignes 1 et 2Ligne 4Lignes 6 \u00e0 8Ligne 10Lignes 13 \u00e0 17Ligne 20 <p>On importe le module <code>pygame</code> ainsi que des variables locales bien utiles pour la suite...</p> <p><code>pygame.init()</code> effectue une initialisation globale de tous les modules <code>pygame</code> import\u00e9s. \u00c0 mettre au d\u00e9but du code.</p> <p>On cr\u00e9e une fen\u00eatre graphique en pr\u00e9cisant sa taille en pixels (ici 640 pixels de largeur et 480 de hauteur), son titre et sa couleur de remplissage, ici un bleu turquoise cod\u00e9 en RGB <code>[10, 186, 181]</code> (on verra plus tard comment utiliser plut\u00f4t une image de fond).</p> <p><code>pygame.display.flip()</code> effectue un rafra\u00eechissement total de tous les \u00e9l\u00e9ments graphiques de la fen\u00eatre. \u00c0 mettre donc plut\u00f4t vers la fin du code.</p> <p>C'est la boucle \u00abinfinie\u00bb (de gestion) des \u00e9v\u00e9nements, dont on ne sortira que par la bascule d'un bool\u00e9en, appel\u00e9 ici <code>continuer</code>.</p> <p>On ferme tout proprement.</p>"},{"location":"T08_Extras/3Pygame/02-Pygame_image/","title":"Animation simple (sans \u00e9v\u00e9nements)","text":"<p>L'objectif ici est de faire appara\u00eetre un personnage (une image) et de l'animer. Pour illustrer cela on va utiliser cette image que l'on va faire rebondir sur les bords de la fen\u00eatre.</p>"},{"location":"T08_Extras/3Pygame/02-Pygame_image/#1-creation-de-la-fenetre-et-insertion-de-limage","title":"1. Cr\u00e9ation de la fen\u00eatre et insertion de l'image","text":"<pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nwidth, height = 320, 240\nscreen = pygame.display.set_mode((width, height))\n\nballe = pygame.image.load(\"basketball16.png\")\nposition_balle = balle.get_rect()\nscreen.blit(balle, position_balle)\npygame.display.flip()\n\npygame.quit()\n</code></pre> <p>Explication du code</p> Ligne 9Ligne 10Ligne 11 <p>On importe l'image dans une variable <code>balle</code> qui est un objet <code>pygame</code> de type <code>Surface</code>.</p> <p>Afin de facilement pouvoir le d\u00e9placer, on stocke la position de cet objet dans une variable <code>position_balle</code>, qui sera de type <code>rect</code>. </p> <pre><code>&gt;&gt;&gt; position_balle\n&lt;rect(0, 0, 16, 16)&gt;\n</code></pre> <p>o\u00f9 les deux premiers attributs sont les coordonn\u00e9es (abscisse, ordonn\u00e9e) et les deux derniers la largeur et la hauteur de l'image.</p> <p>On affiche cette image en la superposant aux \u00e9l\u00e9ments graphiques d\u00e9j\u00e0 affich\u00e9s (en l'occurence, rien...) avec la m\u00e9thode <code>blit</code>.</p>"},{"location":"T08_Extras/3Pygame/02-Pygame_image/#2-animation-de-limagepersonnage","title":"2. Animation de l'image/personnage","text":"<p>D\u00e9placement</p> <p>Pour d\u00e9placer l'image/le personnage, il faut modifier ses coordonn\u00e9es \u00e0 chaque rafra\u00eechissement de la fen\u00eatre. </p> D\u00e9placement absoluD\u00e9placement relatif <p>On peut acc\u00e9der directement aux coordonn\u00e9es d'un objet de type <code>rect</code>. Par exemple:</p> <p><pre><code>&gt;&gt;&gt; position_balle.left\n0\n&gt;&gt;&gt; position_balle.bottom\n16\n&gt;&gt;&gt; position_balle.topleft\n(0, 0)\n</code></pre> Pour afficher la balle en position <code>(50, 100)</code> (pour le coin haut-gauche, qui est traditionnellement celui sur lequel on travaille), il suffit donc d'\u00e9crire:</p> <pre><code>position_balle.topleft = (50, 100)\n</code></pre> <p>On indique le d\u00e9placement (horizontal et vertical) par rapport \u00e0 la position initiale.</p> <p>Par exemple, pour d\u00e9caler la balle de 10 pixels vers la droite et de 20 pixels vers le haut: <pre><code>position_balle.move(10, -20)\n</code></pre></p> <p>Pour notre animation, on d\u00e9cide donc d'un d\u00e9calage relatif en abscisse et en ordonn\u00e9e, qu'on stocke par exemple dans deux variables <code>dx</code> et <code>dy</code>.</p> <p> </p> <p>Ici, pour d\u00e9placer d'un pixel sur chaque coordonn\u00e9e:</p> <pre><code>dx, dy = 1, 1\nposition_balle.move([dx, dy])\n</code></pre> <p>Bien entendu, il faut changer ces valeurs lorsqu'on atteint le bord de la fen\u00eatre:</p> <ul> <li>si <code>position_balle.right</code> d\u00e9passe la largeur <code>width</code>, il faut repartir vers la gauche, c'est-\u00e0-dire passer de la valeur <code>dx</code> de <code>1</code> \u00e0 <code>-1</code>.</li> <li>et si <code>position_balle.left</code> devient n\u00e9gatif, il faut repartir vers la droite, c'est-\u00e0-dire passer de la valeur <code>dx</code> de <code>-1</code> \u00e0 <code>1</code>.</li> </ul> <p>Le code suivant va donc actualiser ce d\u00e9placement et faire rebondir notre balle de droite \u00e0 gauche:</p> <pre><code>import pygame\nfrom pygame.locals import *\n\n\npygame.init()\n\nwidth, height = 320, 240\nscreen = pygame.display.set_mode((width, height))\n\nballe = pygame.image.load(\"basketball16.png\")\nposition_balle = balle.get_rect()\nscreen.blit(balle, position_balle)\npygame.display.flip()\n\ndx, dy = 1, 0\n\ncontinuer = True\nwhile continuer:\n    for evenement in pygame.event.get():\n        if evenement.type == QUIT:\n            continuer = False\n\n    if position_balle.left &lt; 0 or position_balle.right &gt; width:\n        dx = - dx\n\n    position_balle = position_balle.move([dx, dy]) \n\n    screen.fill([0, 0, 0])\n    screen.blit(balle, position_balle)\n    pygame.display.flip()\n\npygame.quit()\n</code></pre> <p><code>screen.fill</code></p> <p>Commenter la ligne 28. En quoi est-elle importante?</p> <p>\u00c0 vous de jouer pour terminer le programme...</p> <p>Pour s'entra\u00eener</p> <p>\u00c9crire un programme o\u00f9 un personnage se d\u00e9place  al\u00e9atoirement dans la fen\u00eatre.</p> <p>Vous pourrez utiliser les instructions :</p> <ul> <li><code>pygame.time.delay(1000)</code> afin de ne bouger le personnage que toutes les 1000 millisecondes (ou une autre valeur \u00e0 votre guise).</li> <li><code>randint(a,b)</code> du package <code>random</code>, qui renvoie un entier pseudo-al\u00e9atoire entre <code>a</code> et <code>b</code>.</li> </ul> <p>Pour le personnage, vous pouvez utiliser un sprite (libre de droits) trouv\u00e9 sur le Web, mais privil\u00e9giez le format PNG qui g\u00e8re la transparence. Ou bien celui-ci:  </p>"},{"location":"T08_Extras/3Pygame/03-Pygame_events/","title":"Gestion des \u00e9v\u00e9nements","text":"<p>Lorsqu'un programme <code>pygame</code> est lanc\u00e9, la variable interne <code>pygame.event.get()</code> re\u00e7oit en continu les \u00e9v\u00e8nements des p\u00e9riph\u00e9riques g\u00e9r\u00e9s par le syst\u00e8me d'exploitation.  </p> <p>Dans les exemples pr\u00e9c\u00e9dents, on a uniquement r\u00e9cup\u00e9r\u00e9 l'\u00e9v\u00e9nement de type <code>QUIT</code> (clic sur la croix de fermeture de la fen\u00eatre) pour stopper la boucle et terminer le programme:</p> <pre><code>for evenement in pygame.event.get():  \n    if evenement.type == QUIT:\n        continuer = False\n</code></pre> <p>Nous allons maintenant nous int\u00e9resser aux \u00e9v\u00e8nements de type <code>KEYDOWN</code> (touche de clavier appuy\u00e9e) ou de type <code>MOUSEBUTTONDOWN</code> (boutons de souris appuy\u00e9).</p>"},{"location":"T08_Extras/3Pygame/03-Pygame_events/#1-evenements-clavier","title":"1. \u00c9v\u00e9nements clavier","text":"<p>Structure de code</p> <p>On contr\u00f4le si l'\u00e9v\u00e9nement est de type <code>KEYDOWN</code>, puis on d\u00e9termine l'instruction \u00e0 ex\u00e9cuter en fonction de l'attribut <code>key</code> de l'\u00e9v\u00e9nement (c'est-\u00e0-dire le code de la touche):</p> <pre><code>for evenement in pygame.event.get():   \n    if evenement.type == KEYDOWN:\n        if evenement.key == K_RIGHT:\n            print(\"fl\u00e8che droite appuy\u00e9e\")\n</code></pre> <p>Remarques:</p> <ul> <li>la liste des codes des touches se retrouve ici : https://www.pygame.org/docs/ref/key.html </li> <li>r\u00e9manence des touches : si on veut que l'action associ\u00e9e \u00e0 l'appui d'une touche se r\u00e9p\u00e8te (par ex. toutes les 50 millisecondes) tant que la touche reste enfonc\u00e9e, on utilise:  <pre><code>pygame.key.set_repeat(50)\n</code></pre></li> </ul> <p>\u00c0 vous de jouer</p> <p>\u00c9crire un programme qui d\u00e9place un personnage dans la fen\u00eatre, pilot\u00e9 pour les quatre touches directionnelles du clavier.</p>"},{"location":"T08_Extras/3Pygame/03-Pygame_events/#2-evenements-souris","title":"2. \u00c9v\u00e9nements souris","text":"<p>Structure de code</p> <p>On contr\u00f4le cette fois que l'\u00e9v\u00e8nement est de type <code>MOUSEBUTTONDOWN</code>, puis on d\u00e9termine l'instruction \u00e0 ex\u00e9cuter en fonction de l'attribut <code>button</code> de l'\u00e9v\u00e9nement (<code>1</code> pour bouton gauche, <code>2</code> pour bouton droit, <code>3</code> \u00e0 <code>5</code> pour la molette).</p> <pre><code>for evenement in pygame.event.get():   \n    if evenement.type == MOUSEBUTTONDOWN:\n        if evenement.button == 1:\n            print(\"clic gauche d\u00e9tect\u00e9\")\n</code></pre> <p>Remarque:  on r\u00e9cup\u00e8re le tuple des coordonn\u00e9es de la souris par l'instruction <code>pygame.mouse.get_pos()</code>.</p> <p>Exemple d'utilisation</p> <p>Ex\u00e9cuter et analyser le code suivant:</p> <pre><code>import pygame\nfrom pygame.locals import *\nimport random\n\n## Fonctions\ndef affiche():\n    couleur = (random.randint(0, 255),\n               random.randint(0, 255),\n               random.randint(0, 255))\n    screen.fill(couleur)\n    pygame.draw.rect(screen, (0, 0, 0), [width//2 - 50, height//2 - 50, 100, 100], 10)\n\n## Constantes\nwidth, height = 640, 480\nsize = (width, height)\n\n\n## Initialisation de Pygame\npygame.init()\n\n## \u00c9cran\nscreen = pygame.display.set_mode(size)\npygame.display.set_caption(\"Cliquez dans le carr\u00e9\")\n\n## Boucle des \u00e9v\u00e9nements\naffiche()\ncontinuer = True\n\nwhile continuer:\n    for evenement in pygame.event.get():\n        if evenement.type == pygame.QUIT:\n            continuer = False\n        if evenement.type == MOUSEBUTTONDOWN:\n            if evenement.button == 1:\n                x, y = pygame.mouse.get_pos()\n                if abs(x - width//2) &lt; 50 and abs(y - height//2) &lt; 50:\n                    affiche()\n\n    pygame.display.flip()\n\n## Fermeture de la fen\u00eatre\npygame.quit()\n</code></pre>"},{"location":"T08_Extras/3Pygame/04-Pygame_extras/","title":"Texte, dessins, fen\u00eatres","text":""},{"location":"T08_Extras/3Pygame/04-Pygame_extras/#1-ecrire-du-texte","title":"1. \u00c9crire du texte","text":"<p>Pour \u00e9crire du texte avec Pygame, il faut:</p> <ul> <li>d\u00e9finir une police de caract\u00e8res (font en anglais), en pr\u00e9cisant la taille;</li> <li>cr\u00e9er un objet de type <code>Surface</code> dans lequel le texte est dessin\u00e9, en pr\u00e9cisant la couleur et le fond;</li> <li>attacher cet objet \u00e0 la fen\u00eatre avec <code>blit</code>.</li> </ul> Exemple de code<pre><code>mapolice = pygame.font.SysFont(\"Deja Vu Sans MS\", 80)\nlabel_victoire = mapolice.render(\"Gagn\u00e9 !\", True, (255, 0, 0), None)\nfenetre.blit(label_victoire, (50, 100))\n</code></pre>"},{"location":"T08_Extras/3Pygame/04-Pygame_extras/#2-dessiner-avec-pygame","title":"2. Dessiner avec Pygame","text":"<p>On peut dessiner des formes simples (lignes, rectangles, polygones, cercles, etc) avec le module <code>pygame.draw</code>. Le mieux est de consulter la documentation.</p> <p>Some examples:</p> <pre><code># Define the colors we will use in RGB format\nBLACK = (  0,   0,   0)\nWHITE = (255, 255, 255)\nBLUE =  (  0,   0, 255)\nGREEN = (  0, 255,   0)\nRED =   (255,   0,   0)\n\n# Draw on the screen a GREEN line from (0,0) to (50.75) \n# 5 pixels wide.\npygame.draw.line(screen, GREEN, [0, 0], [50,30], 5)\n\n# Draw on the screen a GREEN line from (0,0) to (50.75) \n# 5 pixels wide.\npygame.draw.lines(screen, BLACK, False, [[0, 80], [50, 90], [200, 80], [220, 30]], 5)\n\n# Draw on the screen a GREEN line from (0,0) to (50.75) \n# 5 pixels wide.\npygame.draw.aaline(screen, GREEN, [0, 50],[50, 80], True)\n\n# Draw a rectangle outline\npygame.draw.rect(screen, BLACK, [75, 10, 50, 20], 2)\n\n# Draw a solid rectangle\npygame.draw.rect(screen, BLACK, [150, 10, 50, 20])\n\n# Draw an ellipse outline, using a rectangle as the outside boundaries\npygame.draw.ellipse(screen, RED, [225, 10, 50, 20], 2) \n\n# Draw an solid ellipse, using a rectangle as the outside boundaries\npygame.draw.ellipse(screen, RED, [300, 10, 50, 20]) \n\n# This draws a triangle using the polygon command\npygame.draw.polygon(screen, BLACK, [[100, 100], [0, 200], [200, 200]], 5)\n\n# Draw an arc as part of an ellipse. \n# Use radians to determine what angle to draw.\npygame.draw.arc(screen, BLACK,[210, 75, 150, 125], 0, pi/2, 2)\npygame.draw.arc(screen, GREEN,[210, 75, 150, 125], pi/2, pi, 2)\npygame.draw.arc(screen, BLUE, [210, 75, 150, 125], pi,3*pi/2, 2)\npygame.draw.arc(screen, RED,  [210, 75, 150, 125], 3*pi/2, 2*pi, 2)\n\n# Draw a circle\npygame.draw.circle(screen, BLUE, [60, 250], 40)\n</code></pre> <p>Balle rebondissante</p> <p>Par exemple, pour repr\u00e9senter la balle qui rebondit sur les bords de la fen\u00eatre, on peut dessiner un cercle plut\u00f4t que d'importer une image. Il faut alors g\u00e9rer les coordonn\u00e9es du centre du cercle qui repr\u00e9sente la balle.</p> <p>Le code devient alors:</p> <pre><code>import pygame\nfrom pygame.locals import *\n\npygame.init()\n\nwidth, height = 320, 240\nscreen = pygame.display.set_mode((width, height))\n\n# Caract\u00e9ristiques de la balle\nrayon = 8\nx = width // 2 \ny = height // 2\ndx, dy = 1, 0\ncouleur = (255, 110, 66)\n# Dessin du cercle\npygame.draw.circle(screen, couleur, (x, y), rayon)\n\ncontinuer = True\nwhile continuer:\n    for evenement in pygame.event.get():\n        if evenement.type == QUIT:\n            continuer = False\n\n    x = x + dx\n    y = y + dy\n\n    if x &lt; rayon or x &gt; width-rayon:\n        dx = - dx\n\n    screen.fill([0, 0, 0])\n    pygame.draw.circle(screen, couleur, (x, y), rayon)\n    pygame.display.flip()\n\npygame.quit()\n</code></pre>"},{"location":"T08_Extras/3Pygame/04-Pygame_extras/#3-gerer-plusieurs-fenetres","title":"3. G\u00e9rer plusieurs fen\u00eatres","text":"<p>En terminale...</p>"},{"location":"T08_Extras/4Divers/1Habitudes/Travail/","title":"Bonnes habitudes de travail","text":""},{"location":"T08_Extras/4Divers/1Habitudes/Travail/#dossiers-fichiers-et-versionning","title":"Dossiers, fichiers et versionning","text":"<p>Cette ann\u00e9e en NSI nous allons manipuler un certain nombre de fichiers. Il est important de les nommer et les classer de fa\u00e7on rigoureuse pour les retrouver rapidement et les partager.</p> Spoiler alert <p>Ces conseils ne sont pas r\u00e9serv\u00e9s \u00e0 NSI, ils peuvent s'appliquer \u00e0 toutes les disciplines...</p> <p>Conseils</p> <ul> <li>Utilisez des dossiers pour classer vos fichiers. Il n'y en a jamais assez.</li> <li>Prenez l'habitude de faire plusieurs sauvegardes de vos documents (sur le r\u00e9seau du lyc\u00e9e, sur l'ENT, sur cl\u00e9 USB).</li> <li>\u00c9vitez dans les noms de fichiers et de dossiers les espaces (utilisez plut\u00f4t _ ) ainsi que les caract\u00e8res accentu\u00e9s et les caract\u00e8res sp\u00e9ciaux.</li> <li>Un nom de fichier doit \u00eatre parlant (un peu comme une variable en fait). On \u00e9vitera de nommer ses codes Python <code>python1.py</code>, <code>python2.py</code>, <code>python3.py</code>, etc. Mais plut\u00f4t <code>1NSI_T7_tri_selection.py</code> par exemple pour un exercice de programmation sur le tri par selection au th\u00e8me 7.</li> <li>Lorsqu'on travaille sur un projet ou un programme cons\u00e9quent, il peut \u00eatre utile de conserver des archives du travail \u00e0 plusieurs \u00e9tapes de l'\u00e9laboration, plut\u00f4t que de ne conserver que la derni\u00e8re version. \u00c0 cet effet on pourra num\u00e9roter : <code>1NSI_projet_morpion_v1.py</code>, puis <code>1NSI_projet_morpion_v2.py</code>, <code>1NSI_projet_morpion_v3.py</code>, etc.</li> </ul>"},{"location":"T08_Extras/4Divers/1Habitudes/Travail/#espace-de-travail","title":"Espace de travail","text":"<p>Il est conseill\u00e9 de travailler avec 3 espaces:</p> <ul> <li>l'\u00e9cran de l'ordinateur partitionn\u00e9 avec les 2 premiers espaces: ce site et un IDE;</li> </ul> <p> </p> <ul> <li>une feuille de papier et un stylo comme troisi\u00e8me espace...</li> </ul>"},{"location":"T08_Extras/4Divers/2Jupyter/Jupyter/","title":"Jupyter","text":""},{"location":"T08_Extras/4Divers/2Jupyter/Jupyter/#notebooks","title":"Notebooks","text":"<p>Jupyter est une application Web utilis\u00e9e pour programmer dans plusieurs langages, en particulier en Python. Jupyter permet de r\u00e9aliser des notebooks, qui sont des documents interactifs contenant \u00e0 la fois des zones de texte (en markdown) et des zones de code informatique, qui peut s'ex\u00e9cuter directement dans la fen\u00eatre.</p> <p>Cela permet donc de suivre des indications et de coder dans la m\u00eame fen\u00eatre. Cela sera particuli\u00e8rement adapt\u00e9 pour des s\u00e9ances d'exercices basiques, plut\u00f4t que d'utiliser un fichier <code>.py</code> \u00e0 chaque fois avec Thonny.</p> <p>Extension</p> <p>L'extension des fichiers notebooks Jupyter est <code>.ipynb</code>.</p> <p>Ex\u00e9cution du code</p> <p>La zone s\u00e9lectionn\u00e9e s'ex\u00e9cute avec le raccourci <code>CTRL+ENTER</code>.</p>"},{"location":"T08_Extras/4Divers/2Jupyter/Jupyter/#au-lycee","title":"Au lyc\u00e9e","text":"Vid\u00e9o <p><p> </p></p>"},{"location":"T08_Extras/4Divers/2Jupyter/Jupyter/#en-ligne","title":"En ligne","text":"<p>Un service Jupyter est int\u00e9gr\u00e9 \u00e0 l'ENT. Il suffit pour cela de lancer l'application depuis le mur des applications de l'ENT.</p> Vid\u00e9o <p><p> </p></p>"},{"location":"T08_Extras/4Divers/3Clavier/Clavier/","title":"Usage du clavier","text":"<p>Utiliser le clavier est souvent bien plus pratique et surtout plus rapide qu'utiliser la souris. Encore faut-il apprendre \u00e0 l'apprivoiser...</p> <p> </p> <p>La s\u00e9lection au clavier</p> <p>Outre les touches <code>DEBUT</code> et <code>FIN</code> qui permettent d'atteindre rapidement le d\u00e9but ou la fin d'une ligne, les fl\u00e8ches directionelles servent \u00e9videmment \u00e0 se d\u00e9placer dans du texte. Mais combin\u00e9es:</p> <ul> <li>\u00e0 la touche <code>CTRL</code> : elles permettent de se d\u00e9placer de mot en mot;</li> <li>\u00e0 la touche <code>MAJ</code> : elles permettent de s\u00e9lectionner un caract\u00e8re;</li> <li>aux touches <code>MAJ</code> et <code>CTRL</code>: elles permettent de s\u00e9lectionner un mot.</li> </ul> <p>De m\u00eame, en se pla\u00e7ant en d\u00e9but d'une ligne et en combinant la touche <code>MAJ</code> et <code>FIN</code>, on s\u00e9lectionne la ligne enti\u00e8re.</p> <p>La touche <code>TAB</code></p> <p> </p> <p>Outre le marquage d'un taquet de tabulation dans un traitement de texte, la touche <code>TAB</code> sert \u00e0 :</p> <ul> <li>passer d'un champ de formulaire \u00e0 un autre dans une page Web. Par exemple lorsque vous vous identifiez \u00e0 un compte, apr\u00e8s avoir tap\u00e9 votre login, plut\u00f4t que d'utiliser la souris pour aller dans le champ \"Mot de passe\", appuyez sur <code>TAB</code> pour y acc\u00e9der directement.</li> <li>ins\u00e9rer un nombre d'espaces fixes : on sert sert pour indenter le code;</li> <li>compl\u00e9ter des commandes enregistr\u00e9es dans un IDE ou un terminal. Par exemple, si vous avez nomm\u00e9 une variable <code>mon_nom_de_variable_tres_tres_long</code>, plus tard dans le code, vous pouvez taper <code>mon</code> + <code>TAB</code> et l'IDE doit vous proposer l'auto-compl\u00e9tion du nom.</li> </ul> <p>Les raccourcis clavier</p> <p>Il existe de tr\u00e8s nombreux raccourcis clavier qui permettent d'ex\u00e9cuter des t\u00e2ches courantes sans passer par les menus du logiciel. Certains sont (quasi-)universels, c'est-\u00e0-dire que ce sont les m\u00eames sur tous les logiciels, d'autres sont sp\u00e9cifiques \u00e0 chaque logiciel. Il est important d'en conna\u00eetre quelques-uns pour \u00eatre plus efficace.</p> Les universelsIDENavigateur Web <ul> <li>La triplette magique <code>CTRL+X</code>, <code>CTRL+C</code>, <code>CTRL+V</code> pour couper, copier, coller;</li> <li><code>CTRL+O</code> pour ouvrir un fichier</li> <li><code>CTRL+N</code> pour cr\u00e9er un nouveau document;</li> <li><code>CTRL+S</code> pour sauvegarder le document en cours;</li> <li><code>CTRL+MAJ+S</code> pour sauvegarder en pr\u00e9cisant le nom du fichier;</li> <li><code>CTRL+Z</code> pour annuler la derni\u00e8re action, <code>CTRL+Y</code> ou <code>CTRL+MAJ+Z</code> pour la r\u00e9tablir;</li> <li><code>CTRL+W</code> pour fermer un onglet;</li> <li><code>CTRL+Q</code> ou <code>ALT+F4</code> pour fermer le logiciel;</li> <li><code>CTRL+A</code> pour s\u00e9lectionner tout (All).</li> </ul> <p>\u00c0 chercher de suite lorsqu'on utilise un nouvel IDE, les raccourcis pour les actions suivantes (entre parenth\u00e8ses ceux de Thonny):</p> <ul> <li>ex\u00e9cuter le code (<code>F5</code>)</li> <li>commenter/d\u00e9commenter une ligne (<code>CTRL+M</code>)</li> </ul> <ul> <li><code>CTRL+T</code> pour ouvrir un nouvel onglet;</li> <li><code>CTRL+H</code> pour ouvrir l'historique;</li> <li>combiner <code>CTRL</code> + clic pour forcer l'ouverture d'un lien dans un nouvel onglet;</li> <li>combiner <code>MAJ</code> + clic pour forcer l'ouverture d'un lien dans une nouvelle fen\u00eatre;</li> </ul>"},{"location":"T08_Extras/4Divers/4Chaines/Strings/","title":"Manipulation de cha\u00eenes de caract\u00e8res","text":"<p>Totalement hors programme, la manipulation des cha\u00eenes de caract\u00e8res (type string, <code>str</code>) peut \u00eatre pourtant bien pratique pour g\u00e9rer l'affichage de certaines sorties de programmes, ou bien pour faire du text parsing dans des fichiers textes.</p> <p>\u00c0 savoir</p> <ul> <li> <p>On \u00e9crit les cha\u00eenes de caract\u00e8res avec des guillemets simples <code>'NSI'</code> ou doubles <code>\"NSI\"</code>. Peu importe, sauf si la cha\u00eene de caract\u00e8res comporte une apostrophe <code>'</code>, auquel cas il est obligatoire d'utiliser les doubles.</p> </li> <li> <p>Une cha\u00eene de caract\u00e8res est un objet iterable: on peut donc le parcourir, r\u00e9cup\u00e9rer sa longueur et ses caract\u00e8res gr\u00e2ce \u00e0 leur indice.</p> </li> </ul> <pre><code>&gt;&gt;&gt; mot = \"Guido\"\n&gt;&gt;&gt; len(mot)\n5\n&gt;&gt;&gt; mot[2]\n'i'\n&gt;&gt;&gt; for l in mot:\n    print(l)\n\nG\nu\ni\nd\no\n&gt;&gt;&gt; \n</code></pre> <ul> <li>Une cha\u00eene de caract\u00e8res est un objet non mutable : on ne peut pas le modifier.</li> </ul> <pre><code>&gt;&gt;&gt; mot = \"Guido\"\n&gt;&gt;&gt; mot[4] = 'e'\nTraceback (most recent call last):\n  File \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nTypeError: 'str' object does not support item assignment\n&gt;&gt;&gt; \n</code></pre> <p>Concat\u00e9nation</p> <p>La concat\u00e9nation de plusieurs cha\u00eenes de caract\u00e8res consiste tout simplement \u00e0 les mettre bout \u00e0 bout. Elle se fait en Python avec l'op\u00e9rateur <code>+</code>. On peut \u00e9galement multiplier une cha\u00eene de caract\u00e8res par un entier<sup>1</sup>.</p> <pre><code>&gt;&gt;&gt; a = \"truc\"\n&gt;&gt;&gt; b = \"muche\"\n&gt;&gt;&gt; a + b\n'trucmuche'\n&gt;&gt;&gt; 14 * \"miaou\"\n'miaoumiaoumiaoumiaoumiaoumiaoumiaoumiaoumiaoumiaoumiaoumiaoumiaoumiaou'\n</code></pre> <p>Conversions</p> <ul> <li>On peut convertir un entier, un flottant en cha\u00eene de caract\u00e8res avec la fonction <code>str</code>:</li> </ul> <pre><code>&gt;&gt;&gt; str(2)\n'2'\n&gt;&gt;&gt; str(2.0)\n'2.0'\n</code></pre> <ul> <li>On peut convertir une cha\u00eene de caract\u00e8res en liste avec la fonction <code>list</code>:</li> </ul> <pre><code>&gt;&gt;&gt; list(\"Python\")\n['P', 'y', 't', 'h', 'o', 'n']\n</code></pre> <p><code>split</code> and <code>join</code></p> <ul> <li>On peut d\u00e9couper une cha\u00eene de caract\u00e8res avec la m\u00e9thode <code>split</code>. Sans param\u00e8tre, elle d\u00e9coupe sur le caract\u00e8re espace. Avec un param\u00e8tre de type <code>str</code>, elle d\u00e9coupe selon ce caract\u00e8re. Dans les deux cas, le caract\u00e8re de d\u00e9coupe est supprim\u00e9. Elle retourne une liste.</li> </ul> <pre><code>&gt;&gt;&gt; p = \"Un ordinateur, c'est compl\u00e8tement con.\"\n&gt;&gt;&gt; p.split()\n['Un', 'ordinateur,', \"c'est\", 'compl\u00e8tement', 'con.']\n&gt;&gt;&gt; m = 'Abracadabra'\n&gt;&gt;&gt; m.split('a')\n['Abr', 'c', 'd', 'br', '']\n&gt;&gt;&gt;\n</code></pre> <ul> <li>Dans l'autre sens, on peut fusionner avec la m\u00e9thode <code>join</code> les \u00e9lements d'une liste dont tous les \u00e9l\u00e9ments sont de type <code>str</code>, avec un caract\u00e8re d'insertion entre les \u00e9l\u00e9ments.</li> </ul> <pre><code>&gt;&gt;&gt; l = ['P', 'y', 't', 'h', 'o', 'n']\n&gt;&gt;&gt; \"\".join(l)\n'Python'\n&gt;&gt;&gt; \" \".join([\"NSI\", \"c'est\", \"de\", \"l'eau\"])\n\"NSI, c'est de l'eau\"\n</code></pre> <ol> <li> <p>puisque la multiplication par un entier n'est qu'un raccourci pour l'addition de m\u00eames termes.\u00a0\u21a9</p> </li> </ol>"},{"location":"T08_Extras/4Divers/5Trucs/Trucs/","title":"Trucs et astuces","text":""},{"location":"T08_Extras/4Divers/5Trucs/Trucs/#1-recuperer-une-entree-clavier-dans-un-programme","title":"1. R\u00e9cup\u00e9rer une entr\u00e9e clavier dans un programme","text":"<p>Entr\u00e9e clavier</p> <p>En Python, la fonction <code>input</code> permet de faire une pause dans l'ex\u00e9cution du programme et attend que l'utilisateur fasse une entr\u00e9e au clavier (termin\u00e9e bien entendu par la touche <code>ENTER</code>).</p> <p>Cette fonction renvoie cette entr\u00e9e syst\u00e9matiquement sous le type <code>str</code>. Il faudra penser \u00e0 la convertir en <code>int</code> ou <code>float</code> si la saisie attendue est num\u00e9rique.</p> <p>On peut, de fa\u00e7on facultative, pr\u00e9ciser en argument une cha\u00eene de caract\u00e8re qui sera affich\u00e9e au pr\u00e9alable (pratique pour poser une question).</p> <p>Exemples</p> <p>Ces exemples sont \u00e0 tester dans un IDE.</p> Saisie d'un texte (sans argument)Saisie d'un texte (avec argument)Conversion de la saisie en <code>int</code> <pre><code>&gt;&gt;&gt; r = input()\nsalut\n&gt;&gt;&gt; r\n'salut'\n&gt;&gt;&gt; type(r)\n&lt;class 'str'&gt;\n&gt;&gt;&gt; \n</code></pre> <pre><code>&gt;&gt;&gt; r = input(\"Quel \u00e2ge avez-vous? \")\nQuel \u00e2ge avez-vous? 15\n&gt;&gt;&gt; r\n'15'\n&gt;&gt;&gt; type(r)\n&lt;class 'str'&gt;\n&gt;&gt;&gt; \n</code></pre> <pre><code>&gt;&gt;&gt; r = int(input(\"Quel \u00e2ge avez-vous?\"))\nQuel \u00e2ge avez-vous? 15\n&gt;&gt;&gt; r\n15\n&gt;&gt;&gt; type(r)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; \n</code></pre>"},{"location":"T08_Extras/4Divers/5Trucs/Trucs/#2-lincrementation-dune-variable","title":"2. L'incr\u00e9mentation d'une variable.","text":"<p>\u00abIncr\u00e9menter\u00bb une variable signifie l'augmenter. </p> <p>Imaginons une variable appel\u00e9e <code>compteur</code>. Au d\u00e9marrage de notre programme, elle est initialis\u00e9e \u00e0 la valeur 0.  <pre><code>&gt;&gt;&gt; compteur = 0\n</code></pre></p> <p>Consid\u00e9rons qu'\u00e0 un moment du programme, cette variable doit \u00eatre modifi\u00e9e, par exemple en lui ajoutant 1.</p> <p>En Python, cela s'\u00e9crira :</p> <pre><code>&gt;&gt;&gt; compteur = compteur + 1\n</code></pre> <p>Observ\u00e9e avec des yeux de math\u00e9maticien, la pr\u00e9c\u00e9dente instruction est une horreur.</p> <p></p> <p>Vue avec des yeux d'informaticien, voil\u00e0 comment est interpr\u00e9t\u00e9e la commande <pre><code>&gt;&gt;&gt; compteur = compteur + 1\n</code></pre></p> <ol> <li>On \u00e9value la partie droite de l'\u00e9galit\u00e9, donc l'expression <code>compteur + 1</code>.</li> <li>On va donc chercher le contenu de la variable <code>compteur</code>. Si celle-ci n'existe pas, un message d'erreur est renvoy\u00e9.</li> <li>On additionne 1 au contenu de la variable <code>compteur</code>.</li> <li>On \u00e9crase le contenu actuel de la variable <code>compteur</code> avec la valeur obtenue au 3.   </li> </ol> <p>\u00c0 la fin de ces op\u00e9rations, la variable <code>compteur</code> a bien augment\u00e9 de 1.</p> <p>Cette proc\u00e9dure d'incr\u00e9mentation est tr\u00e8s tr\u00e8s classique, il faut la ma\u00eetriser parfaitement !</p> <p>Syntaxe classique et syntaxe Pythonesque </p> <p>L'incr\u00e9mentation d'une variable <code>compteur</code> s'\u00e9crira donc en Python : <pre><code>&gt;&gt;&gt; compteur = compteur + 1\n</code></pre> Mais il existe aussi une syntaxe particuli\u00e8re, un peu plus courte :</p> <p><pre><code>&gt;&gt;&gt; compteur += 1\n</code></pre> Cette syntaxe peut se ranger dans la cat\u00e9gorie des sucres syntaxiques : c'est bien de la conna\u00eetre, c'est amusant de s'en servir, mais son utilisation n'est en rien obligatoire et peut avoir un effet n\u00e9faste, celui d'oublier r\u00e9ellement ce qu'il se passe derri\u00e8re.</p>"},{"location":"T08_Extras/4Divers/5Trucs/Trucs/#3-utilisation-du-module-pil","title":"3. Utilisation du module <code>PIL</code>","text":"<p>Le module <code>PIL</code> permet la cr\u00e9ation et la manipulation d'images.</p> <p>Voir ici .</p>"},{"location":"T08_Extras/4Divers/6c0d1ngUP/CodingUP/","title":"Pr\u00e9paration \u00e0 c0d1ng UP","text":"<p>Le blog pour s'inscrire et avoir toutes les infos.</p> <p>!</p> <p>D\u00e9fi par requ\u00eate web</p> <p>Ce genre de d\u00e9fi donne deux url: l'une pour r\u00e9cup\u00e9rer les donn\u00e9es (m\u00e9thode GET), l'autre pour envoyer votre r\u00e9ponse (m\u00e9thode POST). On va effectuer des requ\u00eates \u00e0 ces url via le module <code>requests</code>.</p> <p> </p> <pre><code>import requests\n\n# On fait une requ\u00eate (GET) \u00e0 la premi\u00e8re adresse (copiez-collez l'adresse):\nr = requests.get(\"http...\")\n\n# On r\u00e9cup\u00e8re le texte contenu dans la page r\u00e9cup\u00e9r\u00e9e:\ndata = r.text.split(\"\\n\") \n\n# On r\u00e9sout le d\u00e9fi !\n# On stocke par exemple la r\u00e9ponse dans une variable nomm\u00e9e... reponse\n\n\n# On r\u00e9pond avec une requ\u00eate (POST) \u00e0 la deuxi\u00e8me adresse (copiez-collez l'adresse).\n# On renvoie en fait un dictionnaire, o\u00f9 \"sig\" est la signature contenue dans la premi\u00e8re\n# ligne du texte (c-a-d data[0]), et o\u00f9 \"rep\" est la valeur de la r\u00e9ponse...\nans = requests.post(\"http...\", {\"sig\": data[0], \"rep\": reponse})\n\n# On affiche le r\u00e9sultat de la requ\u00eate pour contr\u00f4ler\nprint(ans.text) \n</code></pre> <p>Pour s'entra\u00eener:</p> <p>https://pydefis.callicode.fr/defis/ExempleURL/txt </p> <p>https://pydefis.callicode.fr/defis/BaladeEchiquier/txt </p> <p>Les sets</p> <p>Un objet set est une collection d'\u00e9l\u00e9ments comme les listes ou les tuples, \u00e0 la diff\u00e9rence qu'ils ne sont pas tri\u00e9s ni ordonn\u00e9s, et donc on ne peut avoir acc\u00e8s \u00e0 leurs \u00e9l\u00e9ments par indexation.</p> <p>De plus, un set ne peut pas contenir plusieurs \u00e9l\u00e9ments identiques. Il ressemble ainsi \u00e0 un \u00abensemble d'\u00e9l\u00e9ments\u00bb en math\u00e9matiques, et se note comme lui entre accolades.</p> <p>On peut n\u00e9anmoins lui ajouter/supprimer des \u00e9l\u00e9ments, tester l'appartenance, le parcourir, cr\u00e9er l'intersection ou la r\u00e9union de plusieurs sets, etc.</p> <p>Une utilisation des sets permet donc d'\u00e9liminer les doublons. Exemples:</p> <pre><code>&gt;&gt;&gt; s1 = {'a', 'e', 'i', 'o', 'u'}\n&gt;&gt;&gt; s2 = set('jack sparrow')\n&gt;&gt;&gt; s2\n{'c', ' ', 'p', 's', 'a', 'k', 'j', 'r', 'w', 'o'}\n&gt;&gt;&gt; set('124512453252514')\n{'5', '4', '3', '1', '2'}\n&gt;&gt;&gt; len(s2)\n10\n&gt;&gt;&gt; 'e' in s1\nTrue\n&gt;&gt;&gt; 'e' in s2\nFalse\n&gt;&gt;&gt; s2.remove(' ')\n&gt;&gt;&gt; s2\n{'c', 'p', 's', 'a', 'k', 'j', 'r', 'w', 'o'}\n&gt;&gt;&gt; s1.add('y')\n&gt;&gt;&gt; s1\n{'y', 'u', 'a', 'e', 'o', 'i'}\n&gt;&gt;&gt; s1 &amp; s2\n{'o', 'a'}\n&gt;&gt;&gt; s1 | s2\n{'u', 'c', 'j', 'r', 'y', 'e', 's', 'a', 'p', 'k', 'i', 'w', 'o'}\n&gt;&gt;&gt; {'u', 'y'} &lt;= s1\nTrue\n</code></pre> <p>Pour plus de d\u00e9tails, voir ici </p> <p>Pour s'entra\u00eener:</p> <p>https://pydefis.callicode.fr/defis/CodeCabine/txt</p> <p>Lire et travailler sur une image</p> <p>\u00c7a se passe l\u00e0 </p> <p>Pour s'entra\u00eener:</p> <p>https://pydefis.callicode.fr/defis/Herculito09Ceinture/txt </p> <p>Slicing</p> <p>Lorsqu'on travaille sur une liste, il peut \u00eatre n\u00e9cessaire (ou pratique) d'extraire une tranche (slice) de cette liste, c'est-\u00e0-dire une succession d'\u00e9l\u00e9ments cons\u00e9cutifs.</p> <p>Par exemple, si on dispose d'une liste <code>[4, 2, 1, 3, 6, 0, 8]</code>, on peut extraire la tranche <code>[2, 1, 3, 6]</code> en pr\u00e9cisant les indices de d\u00e9but et de fin (non inclus, comme dans <code>range</code>). Si on ne pr\u00e9cise pas l'indice de d\u00e9but (respectivement l'indice de fin), on \u00abslice\u00bb depuis le premier \u00e9l\u00e9ment (resp. jusqu'au dernier):</p> <p><pre><code>&gt;&gt;&gt; lst = [4, 2, 1, 3, 6, 0, 8]\n&gt;&gt;&gt; lst[1:5]\n[2, 1, 3, 6]\n&gt;&gt;&gt; lst[1:]\n[2, 1, 3, 6, 0, 8]\n&gt;&gt;&gt; lst[:4]\n[4, 2, 1, 3]\n</code></pre> On peut \u00e9galement pr\u00e9ciser un pas : <pre><code>&gt;&gt;&gt; lst[1:5:2]\n[2, 3]\n&gt;&gt;&gt; lst[::2]\n[4, 1, 6, 8]\n</code></pre></p> <p>Cela peut donc \u00eatre utile pour d\u00e9couper une liste en tranches de longueur donn\u00e9e, ici 8 par exemple:</p> <pre><code>&gt;&gt;&gt; test = list(range(64))\n&gt;&gt;&gt; test[0:8]\n[0, 1, 2, 3, 4, 5, 6, 7]\n&gt;&gt;&gt; test[8:16]\n[8, 9, 10, 11, 12, 13, 14, 15]\n&gt;&gt;&gt; tranches = [test[8*k:8*(k+1)] for k in range(len(test)//8)]\n&gt;&gt;&gt; tranches\n[[0, 1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15], [16, 17, 18, 19, 20, \n21, 22, 23], [24, 25, 26, 27, 28, 29, 30, 31], [32, 33, 34, 35, 36, 37, 38, 39],\n[40, 41, 42, 43, 44, 45, 46, 47], [48, 49, 50, 51, 52, 53, 54, 55], [56, 57, 58\n, 59, 60, 61, 62, 63]]\n</code></pre> <p>Pour s'entra\u00eener:</p> <p>https://pydefis.callicode.fr/defis/Fourchelangue/txt </p>"},{"location":"T08_Extras/4Divers/7Processing/Accueil_processing/","title":"Prise en main de Processing","text":"<p>  Processing est un outil de cr\u00e9ation multim\u00e9dia utilisant le code informatique. Simple de prise en main, il a \u00e9t\u00e9 cr\u00e9\u00e9 par des artistes pour des artistes. On peut utiliser le langage Python pour entrer les instructions.</p> <p>Nous l'utiliserons pour ajouter du graphisme \u00e0 nos cr\u00e9ations...</p> Documentation <ul> <li>Le site officiel (anglais) </li> <li>Un manuel d'utilisation (fran\u00e7ais) </li> </ul> <p> </p>"},{"location":"T08_Extras/4Divers/7Processing/01_Bases/T10.1_Bases/","title":"Les bases de Processing","text":""},{"location":"T08_Extras/4Divers/7Processing/01_Bases/T10.1_Bases/#repere","title":"Rep\u00e8re","text":"<p>\u00c0 l'ex\u00e9cution de tout script Processing, une fen\u00eatre s'affiche avec une zone de dessin qu'on appelle g\u00e9n\u00e9ralement canevas (canvas in english). Sa taille se d\u00e9finit \u00e0 l'aide de la fonction <code>size</code>. Par exemple, pour cr\u00e9er un canevas de 300 pixels sur 200 pixels, on utilisera:</p> <pre><code>size(300, 200)\n</code></pre> <p>Chaque pixel de cette zone est rep\u00e9r\u00e9e par des coordonn\u00e9es dans le rep\u00e8re suivant, dont l'origine se situe en haut \u00e0 gauche et l'axe des ordonn\u00e9es est orient\u00e9 vers le bas.</p> <p> </p>"},{"location":"T08_Extras/4Divers/7Processing/01_Bases/T10.1_Bases/#traces","title":"Trac\u00e9s","text":"<p>Trac\u00e9s de base</p> <ul> <li><code>point</code> : permet de dessiner un point (pixel). En param\u00e8tre, les coordonn\u00e9es du point.</li> <li><code>line</code>: permet de tracer une ligne entre deux points. En param\u00e8tres, les coordonn\u00e9es des deux points.</li> <li><code>rect</code>: permet de tracer un rectangle. En param\u00e8tres, les coordonn\u00e9es du sommet haut-gauche, puis la largeur et la hauteur du rectangle.</li> <li><code>ellipse</code>: permet de tracer une ellipse. En param\u00e8tres, les coordonn\u00e9es du centre, puis la largeur et la hauteur (mettre la m\u00eame valeur pour un cercle).</li> </ul> Exemples <p>Copier-coller le code suivant et faire varier les param\u00e8tres pour bien les comprendre.</p> <pre><code>background(255)\nrect(90, 50, 20, 100)\nfill(244, 164, 96)\nellipse(100, 70, 60, 60)\nfill(255, 255, 255)\nellipse(81, 70, 16, 32)\npoint(81, 70)\nellipse(119, 70, 16, 32)\npoint(119, 70)\nline(90, 150, 80, 160)\nline(110, 150, 120, 160)\n</code></pre>"},{"location":"T08_Extras/4Divers/7Processing/01_Bases/T10.1_Bases/#couleurs","title":"Couleurs","text":"<p>Pinceau</p> <ul> <li><code>background</code>: permet de d\u00e9finir la couleur du fond de la zone de dessin. En param\u00e8tres, les trois composantes RGB de la couleur.</li> <li><code>stroke</code>: permet de d\u00e9finir la couleur du pinceau (noir par d\u00e9faut) pour le contour de la forme. En param\u00e8tres, les trois composantes RGB de la couleur.</li> <li><code>noStroke</code>: permet de dessiner une forme sans coutour (pas de param\u00e8tre).</li> <li><code>strokeWeight</code>: permet de d\u00e9finir la largeur du pinceau. En param\u00e8tre, le nombre de pixel.</li> <li><code>fill</code>: permet de d\u00e9finir la couleur de remplissage de la forme. En param\u00e8tres, les trois composantes RGB de la couleur.</li> </ul> Exemples <p>Copier-coller le code suivant et faire varier les param\u00e8tres pour bien les comprendre.</p> <pre><code>background(255)\nfill(255, 0, 0)\nrect(90, 50, 20, 100)\nnoStroke()\nfill(244, 164, 96)\nellipse(100, 70, 60, 60)\nstroke(1)\nfill(255, 255, 255)\nellipse(81, 70, 16, 32)\npoint(81, 70)\nellipse(119, 70, 16, 32)\nstrokeWeight(5)\npoint(119, 70)\nstrokeWeight(2)\nline(90, 150, 80, 160)\nline(110, 150, 120, 160)\n</code></pre>"},{"location":"T08_Extras/4Divers/7Processing/01_Bases/T10.1_Bases/#exercice","title":"Exercice","text":"<p>Exercice  1</p> <p></p> <p>Dans un canevas de 300 x 200 pixels, dessiner successivement les drapeaux fran\u00e7ais, japonais puis tch\u00e8que.</p> <p>Consulter la documentation pour les triangles ou polygones (Menu \"Help\", puis \"References\").</p>"},{"location":"T08_Extras/4Divers/7Processing/02_Animations/T10.2_Animations/","title":"Animations","text":"<p>Le principe</p> <p>Processing propose 2 fonctions pr\u00e9d\u00e9finies que le programmeur devra compl\u00e9ter :</p> <ul> <li>la fonction <code>setup</code> qui sera appel\u00e9e une seule fois d\u00e8s le d\u00e9but de l\u2019ex\u00e9cution du programme ;</li> <li>la fonction <code>draw</code> qui sera appel\u00e9e \u00e0 chaque image \u00e0 raison de 60 images par d\u00e9faut (on peut r\u00e9gler les FPS avec la fonction <code>frameRate</code> ).</li> </ul> <p>Ces deux fonctions ne prennent aucun param\u00e8tre et ne retournent aucune valeur.</p> <p>Exemple</p> <pre><code>r = 2\ndr = 2\ndef setup():\n    size(400, 400)\n    stroke(255, 0, 0)\n    fill(0)\n    # frameRate(20)\ndef draw():\n    global r, dr\n    background(255)\n    ellipse(200, 200, 2*r, 2*r)\n    if r &lt; 2 or r &gt; 200:\n        dr = -dr\n    r = r + dr\n</code></pre> Explication du code Les variablesLa fonction <code>setup</code>La fonction <code>draw</code> <p>On d\u00e9finit deux variables <code>r</code> pour le rayon du disque et <code>dr</code> pour la quantit\u00e9 ajout\u00e9e \u00e0 ce rayon \u00e0 chaque image (frame).</p> <p>Avec Processing, il est imp\u00e9ratif de pr\u00e9ciser que ce sont des variables globales pour pouvoir les utiliser dans la fonction <code>draw</code> (ligne 9).</p> <p>On d\u00e9finit la taille de la zone de dessin, la couleur du contour (rouge) et du remplissage (noir).</p> <p>C'est ici qu'on d\u00e9crit ce qui doit se passer \u00e0 chaque image: on augmente le rayon <code>r</code> de la quantit\u00e9 <code>dr</code>, qu'on passe \u00e0 son oppos\u00e9 d\u00e8s que le rayon devient trop grand ou trop petit pour alterner augmentation et diminution.</p> <p>Exercice  2</p> <ol> <li>\u00c9crire un programme permettant d\u2019avoir une balle rouge (cr\u00e9\u00e9e avec la fonction ellipse), de rayon constant cette fois,  qui traverse la zone de dessin de gauche \u00e0 droite.</li> <li>Am\u00e9liorer le programme pour que la balle rebondisse sur les bords de la zone.</li> <li>Modifier le programme pour permettre \u00e0 la balle de se d\u00e9placer en diagonale. La position de d\u00e9part, la vitesse de d\u00e9part ainsi que la direction de d\u00e9part pourront \u00eatre al\u00e9atoires. Les rebonds sur les bords de la fen\u00eatre devront rester r\u00e9alistes.</li> </ol>"},{"location":"T08_Extras/4Divers/7Processing/03_Interactions/T10.3_Interactions/","title":"Interactions clavier et souris","text":"<p>Nous allons maintenant nous int\u00e9resser \u00e0 l'interaction avec l'utilisateur. Pour l'instant (Processing offre \u00e9norm\u00e9ment de possibilit\u00e9s) nous allons nous contenter de la souris et du clavier.</p>"},{"location":"T08_Extras/4Divers/7Processing/03_Interactions/T10.3_Interactions/#souris","title":"Souris","text":"<p>Fonctions r\u00e9serv\u00e9es</p> <p>Processing propose 4 fonctions qui devront \u00eatre compl\u00e9t\u00e9es par le programmeur :</p> <ul> <li>le code se trouvant dans la fonction <code>mousePressed</code> est ex\u00e9cut\u00e9 \u00e0 chaque fois que l'utilisateur appuie sur un des boutons de la souris.</li> <li>le code se trouvant dans la fonction <code>mouseReleased</code>  est ex\u00e9cut\u00e9 \u00e0 chaque fois qu'un bouton de la souris qui avait \u00e9t\u00e9 pr\u00e9alablement press\u00e9 est rel\u00e2ch\u00e9.</li> <li>le code se trouvant dans la fonction <code>mouseMoved</code>  est ex\u00e9cut\u00e9 \u00e0 chaque image tant que la souris se d\u00e9place.</li> <li>le code se trouvant dans la fonction <code>mouseDragged</code>  est est ex\u00e9cut\u00e9 \u00e0 chaque image tant que la souris se d\u00e9place et que le bouton de la souris est enfonc\u00e9.</li> </ul> <p>Ces 4 fonctions ne prennent aucun param\u00e8tre et ne retournent aucune valeur.</p> <p>De plus les variables <code>mouseX</code> et <code>mouseY</code> permettent de r\u00e9cup\u00e9rer la position de la souris.</p> <p>Exemple</p> <pre><code>def setup():\n    global x, y, r\n    size(400, 400)\n    noStroke()\n    fill(0)\n    r = 10\n    x = 200\n    y = 200\n\ndef mousePressed():\n    global x, y, r\n    r = r + 100\n    x = mouseX\n    y = mouseY\n\ndef mouseReleased():\n    global r\n    r = r - 100\n\ndef draw():\n    global x, y, r\n    background(255)\n    ellipse(x, y, 2*r, 2*r)\n</code></pre> <p>Exercice  3</p> <p>\u00c9crire un programme qui permettra d\u2019afficher un nouveau carr\u00e9 \u00e0 chaque clic de souris (sans effacer les carr\u00e9s d\u00e9j\u00e0 pr\u00e9sents). Le centre du carr\u00e9 devra se trouver au niveau du pointeur de la souris au moment du clic. La couleur du carr\u00e9 devra \u00eatre al\u00e9atoire.</p>"},{"location":"T08_Extras/4Divers/7Processing/03_Interactions/T10.3_Interactions/#clavier","title":"Clavier","text":"<p>Fonctions r\u00e9serv\u00e9es</p> <p>Processing propose 2 fonctions qui devront \u00eatre compl\u00e9t\u00e9es par le programmeur :</p> <ul> <li>le code se trouvant dans la fonction <code>keyPressed</code> est ex\u00e9cut\u00e9 \u00e0 chaque fois que l\u2019utilisateur enfonce une touche ;</li> <li>le code se trouvant dans la fonction <code>keyReleased</code> est ex\u00e9cut\u00e9 quand une touche du clavier est rel\u00e2ch\u00e9e.</li> </ul> <p>Ces 2 fonctions ne prennent aucun param\u00e8tre et ne retournent aucune valeur.</p> <p>De plus la variable <code>key</code> (ou <code>keyCode</code> pour les touches non ASCII<sup>1</sup>)  r\u00e9cup\u00e8re la touche press\u00e9e.</p> <p>Exemple</p> <pre><code>def setup():\n    size(200, 200)\n    textAlign(CENTER)\n    background(255)\n\ndef keyPressed():\n    if key == 'n':\n        background(0)\n        fill(255)\n        text(\"NUIT\", 100, 100)\n    elif key == 'j':\n        background(255)\n        fill(0)   \n        text(\"JOUR\", 100, 100)\n    elif key == ENTER:\n        background(255, 0, 0)\n    elif key == ' ':\n        background(0, 0, 255)\n    elif key == CODED:\n        if keyCode == UP:\n            background(127)\n            fill(0) \n            text(\"Compris?\", 100, 100)\n\ndef draw():\n    pass\n</code></pre> <p>Exercice  4</p> <p>\u00c9crire un programme permettant d\u2019afficher une balle noire qui pourra \u00eatre d\u00e9plac\u00e9e \u00e0 l\u2019aide des fl\u00e8ches du clavier. La balle ne devra pas pouvoir sortir de la fen\u00eatre.</p> <p>Exercice  5</p> <p>Reprendre l\u2019animation de la balle qui rebondit sur les bords de la fen\u00eatre et le modifier pour qu\u2019un clic sur la balle change sa couleur et l\u2019acc\u00e9l\u00e8re.</p> <p>Pour d\u00e9tecter si un clic a lieu sur la balle, il faut calculer la distance entre le centre de la balle et le clic de la souris et savoir si elle est inf\u00e9rieure au rayon de la balle.</p> <p>On pourra utiliser la fonction suivante:</p> <p><pre><code>def distance(x1, y1, x2, y2):\n    return ((x1 - x2)**2 + (y1 - y2)**2) ** 0.5\n</code></pre> Facultatif : on peut ajouter un compteur du nombre de clics sur la balle.</p> <ol> <li> <p>les fl\u00e8ches directionnelles (UP, DOWN, RIGHT, LEFT) ainsi que ALT, CONTROL, SHIFT.\u00a0\u21a9</p> </li> </ol>"},{"location":"T08_Extras/5Pyxel/Pyxel01/","title":"Installation et prise en main de Pyxel","text":"<p>Pyxel est un  moteur de jeu vid\u00e9o r\u00e9tro pour Python.</p>"},{"location":"T08_Extras/5Pyxel/Pyxel01/#comment-utilisercoder-avec-pyxel","title":"Comment utiliser/coder avec Pyxel","text":"<ul> <li>En cr\u00e9ant une activit\u00e9 Pyxel Studio sur Capytale;</li> <li>En ligne \u00e9galement sur le site de la nuit du c0de;</li> <li>En installant le module Pyxel sur votre ordinateur (ou sur votre VM au lyc\u00e9e). Par exemple avec Thonny: menu Outils &gt; G\u00e9rer les paquets &gt; chercher et installer pyxel.</li> </ul>"},{"location":"T08_Extras/5Pyxel/Pyxel01/#apprendre-a-utiliser-pyxel","title":"Apprendre \u00e0 utiliser Pyxel","text":"<p>Vous pouvez suivre les tutoriels disponibles sur le site de la nuit du c0de.</p> <p>Ou ici  .</p> <p>Documentation de Pyxel en pdf: </p>"},{"location":"T08_Extras/5Pyxel/Pyxel01/#principe-de-base","title":"Principe de base","text":"<p>Voici un mod\u00e8le de base de programme utilisant Pyxel:</p> InitialisationFonction <code>run</code>Fonction <code>update</code>Fonction <code>draw</code> <p>On initialise une fen\u00eatre de 160 pixels de large sur 120 pixels de haut, avec un titre pour la fen\u00eatre.</p> <pre><code>import pyxel\n\npyxel.init(160, 120, title=\"Mon premier programme\")\n\ndef update():\n    if pyxel.btnp(pyxel.KEY_Q):\n        pyxel.quit()\n\ndef draw():\n    pyxel.cls(0)\n    pyxel.rect(10, 10, 20, 20, 11)\n\npyxel.run(update, draw)\n</code></pre> <p>La fonction <code>run</code> lance \u00e0 chaque frame (30 fois par seconde par d\u00e9faut) les fonctions <code>update</code> et <code>draw</code>.</p> <pre><code>import pyxel\n\npyxel.init(160, 120, title=\"Mon premier programme\")\n\ndef update():\n    if pyxel.btnp(pyxel.KEY_Q):\n        pyxel.quit()\n\ndef draw():\n    pyxel.cls(0)\n    pyxel.rect(10, 10, 20, 20, 11)\n\npyxel.run(update, draw)\n</code></pre> <p>Dans la fonction <code>update</code>, on actualise pour chaque frame toutes les variables du programme. On g\u00e8re \u00e9galement les \u00e9v\u00e9nements (clavier, souris).</p> <p>Ici, la fonction <code>btn</code> (button pressed) d\u00e9tecte si la touche Q est press\u00e9e et on associe une action \u00e0 effectuer si c'est le cas.</p> <pre><code>import pyxel\n\npyxel.init(160, 120, title=\"Mon premier programme\")\n\ndef update():\n    if pyxel.btn(pyxel.KEY_Q):\n        pyxel.quit()\n\ndef draw():\n    pyxel.cls(0)\n    pyxel.rect(10, 10, 20, 20, 11)\n\npyxel.run(update, draw)\n</code></pre> <p>Dans la fonction <code>draw</code>, on s'occupe de dessiner tous les \u00e9l\u00e9ments du programme dans la fen\u00eatre, pour chaque frame, apr\u00e8s avoir tout effac\u00e9 (c'est le r\u00f4le de la fonction <code>cls</code>) qui prend une couleur en param\u00e8tre, ici 0 pour noir (voir couleurs de Pyxel ci-apr\u00e8s).</p> <p>La fonction <code>rect</code> (button pressed) dessine une rectangle, dont les coordonn\u00e9es du coin haut-gauche sont <code>10, 10</code>, de largeur 20, de hauteur 20 (tout \u00e7a en pixels) et de couleur de code 11.</p> <pre><code>import pyxel\n\npyxel.init(160, 120, title=\"Mon premier programme\")\n\ndef update():\n    if pyxel.btn(pyxel.KEY_Q):\n        pyxel.quit()\n\ndef draw():\n    pyxel.cls(0)\n    pyxel.rect(10, 10, 20, 20, 11)\n\npyxel.run(update, draw)\n</code></pre>"},{"location":"T08_Extras/5Pyxel/Pyxel01/#les-couleurs-de-pyxel","title":"Les couleurs de Pyxel","text":"<p>Pour changer la palette de couleurs, on modifie la liste <code>colors</code> en sp\u00e9cifiant la couleur au format hexad\u00e9cimal. Par exemple pour r\u00e9affecter au code 8 la couleur rouge (pur) :</p> <p><pre><code>pyxel.colors[8] = 0xff0000\n</code></pre> Ou plus rapidement en donnant une liste de couleurs:</p> <pre><code>pyxel.colors.from_list([0xff0000, 0xc4b203, ...])\n</code></pre>"},{"location":"T08_Extras/5Pyxel/Pyxel01/#deplacer-un-objet-en-utilisant-les-fleches-directionnelles","title":"D\u00e9placer un objet en utilisant les fl\u00e8ches directionnelles","text":"<p>Pour d\u00e9placer un objet (par exemple le rectangle de l'exemple pr\u00e9c\u00e9dent), il faut:</p> <ul> <li>d\u00e9finir des variables pour le coin haut-gauche (en d\u00e9but de programme);</li> <li>d\u00e9terminer la modification de ces variables lors de l'appui sur une touche dans la fonction <code>update</code>;</li> </ul> <p>Variables globales</p> <p>Toutes les variables qu'on actualise dans la fonction <code>update</code> doivent \u00eatre d\u00e9clar\u00e9es de fa\u00e7on globale (cf. ligne 9 du code suivant).</p> BasiqueAvec gestion des bords D\u00e9placement vers la droite<pre><code>import pyxel\n\npyxel.init(160, 120, title=\"Mon premier programme\")\n\nx = 10\ny = 10\n\ndef update():\n    global x, y\n    if pyxel.btn(pyxel.KEY_Q):\n        pyxel.quit()\n    if pyxel.btn(pyxel.KEY_RIGHT):\n        x = x + 5 # on d\u00e9place de 5 pixels \u00e0 chaque appui sur la fl\u00e8che droite\n\ndef draw():\n    pyxel.cls(0)\n    pyxel.rect(x, y, 20, 20, 11)\n\npyxel.run(update, draw)\n</code></pre> <p>Si on appuie trop, le carr\u00e9 sort de la fen\u00eatre \u00e0 droite... Il faut contr\u00f4ler cela (ligne 13) D\u00e9placement vers la droite<pre><code>import pyxel\n\npyxel.init(160, 120, title=\"Mon premier programme\")\n\nx = 10\ny = 10\n\ndef update():\n    global x, y\n    if pyxel.btn(pyxel.KEY_Q):\n        pyxel.quit()\n    if pyxel.btn(pyxel.KEY_RIGHT):\n        if x &lt; 160 - 20: # largeur \u00e9cran - largeur carr\u00e9\n            x = x + 5\n\ndef draw():\n    pyxel.cls(0)\n    pyxel.rect(x, y, 20, 20, 11)\n\npyxel.run(update, draw)\n</code></pre></p> <p>\u00c0 vous d'ajouter les autre d\u00e9placements... et d'imaginer la suite...</p>"},{"location":"T08_Extras/5Pyxel/Pyxel02/","title":"Quelques techniques","text":""},{"location":"T08_Extras/5Pyxel/Pyxel02/#utilisation-du-frame_count","title":"Utilisation du <code>frame_count</code>","text":"<p><code>frame_count</code> est une variable qui compte le nombre de frames pass\u00e9es depuis le lancement du programme. Elle est particuli\u00e8rement utile pour g\u00e9rer le temps, par exemple pour l'apparition de personnages.</p> <p>Modulo</p> <p>Comme par d\u00e9faut il y a 30 frames par seconde, pour g\u00e9rer l'apparition d'un \u00abpersonnage\u00bb toutes les secondes, on doit d\u00e9terminer si  <code>frame_count</code> est un multiple de 30. </p> <p>On utilise donc l'op\u00e9ration \u00abmodulo\u00bb, c'est-\u00e0-dire le reste dans la division euclidienne, ou bien encore <code>%</code> en Python.</p> <p>Tester:</p> <pre><code>import pyxel\nfrom random import randint\n\npyxel.init(128, 128, title=\"Mon premier programme\")\n\nwidth = 8\n\ndef update():\n    global x, y, width\n    if pyxel.btn(pyxel.KEY_Q):\n        pyxel.quit()\n    if pyxel.frame_count % 30 == 0:\n        x = randint(0, 128-width)\n        y = randint(0, 128-width)\n\ndef draw():\n    pyxel.cls(0)\n    pyxel.rect(x, y, width, width, 10)\n\npyxel.run(update, draw)\n</code></pre> <p>Pour une apparition toutes les 2 secondes, on utilisera bien entendu <code>pyxel.frame_count % 60 == 0</code>...</p>"},{"location":"T08_Extras/5Pyxel/Pyxel03/","title":"Gestion des images / Pyxel Studio","text":""},{"location":"T08_Extras/5Pyxel/Pyxel04/","title":"Terminale : utilisation de classes","text":""},{"location":"T09_Evaluations/accueil/","title":"\u00c9valuations","text":""},{"location":"T09_Evaluations/DL/DL1/","title":"DL0001","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un programme qui demande un nombre <code>n</code> puis qui affiche tous les carr\u00e9s des nombres inf\u00e9rieurs ou \u00e9gaux \u00e0 ce nombre <code>n</code>.</p> <p>Par exemple, si on donne 5, le programme doit afficher: <pre><code>0\n1\n4\n9\n16\n25\n</code></pre></p> <p>Ici on veut faire une boucle sur des entiers: les entiers compris entre 0 et <code>n</code> dont on veut afficher la valeur des carr\u00e9s. Il faut donc \u00e9crire une boucle <code>for</code> sur un <code>range</code>. Mais attention, pour aller jusqu'\u00e0 l'entier <code>n</code> compris, il faudra s'arr\u00eater \u00e0 l'entier suivant, c'est-\u00e0-dire <code>n+1</code>.</p> <pre><code>n = int(input(\"Donnez moi un nombre: \"))\nfor k in range(n+1):\n    print(k**2) # ou print(k*k)\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un programme qui produit l'affichage suivant: <pre><code>1 est impair\n2 est pair\n3 est impair\n4 est pair\n5 est impair\n6 est pair\n7 est impair\n8 est pair\n9 est impair\n10 est pair\n11 est impair\n12 est pair\n13 est impair\n</code></pre></p> <p>\u00c0 nouveau on fait une boucle <code>for</code> sur un <code>range</code> car ce qui varie \u00e0 chaque ligne est l'entier, en commen\u00e7ant \u00e0 1 et non \u00e0 0.</p> <p>Pour tester la parit\u00e9, on calcule le reste de l'entier dans la division euclidienne par 2 (on dit qu'on calcule \u00abn modulo 2\u00bb.</p> <pre><code>for n in range(1, 14):\n    if n%2 == 0:\n        print(n, \"est pair\")\n    else:\n        print(n, \"est impair\")\n</code></pre> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>Pyd\u00e9fi : https://pydefis.callicode.fr/defis/SpymasterBomb/txt</p> <ul> <li>Penser \u00e0 utiliser une variable accumulateur.</li> <li>Utiliser la division euclidienne pour tester la divisibilit\u00e9 par un nombre.</li> </ul> <p>La strat\u00e9gie est la suivante:</p> <ul> <li>parcourir tous les nombres strictement inf\u00e9rieurs au seuil donn\u00e9 (20 dans l'exemple, 1435 dans le probl\u00e8me) avec une boucle <code>for</code> ;</li> <li>pour chaque nombre on teste sa divisibilit\u00e9 (modulo) par 3 ou par 5</li> <li>si le r\u00e9sultat de ce test est <code>True</code> alors on ajoute le nombre \u00e0 la somme pr\u00e9c\u00e9dente (variable accumulatrice, initialis\u00e9e \u00e0 0 en d\u00e9but de programme.</li> </ul> <p>Ce qui donne:</p> <pre><code>somme = 0\nn = 20\nfor k in range(n):\n    if k%3 == 0 or k%5 == 0:\n        somme = somme + k # ou somme += k\nprint(somme) \n</code></pre> <p>Exercice  4 Bonus</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un programme qui demande un nombre entier <code>n</code> et qui calcule le produit de ses chiffres.</p> <p>Indication: penser \u00e0 la division euclidienne par 10...</p> <p>On se sert de la division euclidienne pour r\u00e9cup\u00e9rer le chiffre des unit\u00e9s, gr\u00e2ce au reste:</p> <p><pre><code>&gt;&gt;&gt; 1234 % 10\n4\n</code></pre> Ainsi que du quotient pour recommencer avec les autres chiffres: <pre><code>&gt;&gt;&gt; 1234 // 10\n123\n</code></pre></p> <p>Ce qui donne (on recommence tant qu'il y a des chiffres...):</p> <pre><code>n = int(input(\"Donnez moi un nombre: \"))\n\nproduit = 1 \nwhile n &gt; 0:\n    unite = n % 10\n    produit *= unite # ou produit = produit * unite\n    n = n // 10\nprint(f\"Le produit des chiffres est {produit}\")\n</code></pre>"},{"location":"T09_Evaluations/DL/DL2/","title":"DL0010","text":"<p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Dans la fonction suivante, beaucoup de choses ont disparu (l'indentation, une instruction, mais pas seulement...).</p> <p>Rectifier le code, puis faire un appel \u00e0 la fonction dans la cellule d'apr\u00e8s, en passant en arguments les valeurs que vous choisirez.</p> <pre><code>def multiplication(a,b)\nfor k in range(b)\nm = m + a\nreturn m\n</code></pre> <p><pre><code>def multiplication(a,b):  # il manque les : en fin de ligne (SyntaxError)\n    m = 0                 # initialisation manquante de la variable accumulatrice (NameError plus tard)\n    for k in range(b):    # il manque les : en fin de ligne (SyntaxError) et indentation manquante (IndentationError)\n        m = m + a         # indentation manquante (IndentationError)\n    return m\n</code></pre> On fait un appel en console pour v\u00e9rifier, par exemple:</p> <pre><code>&gt;&gt;&gt; multiplication(4, 5)\n20\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction (\u00e0 conna\u00eetre par ) <p>\u00c9crire une fonction <code>maximum</code> qui prend une liste en param\u00e8tre et qui renvoie sa plus grande valeur.</p> <p>Tester la fonction sur une liste au choix.</p> <p>Principe de l'algorithme:</p> <ul> <li>on d\u00e9finit une valeur <code>maxi</code> (initialis\u00e9e \u00e0 0) qui stockera au fur et mesure la plus grande valeur rencontr\u00e9e jusque l\u00e0.</li> <li>on parcourt la liste, et pour chaque valeur de la liste, on la compare \u00e0 <code>maxi</code> : si elle est plus grande, alors on actualise <code>maxi</code> par cette valeur.</li> </ul> <p>Parcours par \u00e9l\u00e9ment: <pre><code>def maximum(tab:list) -&gt; int:\n    maxi = tab[0]\n    for element in tab:\n        if element &gt; maxi:\n            maxi = element\n    return maxi\n</code></pre></p> <p>Parcours par indice: <pre><code>def maximum(tab:list) -&gt; int:\n    maxi = tab[0]\n    for i in range(len(tab)):\n        if tab[i] &gt; maxi:\n            maxi = tab[i]\n    return maxi\n</code></pre></p> <p>Exercice  3 : Le jeu du + ou -</p> \u00c9nonc\u00e9Correction <p>Alice: \u00ab Je pense \u00e0 un nombre entre 1 et 100. Bob, essaie de le deviner ! \u00bb </p> <p>Bob: \u00ab Ok. 50 ? \u00bb</p> <p>Alice: \u00ab C'est moins! \u00bb</p> <p>Bob: \u00ab 20 ? \u00bb</p> <p>Alice: \u00ab C'est plus! \u00bb</p> <p>Bob: \u00ab 40 ? \u00bb</p> <p>Alice: \u00ab C'est plus! \u00bb</p> <p>Bob: \u00ab 45? \u00bb</p> <p>Alice: \u00ab C'est moins! \u00bb</p> <p>Bob: \u00ab 42? \u00bb</p> <p>Alice: \u00ab Bravo! Tu as devin\u00e9! \u00bb</p> <p>Programmer ce jeu (pas n\u00e9cessairement de fonctions ici).</p> <p>Indications (version de base): - Dans un premier temps, le nombre \u00e0 deviner est fix\u00e9.  - On saisira les propositions de l'utilisateur (Bob) avec la fonction <code>input</code>. - Le programme s'arr\u00eate quand l'utilisateur donne la bonne r\u00e9ponse, et sinon affiche \u00ab C'est plus! \u00bb ou \u00ab C'est moins! \u00bb selon les cas.</p> <p>Am\u00e9liorations possibles - Le nombre \u00e0 deviner est choisi de fa\u00e7on al\u00e9atoire. Voir T6.2 Biblioth\u00e8ques  pour la fonction <code>randint</code> du module <code>random</code>. - Le programme affiche le nombre de tentatives pour trouver. - Le programme joue seul, de fa\u00e7on intelligente.</p> <pre><code>import random\n\nnbr_essais = 1\nnbr_alea =random.randint(0, 100) # nombre choisi par l'ordinateur\nmon_nombre = 0 # nombre propos\u00e9 par BOB\n\nwhile mon_nombre != nbr_alea :\n    print(f\"Essai numeros {nbr_essais}\")\n    mon_nombre = int(input(\"Entrez un nombre entier : \"))\n    if mon_nombre &lt; nbr_alea:\n        print(\"C'est plus!\")\n    elif mon_nombre &gt; nbr_alea:\n        print(\"C'est moins!\")\n    else:\n        print(f\"Bravo BOB ! Tu as trouv\u00e9 en {nbr_essais} essai(s)\")\n    nbr_essais += 1\n</code></pre>"},{"location":"T09_Evaluations/DL/DL3/","title":"DL0011","text":"<p>Objectif</p> <p>L'objectif de ce DL est de r\u00e9soudre les deux pyd\u00e9fis :</p> <ol> <li>Pi\u00e8ge num\u00e9rique \u00e0 Pokemons </li> <li>Bombe \u00e0 d\u00e9samorcer </li> </ol> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>somme_chiffres</code> qui prend un entier <code>n</code> en param\u00e8tre et renvoie la somme de ses chiffres. La sp\u00e9cifier et \u00e9crire des tests.</p> <p>Pour cela deux strat\u00e9gies sont possibles...</p> Strat\u00e9gie 1: la matheuseStrat\u00e9gie 2: la non-matheuse <p>Comme on l'a d\u00e9j\u00e0 vu plus t\u00f4t dans l'ann\u00e9e, on peut utiliser la division euclidienne par 10 pour \u00abd\u00e9couper\u00bb un nombre entier:</p> <ul> <li>le reste (<code>% 10</code>) renvoie le chiffre des unit\u00e9s;</li> <li>le quotient (<code>// 10</code>) renvoie le nombre sans son chiffre des unit\u00e9s;</li> </ul> <pre><code>&gt;&gt;&gt; 2025 % 10\n5\n&gt;&gt;&gt; 2025 // 10\n202\n</code></pre> <p>Il ne reste plus qu'\u00e0 cr\u00e9er une boucle et ajouter \u00e0 une variable accumulatrice...</p> <p>Comme on le sait, un nombre entier n'est pas un iterable: on ne peut pas parcourir ses chiffres.</p> <p>Mais une cha\u00eene de caract\u00e8re l'est... l'astuce consiste donc \u00e0 convertir l'entier en cha\u00eene de caract\u00e8re avec la fonction <code>str</code>, de la parcourir et de reconvertir chacun des caract\u00e8res en entier avec la fonction <code>int</code> avant de les ajouter \u00e0  une variable accumulatrice.</p> <p>Strat\u00e9gie 1:</p> <pre><code>def somme_chiffres(n:int) -&gt; int:\n    somme = 0\n    while n != 0:\n        somme += n % 10\n        n = n // 10\n    return somme\n</code></pre> <p>Strat\u00e9gie 2:</p> <pre><code>def somme_chiffres(n:int) -&gt; int:\n    somme = 0\n    for chiffre in str(n):\n        somme += int(chiffre)\n    return somme\n</code></pre> <p>Bonus 1 </p> <p>\u00c0 l'aide de la fonction <code>sum</code> , qui renvoie la somme des \u00e9l\u00e9ments d'une liste donn\u00e9e en param\u00e8tre, et d'une liste en compr\u00e9hension, sauriez-vous \u00e9crire la fonction pr\u00e9c\u00e9dente en une seule ligne?</p> <pre><code>def somme_chiffres(n:int) -&gt; int:\n    return sum([int(chiffre) for chiffre in str(n)])\n</code></pre> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>R\u00e9soudre le premier pyd\u00e9fi.</p> <pre><code>liste_nombres = []\nfor nombre in range(1000):\n    if nombre % 7 == 0 and somme_chiffres(nombre) == 11:\n        liste_nombres.append(nombre)\n</code></pre> <p>Bonus 2 </p> <p>R\u00e9soudre ce pyd\u00e9fi \u00e0 l'aide d'une liste en compr\u00e9hension.</p> <pre><code>liste_nombres = [nombre for nombre in range(1000) if nombre % 7 == 0 and somme_chiffres(nombre) == 11]\n</code></pre> <p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>R\u00e9soudre le deuxi\u00e8me pyd\u00e9fi.</p> <p>Si vous n'avez pas de compte ou ne souhaitez pas en cr\u00e9er un, voici la liste des permutations \u00e0 utiliser:</p> <pre><code>lst = [25, 31, 43, 12, 12, 43, 31, 35, 54, 23, 12, 23, 12, 21, 45, 43, 41, 45, 43, 45, 35, 15, 53, 41, 51, 45, 12, 31, 14, 45, 12, 24, 32, 24, 21, 21, 51, 31, 53, 25, 12, 43, 35, 13, 23, 54, 34, 32, 23, 15, 23, 42, 41, 43, 13, 14, 52, 14, 53, 41, 14, 43, 35, 42, 32, 21, 51, 52, 24, 51, 12, 12, 52, 34, 35, 54, 21, 41, 32, 32, 34, 12, 41, 34, 43, 41, 35, 12, 32, 51, 34, 15, 25, 43, 45, 45, 45, 52, 31, 43]\n</code></pre> <p>Remarques/conseils:</p> <ul> <li>Manipuler les chiffres dans une liste. Au d\u00e9part, <code>[3, 4, 1, 2, 5]</code>.</li> <li>Parcourir la liste des permutations, s\u00e9parer les deux chiffres en utilisant l'une des deux strat\u00e9gies de l'exercice 1.</li> <li>Il est peut-\u00eatre judicieux d'\u00e9crire une fonction qui effectue une seule permutation (donn\u00e9e en param\u00e8tre).</li> <li>Ne pas confondre le num\u00e9ro de la permutation qui indique la position dans la liste et non l'indice (il faut d\u00e9caler de 1).</li> <li>V\u00e9rifier le code sur l'exemple (<code>[14, 25, 13]</code>)  avant de l'ex\u00e9cuter sur la liste des permutations du probl\u00e8me.</li> </ul> <pre><code>lst = [25, 31, 43, 12, 12, 43, 31, 35, 54, 23, 12, 23, 12, 21, 45, 43, 41, 45, 43, 45, 35, 15, 53, 41, 51, 45, 12, 31, 14, 45, 12, 24, 32, 24, 21, 21, 51, 31, 53, 25, 12, 43, 35, 13, 23, 54, 34, 32, 23, 15, 23, 42, 41, 43, 13, 14, 52, 14, 53, 41, 14, 43, 35, 42, 32, 21, 51, 52, 24, 51, 12, 12, 52, 34, 35, 54, 21, 41, 32, 32, 34, 12, 41, 34, 43, 41, 35, 12, 32, 51, 34, 15, 25, 43, 45, 45, 45, 52, 31, 43]\n\nfils = [3, 4, 1, 2, 5]\nfor permutation in lst:\n    i = permutation // 10 - 1\n    j = permutation % 10 - 1\n    temp = fils[i]\n    fils[i] = fils[j]\n    fils[j] = temp\n</code></pre>"},{"location":"T09_Evaluations/DS/DS2/","title":"DS0010 (Corrig\u00e9)","text":"<p>Exercice 1</p> <p>Question 1: 6</p> <p>Question 2: <code>10100011</code></p> <p>Question 3: <code>9D</code></p> <p>Question 4: <code>C3</code></p> <p>Question 5: <code>a = b</code></p> <p>Question 6: <code>x == 3 or y == 5</code></p> <p>Question 7: 4</p> <p>Question 8: <code>IndentationError</code></p> <p>Exercice 2</p> <pre><code> # Question 1\nscore = 0\nscore = score + 100\n# ou\nscore == 100\n\n # Question 2\nlargeur_ecran = 640\nhauteur_ecran = 400\n\n # Question 3\n z = x\n x = y\n y = z\n\n # ou\n z = y\n y = x\n x = z\n</code></pre> <p>Exercice 3</p> <pre><code>H\nO\nM\nE\nR\nD'oh!\n</code></pre> <p>puis  <pre><code>19 9 1\n</code></pre></p> <p>Exercice 4</p> <ol> <li><code>range(5)</code> donne la s\u00e9quence d'entiers <code>0, 1, 2, 3, 4</code>.</li> <li><code>range(2, 10)</code> donne la s\u00e9quence d'entiers <code>2, 3, 4, 5, 6, 7, 8, 9</code>.</li> <li><code>range(0, 20, 3)</code> donne la s\u00e9quence d'entiers <code>0, 3, 6, 9, 12, 15, 18</code>.</li> </ol> <p>Exercice 5</p> <pre><code>for k in range(1, 14):\n    print(f\"Vendredi {f}\")\n</code></pre> <p>Exercice 6</p> <pre><code>print(\"Voici le verdict du Choixpeau Magique :\")\nfor prenom in [\"Harry\", \"Hermione\", \"Ron\", \"Neuville\"]:\n    print(f\"{prenom}, maison Griffondor\")\n</code></pre> <p>Exercice 7</p> <pre><code>films = [\u2019Retour vers le futur\u2019, \u2019Le Parrain\u2019, \u2019Iron-Man\u2019, \u2019Rambo\u2019]\nprint(\"Mes films favoris:\")\nfor film in films:\n    for i in range(1, 4):\n        print(film, i)\n</code></pre>"},{"location":"T10Club/accueil/","title":"Club","text":"<p>Planning des \u00e9preuves</p> <ul> <li>Octobre (du 1er au 24): CSAW'24 / Red Team Competition  - CTF - National - </li> <li>D\u00e9cembre: Advent of Code - PROG - International - </li> <li>D\u00e9cembre \u00e0 F\u00e9vrier : Cod\u00e9moi - PROG - Acad\u00e9mique - </li> <li>Janvier-F\u00e9vrier (?) : Passe Ton Hack d'Abord - CTF - National - </li> <li>Mars : c0d1ng UP - PROG/Marathon - R\u00e9gional/National - </li> <li>Mai : La nuit du code - 6h pour coder un jeu - PROG/Marathon - International - </li> </ul>"},{"location":"T10Club/CTF/accueil_CTF/","title":"CTF","text":"<p>CTF</p> <p>\u00c9preuve type Capture The Flag ax\u00e9e Cybers\u00e9curit\u00e9</p> <p>Sites d'entra\u00eenement:</p> <ul> <li>The OSINT Project </li> <li>Root me </li> <li>Try hack me </li> <li>Hackropole </li> </ul>"},{"location":"T10Club/PROG/accueil_prog/","title":"PROG","text":"<p>PROG</p> <p>\u00c9preuve de programmation: r\u00e9solution de probl\u00e8mes de diff\u00e9rents types n\u00e9cessitant l'\u00e9criture d'un programme (en Python par exemple).</p> <p>De type \u00abMarathon\u00bb sur une journ\u00e9e (environ 6h) comme c0d1ng UP et la nuit du code ou \u00e9chelonn\u00e9e sur plusieurs semaines comme Advent of Code et Cod\u00e9moi.</p> <p>Sites d'entra\u00eenement:</p> <ul> <li>PyD\u00e9fis </li> <li>Cod\u00e9moi </li> <li>Advent of Code </li> <li>Hackinscience </li> </ul>"},{"location":"T10Club/PROG/parsing/","title":"Parsing","text":"<p>En informatique le parsing d\u00e9signe le parcours d'un texte pour l'analyser ou en extraire des informations.</p> <p>Dans de nombreux d\u00e9fis/challenges, l'entr\u00e9e du probl\u00e8me consiste en un texte dans lequel il faut extraire des donn\u00e9es sur lesquelles ex\u00e9cuter un programme pour obtenir le flag/la solution.</p> <p>Dans certains cas, il est utile de t\u00e9l\u00e9charger les donn\u00e9es dans un simple fichier texte (au format <code>.txt</code>) puis de l'ouvrir avec Python. Dans d'autre cas, comme dans des d\u00e9fis r\u00e9seau, on travaille avec une variable de type <code>str</code> .</p>"},{"location":"T10Club/PROG/parsing/#lecture-dun-fichier-texte","title":"Lecture d'un fichier texte","text":"<p>Lecture d'un fichier texte</p> <p>Voici deux principales m\u00e9thodes pour lire un fichier texte \u00e0 l'aide de la fonction <code>open</code> (aucun module requis, elle fait partie des fonctions natives de Python) :</p> M\u00e9thode 1: sans traitementM\u00e9thode 2: avec traitement <p>Si on n'a pas besoin de traiter les donn\u00e9es sur chaque ligne du fichier texte, on peut r\u00e9cup\u00e9rer le fichier sous forme d'une liste (<code>data</code> ici), o\u00f9 chaque \u00e9l\u00e9ment sera une ligne du fichier (<code>input.txt</code> ici), de type <code>str</code> bien entendu, avec:</p> <pre><code>data = open('input.txt').read().splitlines()\n</code></pre> <p>On peut \u00e9galement parcourir ligne par ligne le fichier ainsi:</p> <pre><code>data = []\nwith open('input.txt') as f:\n    for line in f.readlines():\n        data.append(line.strip())\n</code></pre> <p>Ce code est identique \u00e0 la m\u00e9thode 1, mais la boucle <code>for</code> permet de faire un traitement de la cha\u00eene de caract\u00e9res <code>line</code> avant ajout \u00e0 la liste <code>data</code>.</p> <p>Remarque: la m\u00e9thode <code>strip</code> permet de \u00abnettoyer\u00bb la cha\u00eene de caract\u00e8res, c'est-\u00e0-dire ici d'enlever le caract\u00e8re <code>\\n</code> de retour \u00e0 la ligne.</p>"},{"location":"T10Club/PROG/parsing/#decouperextraire-des-donnees","title":"D\u00e9couper/extraire des donn\u00e9es","text":"<p>Une fois le texte r\u00e9cup\u00e9r\u00e9, il faut bien souvent en extraire des informations.</p> <p>Exemples</p> Advent of Code 2022 - Day 2c0d1ngUP  202 - Code Konami <p>Donn\u00e9es d'entr\u00e9e: <pre><code>B Y\nA X\nC Z\nA Z\nB Y\nB Y\nA X\nC Z\nB Y\nB Y\n</code></pre></p> <p>Ici les donn\u00e9es repr\u00e9sentent des combats de \u00abPapier-Feuille-Ciseaux\u00bb avec A, B, C pour un joueur et X, Y, Z pour l'autre.</p> <p>On veut r\u00e9cup\u00e9rer dans chaque ligne les coups de chaque joueur pour pouvoir les comparer et compter le nombre de victoires de chacun.</p> <p>Donn\u00e9es d'entr\u00e9e:</p> <pre><code>\u2190\u2190 -&gt; h\n\u2190\u2191 -&gt; !\n\u2190\u2192 -&gt; m\n\u2190\u2193 -&gt; l\n\u2190A -&gt; s\n\u2190B -&gt; ,\n\u2191\u2190 -&gt; r\n\u2191\u2191 -&gt; p\n\u2191\u2192 -&gt; x\n\u2191\u2193 -&gt; b\n\u2191A -&gt; j\n\u2191B -&gt; v\n\u2192\u2190 -&gt; a\n\u2192\u2191 -&gt; i\n</code></pre> <p>Ici on souhaite r\u00e9cup\u00e9rer d'une part les deux premiers caract\u00e8res, d'autre part le dernier. Voir d\u00e9fi plus bas. </p> <p>Si on peut toujours raisonner sur les indices des caract\u00e8res \u00e0 r\u00e9cup\u00e9rer dans la cha\u00eene, c'est souvent p\u00e9nible et long. Il est alors pr\u00e9f\u00e9rable de d\u00e9couper la cha\u00eene de caract\u00e8res et de r\u00e9cup\u00e9rer chaque morceau dans une liste de <code>str</code> .</p> <p><code>split</code></p> <p>On peut d\u00e9couper une cha\u00eene de caract\u00e8res avec la m\u00e9thode <code>split</code>:</p> <ul> <li>sans param\u00e8tre, elle d\u00e9coupe sur le caract\u00e8re espace;</li> <li>avec un param\u00e8tre de type <code>str</code>, elle d\u00e9coupe selon cette cha\u00eene de caract\u00e8res.</li> </ul> <p>Dans les deux cas, le caract\u00e8re de d\u00e9coupe est supprim\u00e9. La m\u00e9thode <code>split</code>  retourne une liste.</p> <p>Exemples: <pre><code>&gt;&gt;&gt; p = \"Un ordinateur, c'est compl\u00e8tement con.\"\n&gt;&gt;&gt; p.split()\n['Un', 'ordinateur,', \"c'est\", 'compl\u00e8tement', 'con.']\n&gt;&gt;&gt; m = 'Abracadabra'\n&gt;&gt;&gt; m.split('a')\n['Abr', 'c', 'd', 'br', '']\n&gt;&gt;&gt; line = \"\u2191B -&gt; v\"\n&gt;&gt;&gt; line.split(' -&gt; ')\n['\u2191B', 'v']\n</code></pre></p> <p>Pour s'entra\u00eener:</p> <p>c0d1ngUP 2018 : SW VII Les noms des Ewoks I </p> <p>c0d1ngUP 2018 : SW VII Les noms des Ewoks II </p> <p>c0d1ngUP 2022 : Code Konami</p> <p>AoC 2022 : Day 2</p>"},{"location":"T10Club/PROG/parsing/#fusionner-des-chaines-de-caracteresrenvoyer-une-reponse","title":"Fusionner des cha\u00eenes de caract\u00e8res/renvoyer une r\u00e9ponse","text":"<p>Parfois il est n\u00e9cessaire de fusionner/concat\u00e9ner des cha\u00eenes de caract\u00e8res pour obtenir une r\u00e9ponse. Si ces cha\u00eenes de caract\u00e8res sont les \u00e9l\u00e9ments d'une liste, on peut utiliser la m\u00e9thode <code>join</code>:</p> <p><code>join</code></p> <p>On peut fusionner avec la m\u00e9thode <code>join</code> les \u00e9lements d'une liste dont tous les \u00e9l\u00e9ments sont de type <code>str</code>, avec un caract\u00e8re d'insertion entre les \u00e9l\u00e9ments.</p> <pre><code>&gt;&gt;&gt; l = ['P', 'y', 't', 'h', 'o', 'n']\n&gt;&gt;&gt; \"\".join(l)\n'Python'\n&gt;&gt;&gt; \" \".join([\"NSI\", \"c'est\", \"de\", \"l'eau\"])\n\"NSI, c'est de l'eau\"\n&gt;&gt;&gt; liste_alphabet = [chr(k) for k in range(65, 91)]\n&gt;&gt;&gt; liste_alphabet\n['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n&gt;&gt;&gt; \"\".join(liste_alphabet)\n'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n&gt;&gt;&gt; \n</code></pre>"},{"location":"T10Club/PROG/requete/","title":"D\u00e9fi par requ\u00eate web","text":""},{"location":"T10Club/PROG/requete/#challenges-pydefisc0d1ngup","title":"Challenges Pyd\u00e9fis/c0d1ngUP","text":"<p>Pour certains d\u00e9fis les donn\u00e9es d'entr\u00e9e ne sont pas visibles, il faut les r\u00e9cup\u00e9rer par une requ\u00eate de type <code>get</code>  et renvoyer le r\u00e9sultat \u00e9galement par une requ\u00eate de type <code>post</code>.</p> <p>On utilisera pour cela le module <code>requests</code>.</p> <pre><code>import requests as rq\n\n'''\nPremi\u00e8re requ\u00eate de type get pour r\u00e9cup\u00e9rer les donn\u00e9es.\n- url_entree: donn\u00e9e dans le probl\u00e8me, format str (entre quotes)\n- data: dictionnaire, contenant les donn\u00e9es du probl\u00e8me\n'''\nr = requests.get(url_entree, verify=True)\ndata = r.json()\n\n... # r\u00e9solution du probl\u00e8me, dans une variable \"solution\" par ex.\n\n'''\nDeuxi\u00e8me requ\u00eate en fin de programme de type post pour envoyer la r\u00e9ponse.\n- url_sortie: donn\u00e9e dans le probl\u00e8me, format str (entre quotes)\n- solution: dictionnaire, contenant la solution du probl\u00e8me\n'''\nr = requests.post(url_sortie, json=solution, verify=True)\nprint(r.json())\n</code></pre> <p>Signature</p> <p>Dans les challenges pyd\u00e9fis, le dictionnaire r\u00e9cup\u00e9r\u00e9 contient une signature, associ\u00e9 \u00e0 la cl\u00e9 <code>'signature'</code> . Il ne faut donc pas oublier d'ajouter cette signature au dictionnaire renvoy\u00e9e par: <pre><code>solution['signature'] = data['signature']\n</code></pre></p>"},{"location":"T10Club/PROG/son/","title":"Audio","text":"<p>On manipule des fichiers au format <code>wav</code> avec les modules suivants:</p> <pre><code>import scipy.io.wavfile as swf\nimport numpy as np\n\n'''\nLecture d'un fichier wav.\nOn r\u00e9cup\u00e8re:\n- rate : fr\u00e9quence d'\u00e9chantillonnage (en g\u00e9n\u00e9ral 44100 Hz)\n- data :  un tableau 2D (ou 1D si c'est du mono), avec les valeurs du canal gauche\net du canal droit, au format numpy.\n'''\n\nrate, data = swf.read('fichier_audio.wav')\n\n\n'''\n\u00c9criture dans un fichier audio d'un tableau 2D nomm\u00e9 tab (converti au format numpy):\n'''\n\nswf.write('fichier_audio.wav', rate, np.array(tab, dtype=np.int16))\n</code></pre> <p>Voir \u00e9galement la documentation du module et le format wav .</p>"},{"location":"data/example_GL/","title":"example GL","text":"<p>En route vers Mkdocs ! \u00e0 22h52</p>"},{"location":"data/example_GL/#on-teste-pyodide","title":"On teste Pyodide","text":""},{"location":"data/example_GL/#une-console","title":"Une console ?","text":"&gt;&gt;&gt;  <p>Il semblerait que \u00e7a marche... Bon faudra peut-\u00eatre retoucher le CSS</p>"},{"location":"data/example_GL/#un-ide","title":"Un IDE ?","text":"<p>bien ?</p> \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f <p></p> <p>\\(f(x)= \\frac{x}{2}+5\\)</p> <p>test</p> Exercice  4 \u00c9nonc\u00e9Solution <p>Calculer la somme des entiers \\(n\\) de 0 jusqu'\u00e0 100. \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f </p> <pre><code>somme = 0\nfor n in range(0,101):\n    somme = somme + n\nprint(somme)\n</code></pre> Exercice  5 \u00c9nonc\u00e9Solution <p>Calculer la somme des entiers \\(n\\) de 0 jusqu'\u00e0 100. \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f </p> <p>```python somme = 0 for n in range(0,101):     somme = somme + n print(somme)</p> Exercice  6 \u00c9nonc\u00e9Solution <p>Calculer la somme des entiers \\(n\\) de 0 jusqu'\u00e0 100. \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f </p> <p>```python somme = 0 for n in range(0,101):     somme = somme + n print(somme)</p> <p>Remarque</p> <p>un truc super utile pour mettre des infos suppl\u00e9mentaires</p> <p>La cryptographie blablabla...</p> <p>On saute</p> <p>Attention</p> <p>Un exercice est inclus dans le script ci-dessous.</p> <pre><code>def ens_triangle(n):\n    \"\"\"Renvoie l'ensemble des points\n       - \u00e0 coordonn\u00e9es enti\u00e8res ;\n       - inclus dans le triangle de c\u00f4t\u00e9 n.\n    \"\"\"\n    points = {}\n    for i in range(n+1):\n        for j in range(n+1):\n            if i + j &lt;= n:\n                points.add( (i, j) )\n    return points\n</code></pre>"},{"location":"data/example_GL/#reponses-aux-problemes","title":"R\u00e9ponses aux probl\u00e8mes","text":"R\u00e9ponses Probl\u00e8meTriangle ; \\(n=6\\)Rectangle ; \\(n=6\\) et \\(m=10\\)Hexagone ; \\(n=5\\)Hexagone \u00e9toil\u00e9 ; \\(n=3\\) <p>Vous pouvez obtenir la r\u00e9ponse, mais avez-vous bien cherch\u00e9 avant ?</p> <p>Il y a \\(78\\) triangles.</p> <p>Il y a \\(1155\\) rectangles.</p> <p>Il y a \\(496\\) triangles.</p> <p>Il y a \\(354\\) triangles.</p>"},{"location":"data/example_GL/#test-abreviations","title":"test abr\u00e9viations","text":"<p>Il suffit de faire comme \u00e7a</p> <p>et voil\u00e0.</p>"},{"location":"data/example_GL/#admonitions","title":"admonitions","text":"Note <p>fdsfjlk fdsjflk dskfl</p> <p>vd</p> <p>Info</p> <p>fdjslkfs sdfkjdlk sdfklj</p> <p>fjsdlfk</p> Method Description <code>GET</code>      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource <p>Hormis la base 10, deux bases sont utilis\u00e9es en informatique :</p> <ul> <li>la base 2  (le syst\u00e8me binaire)</li> <li>la base 16 (le syst\u00e8me hexad\u00e9cimal)</li> </ul> <p>Dans toute la suite, la base dans laquelle le nombre est \u00e9crit sera pr\u00e9cis\u00e9e en indice. Exemple : \\(13_{10}=1101_2=\\rm{D}_{16}\\)</p>"},{"location":"data/example_GL/#i-le-systeme-binaire","title":"I. Le syst\u00e8me binaire","text":"<p>En base 2, on ne dispose que des chiffres <code>0</code> et <code>1</code>. Le syst\u00e8me binaire est un syst\u00e8me de num\u00e9ration de position (comme le syst\u00e8me d\u00e9cimal, hexad\u00e9cimal... mais pas comme le syst\u00e8me romain). \u00c0 chaque rang correspond une puissance de 2.</p>"},{"location":"data/example_GL/#du-binaire-vers-le-decimal","title":"Du binaire vers le d\u00e9cimal :","text":"... 128 64 32 16 8 4 2 1 ... \\(2^7\\) \\(2^6\\) \\(2^5\\) \\(2^4\\) \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) ... 1 1 0 1 0 0 1 0 <p>\\(11010010_2=1 \\times 2^7+ 1 \\times 2^6+0 \\times 2^5+1 \\times 2^4+0 \\times 2^3+0 \\times 2^2+1 \\times 2^1+0 \\times 2^0=128+64+32+2=210_{10}\\)</p> <p>Le nombre binaire 11010010 correspond donc au nombre d\u00e9cimal 210.</p> <p>##### En python :  En Python, on peut utiliser la fonction <code>int(\"nombre\",base)</code>.</p> &gt;&gt;&gt;"}]}